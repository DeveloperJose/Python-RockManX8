<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="42">
  <CheatEntries>
    <CheatEntry>
      <ID>153</ID>
      <Description>"MegaMan X5"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>148</ID>
          <Description>"Inf. HP"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-08
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfHPX5_AOB,RXC2.exe,80 78 10 80 0F 84 42 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  cmp byte ptr [eax+10],-80
  je RXC2.exe+1E7BCF4
  push ebx
  push ebp
  movsx ebp,byte ptr [eax-72]
  mov ebx,[RXC2.exe+033F7444]
  mov bl,[ebp+ebx+9B]
  mov [eax+10],bl
  pop ebx
  pop ebp
  jmp return

InfHPX5_AOB:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(InfHPX5_AOB)

[DISABLE]

InfHPX5_AOB:
  db 80 78 10 80 0F 84 42 01 00 00

unregistersymbol(InfHPX5_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E7A868

"RXC2.exe"+1E7A841: 75 1D                 -  jne RXC2.exe+1E7A860
"RXC2.exe"+1E7A843: 8B 0D D4 53 7F 03     -  mov ecx,[RXC2.exe+33F53D4]
"RXC2.exe"+1E7A849: 0F BE 42 10           -  movsx eax,byte ptr [edx+10]
"RXC2.exe"+1E7A84D: 83 E0 7F              -  and eax,7F
"RXC2.exe"+1E7A850: 01 81 0C 01 00 00     -  add [ecx+0000010C],eax
"RXC2.exe"+1E7A856: 8B 87 A4 02 00 00     -  mov eax,[edi+000002A4]
"RXC2.exe"+1E7A85C: C6 40 10 80           -  mov byte ptr [eax+10],-80
"RXC2.exe"+1E7A860: 8B 87 A4 02 00 00     -  mov eax,[edi+000002A4]
"RXC2.exe"+1E7A866: 53                    -  push ebx
"RXC2.exe"+1E7A867: 56                    -  push esi
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E7A868: 80 78 10 80           -  cmp byte ptr [eax+10],-80
"RXC2.exe"+1E7A86C: 0F 84 42 01 00 00     -  je RXC2.exe+1E7A9B4
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E7A872: 8A 97 43 01 00 00     -  mov dl,[edi+00000143]
"RXC2.exe"+1E7A878: 8A C2                 -  mov al,dl
"RXC2.exe"+1E7A87A: 24 0C                 -  and al,0C
"RXC2.exe"+1E7A87C: 3C 0C                 -  cmp al,0C
"RXC2.exe"+1E7A87E: 0F 95 C1              -  setne cl
"RXC2.exe"+1E7A881: 80 E2 03              -  and dl,03
"RXC2.exe"+1E7A884: 80 FA 03              -  cmp dl,03
"RXC2.exe"+1E7A887: 0F 95 C0              -  setne al
"RXC2.exe"+1E7A88A: 84 C8                 -  test al,cl
"RXC2.exe"+1E7A88C: 0F 85 22 01 00 00     -  jne RXC2.exe+1E7A9B4
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>152</ID>
          <Description>"Invincible"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-08
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InvincibleX5_AOB,RXC2.exe,0F 2F C8 76 6B) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  push ebx
  cmp byte ptr [edi+156],00
  jne code
  mov ebx,#75
  movd xmm1,ebx
  cvtdq2ps xmm1,xmm1
  movss [ecx+20],xmm1
code:
  pop ebx
  comiss xmm1,xmm0
  jna RXC2.exe+1E7BE30
  jmp return

InvincibleX5_AOB:
  jmp newmem
return:
registersymbol(InvincibleX5_AOB)

[DISABLE]

InvincibleX5_AOB:
  db 0F 2F C8 76 6B

unregistersymbol(InvincibleX5_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E7AA80

"RXC2.exe"+1E7AA5F: E8 EC 12 00 00                 -  call RXC2.exe+1E7BD50
"RXC2.exe"+1E7AA64: 5E                             -  pop esi
"RXC2.exe"+1E7AA65: 5B                             -  pop ebx
"RXC2.exe"+1E7AA66: 5F                             -  pop edi
"RXC2.exe"+1E7AA67: 81 C4 08 04 00 00              -  add esp,00000408
"RXC2.exe"+1E7AA6D: C3                             -  ret 
"RXC2.exe"+1E7AA6E: E8 0D BA A8 00                 -  call RXC2.exe+2906480
"RXC2.exe"+1E7AA73: D9 5C 24 0C                    -  fstp dword ptr [esp+0C]
"RXC2.exe"+1E7AA77: F3 0F 10 4C 24 0C              -  movss xmm1,[esp+0C]
"RXC2.exe"+1E7AA7D: 0F 57 C0                       -  xorps xmm0,xmm0
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E7AA80: 0F 2F C8                       -  comiss xmm1,xmm0
"RXC2.exe"+1E7AA83: 76 6B                          -  jna RXC2.exe+1E7AAF0
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E7AA85: 8B 8F A4 02 00 00              -  mov ecx,[edi+000002A4]
"RXC2.exe"+1E7AA8B: E8 F0 B9 A8 00                 -  call RXC2.exe+2906480
"RXC2.exe"+1E7AA90: 8B 8F A4 02 00 00              -  mov ecx,[edi+000002A4]
"RXC2.exe"+1E7AA96: D9 9F B4 02 00 00              -  fstp dword ptr [edi+000002B4]
"RXC2.exe"+1E7AA9C: E8 DF B9 A8 00                 -  call RXC2.exe+2906480
"RXC2.exe"+1E7AAA1: 8D 44 24 0C                    -  lea eax,[esp+0C]
"RXC2.exe"+1E7AAA5: 50                             -  push eax
"RXC2.exe"+1E7AAA6: D9 5C 24 10                    -  fstp dword ptr [esp+10]
"RXC2.exe"+1E7AAAA: E8 91 2D FD FF                 -  call RXC2.exe+1E4D840
"RXC2.exe"+1E7AAAF: F3 0F 10 44 24 10              -  movss xmm0,[esp+10]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>147</ID>
          <Description>"Inf, Ammo"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-08
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfAmmoX5_AOB,RXC2.exe,66 29 86 22 03 00 00) // should be unique
aobscanmodule(InfAmmoX5_AOB2,RXC2.exe,66 29 86 26 03 00 00) // should be unique
aobscanmodule(InfAmmoX5_AOB3,RXC2.exe,66 29 86 28 03 00 00) // should be unique
registersymbol(InfAmmoX5_AOB)
registersymbol(InfAmmoX5_AOB2)
registersymbol(InfAmmoX5_AOB3)


InfAmmoX5_AOB:
  db 90 90 90 90 90 90 90

InfAmmoX5_AOB2:
  db 90 90 90 90 90 90 90

InfAmmoX5_AOB3:
  db 90 90 90 90 90 90 90

[DISABLE]

InfAmmoX5_AOB:
  db 66 29 86 22 03 00 00

InfAmmoX5_AOB2:
  db 66 29 86 26 03 00 00

InfAmmoX5_AOB3:
  db 66 29 86 28 03 00 00

unregistersymbol(InfAmmoX5_AOB)
unregistersymbol(InfAmmoX5_AOB2)
unregistersymbol(InfAmmoX5_AOB3)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E82C14

"RXC2.exe"+1E82BF6: 5E                    -  pop esi
"RXC2.exe"+1E82BF7: C3                    -  ret 
"RXC2.exe"+1E82BF8: 8B CE                 -  mov ecx,esi
"RXC2.exe"+1E82BFA: 5E                    -  pop esi
"RXC2.exe"+1E82BFB: E9 60 AD FF FF        -  jmp RXC2.exe+1E7D960
"RXC2.exe"+1E82C00: 0F BE 81 49 01 00 00  -  movsx eax,byte ptr [ecx+00000149]
"RXC2.exe"+1E82C07: 56                    -  push esi
"RXC2.exe"+1E82C08: FF 74 24 08           -  push [esp+08]
"RXC2.exe"+1E82C0C: 8D 34 41              -  lea esi,[ecx+eax*2]
"RXC2.exe"+1E82C0F: E8 9C AF FF FF        -  call RXC2.exe+1E7DBB0
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E82C14: 66 29 86 22 03 00 00  -  sub [esi+00000322],ax
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E82C1B: 5E                    -  pop esi
"RXC2.exe"+1E82C1C: C2 04 00              -  ret 0004
"RXC2.exe"+1E82C1F: CC                    -  int 3 
"RXC2.exe"+1E82C20: A1 D4 53 7F 03        -  mov eax,[RXC2.exe+33F53D4]
"RXC2.exe"+1E82C25: 8A 80 9D 00 00 00     -  mov al,[eax+0000009D]
"RXC2.exe"+1E82C2B: 88 81 77 01 00 00     -  mov [ecx+00000177],al
"RXC2.exe"+1E82C31: 80 B9 77 01 00 00 03  -  cmp byte ptr [ecx+00000177],03
"RXC2.exe"+1E82C38: 0F B6 D0              -  movzx edx,al
"RXC2.exe"+1E82C3B: A1 D4 53 7F 03        -  mov eax,[RXC2.exe+33F53D4]
"RXC2.exe"+1E82C40: 8B 84 90 DC 00 00 00  -  mov eax,[eax+edx*4+000000DC]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>376</ID>
          <Description>"Inf. Giga Attack"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-16
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfGigaAttackX5_AOB,RXC2.exe,6A 00 6A 00 8B CE E8 BE) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
//  push 00
//  push 00
  mov ecx,esi
  jmp return

InfGigaAttackX5_AOB:
  jmp newmem
  nop
return:
registersymbol(InfGigaAttackX5_AOB)

[DISABLE]

InfGigaAttackX5_AOB:
  db 6A 00 6A 00 8B CE

unregistersymbol(InfGigaAttackX5_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E8C0C7

"RXC2.exe"+1E8C08F: 8B 8E A4 02 00 00              -  mov ecx,[esi+000002A4]
"RXC2.exe"+1E8C095: 6A 00                          -  push 00
"RXC2.exe"+1E8C097: E8 C4 B7 FE FF                 -  call RXC2.exe+1E77860
"RXC2.exe"+1E8C09C: 8B 86 A4 02 00 00              -  mov eax,[esi+000002A4]
"RXC2.exe"+1E8C0A2: C6 86 56 01 00 00 00           -  mov byte ptr [esi+00000156],00
"RXC2.exe"+1E8C0A9: C7 86 C0 02 00 00 00 00 00 00  -  mov [esi+000002C0],00000000
"RXC2.exe"+1E8C0B3: C6 86 C9 01 00 00 00           -  mov byte ptr [esi+000001C9],00
"RXC2.exe"+1E8C0BA: C6 40 1A 01                    -  mov byte ptr [eax+1A],01
"RXC2.exe"+1E8C0BE: 80 BE 77 01 00 00 04           -  cmp byte ptr [esi+00000177],04
"RXC2.exe"+1E8C0C5: 74 0B                          -  je RXC2.exe+1E8C0D2
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E8C0C7: 6A 00                          -  push 00
"RXC2.exe"+1E8C0C9: 6A 00                          -  push 00
"RXC2.exe"+1E8C0CB: 8B CE                          -  mov ecx,esi
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E8C0CD: E8 BE 8C FF FF                 -  call RXC2.exe+1E84D90
"RXC2.exe"+1E8C0D2: 8A 86 77 01 00 00              -  mov al,[esi+00000177]
"RXC2.exe"+1E8C0D8: 8B CE                          -  mov ecx,esi
"RXC2.exe"+1E8C0DA: 3C 02                          -  cmp al,02
"RXC2.exe"+1E8C0DC: 75 35                          -  jne RXC2.exe+1E8C113
"RXC2.exe"+1E8C0DE: F6 86 43 01 00 00 08           -  test byte ptr [esi+00000143],08
"RXC2.exe"+1E8C0E5: 74 16                          -  je RXC2.exe+1E8C0FD
"RXC2.exe"+1E8C0E7: 68 AE 00 00 00                 -  push 000000AE
"RXC2.exe"+1E8C0EC: E8 AF 7F FF FF                 -  call RXC2.exe+1E840A0
"RXC2.exe"+1E8C0F1: 8B 86 A0 02 00 00              -  mov eax,[esi+000002A0]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>114</ID>
          <Description>"Inf. Lives"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-07
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfLivesX5_AOB,RXC2.exe,80 46 4D FF 79 36) // should be unique
registersymbol(InfLivesX5_AOB)

InfLivesX5_AOB:
  db 90 90 90 90

[DISABLE]

InfLivesX5_AOB:
  db 80 46 4D FF

unregistersymbol(InfLivesX5_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E59F2D

"RXC2.exe"+1E59F10: C3                             -  ret 
"RXC2.exe"+1E59F11: 80 7E 29 0A                    -  cmp byte ptr [esi+29],0A
"RXC2.exe"+1E59F15: 75 6B                          -  jne RXC2.exe+1E59F82
"RXC2.exe"+1E59F17: 5F                             -  pop edi
"RXC2.exe"+1E59F18: C6 86 82 00 00 00 00           -  mov byte ptr [esi+00000082],00
"RXC2.exe"+1E59F1F: C6 46 0C 09                    -  mov byte ptr [esi+0C],09
"RXC2.exe"+1E59F23: C6 46 0D 00                    -  mov byte ptr [esi+0D],00
"RXC2.exe"+1E59F27: C6 46 1B 00                    -  mov byte ptr [esi+1B],00
"RXC2.exe"+1E59F2B: 5E                             -  pop esi
"RXC2.exe"+1E59F2C: C3                             -  ret 
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E59F2D: 80 46 4D FF                    -  add byte ptr [esi+4D],-01
"RXC2.exe"+1E59F31: 79 36                          -  jns RXC2.exe+1E59F69
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E59F33: 8A 46 18                       -  mov al,[esi+18]
"RXC2.exe"+1E59F36: 3C 16                          -  cmp al,16
"RXC2.exe"+1E59F38: 75 0D                          -  jne RXC2.exe+1E59F47
"RXC2.exe"+1E59F3A: 8B 0D D4 53 7F 03              -  mov ecx,[RXC2.exe+33F53D4]
"RXC2.exe"+1E59F40: 5F                             -  pop edi
"RXC2.exe"+1E59F41: 5E                             -  pop esi
"RXC2.exe"+1E59F42: E9 29 97 FE FF                 -  jmp RXC2.exe+1E43670
"RXC2.exe"+1E59F47: C6 46 0C 0D                    -  mov byte ptr [esi+0C],0D
"RXC2.exe"+1E59F4B: 3C 0C                          -  cmp al,0C
"RXC2.exe"+1E59F4D: 75 37                          -  jne RXC2.exe+1E59F86
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>229</ID>
          <Description>"Always Charge Weapons"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-12
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AlwaysChargeWeaponsX5_AOB,RXC2.exe,75 1E 8A 9C 0A 51 01 00 00) // should be unique
registersymbol(AlwaysChargeWeaponsX5_AOB)

AlwaysChargeWeaponsX5_AOB:
  db EB 1E

[DISABLE]

AlwaysChargeWeaponsX5_AOB:
  db 75 1E

unregistersymbol(AlwaysChargeWeaponsX5_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E8D07F

"RXC2.exe"+1E8D069: 5F                             -  pop edi
"RXC2.exe"+1E8D06A: 5E                             -  pop esi
"RXC2.exe"+1E8D06B: C3                             -  ret 
"RXC2.exe"+1E8D06C: CC                             -  int 3 
"RXC2.exe"+1E8D06D: CC                             -  int 3 
"RXC2.exe"+1E8D06E: CC                             -  int 3 
"RXC2.exe"+1E8D06F: CC                             -  int 3 
"RXC2.exe"+1E8D070: F7 81 7C 01 00 00 00 10 00 00  -  test [ecx+0000017C],1000
"RXC2.exe"+1E8D07A: 8B 54 24 04                    -  mov edx,[esp+04]
"RXC2.exe"+1E8D07E: 53                             -  push ebx
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E8D07F: 75 1E                          -  jne RXC2.exe+1E8D09F
"RXC2.exe"+1E8D081: 8A 9C 0A 51 01 00 00           -  mov bl,[edx+ecx+00000151]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E8D088: 8D 04 0A                       -  lea eax,[edx+ecx]
"RXC2.exe"+1E8D08B: 84 DB                          -  test bl,bl
"RXC2.exe"+1E8D08D: 74 38                          -  je RXC2.exe+1E8D0C7
"RXC2.exe"+1E8D08F: 80 FB 01                       -  cmp bl,01
"RXC2.exe"+1E8D092: 75 0B                          -  jne RXC2.exe+1E8D09F
"RXC2.exe"+1E8D094: C6 80 4A 01 00 00 09           -  mov byte ptr [eax+0000014A],09
"RXC2.exe"+1E8D09B: 5B                             -  pop ebx
"RXC2.exe"+1E8D09C: C2 04 00                       -  ret 0004
"RXC2.exe"+1E8D09F: 8A 81 77 01 00 00              -  mov al,[ecx+00000177]
"RXC2.exe"+1E8D0A5: 3C 01                          -  cmp al,01
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>241</ID>
          <Description>"Always Charge Special Weapons"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-12
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AlwaysChargeSpecialsX5_AOB,RXC2.exe,74 21 8A 86 77 01 00 00) // should be unique
registersymbol(AlwaysChargeSpecialsX5_AOB)

AlwaysChargeSpecialsX5_AOB:
  db 90 90

[DISABLE]

AlwaysChargeSpecialsX5_AOB:
  db 74 21

unregistersymbol(AlwaysChargeSpecialsX5_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E8D183

"RXC2.exe"+1E8D152: C6 86 4B 01 00 00 2E           -  mov byte ptr [esi+0000014B],2E
"RXC2.exe"+1E8D159: 5E                             -  pop esi
"RXC2.exe"+1E8D15A: C3                             -  ret 
"RXC2.exe"+1E8D15B: 8A 86 49 01 00 00              -  mov al,[esi+00000149]
"RXC2.exe"+1E8D161: 88 86 4A 01 00 00              -  mov [esi+0000014A],al
"RXC2.exe"+1E8D167: 80 BE 49 01 00 00 00           -  cmp byte ptr [esi+00000149],00
"RXC2.exe"+1E8D16E: 74 2C                          -  je RXC2.exe+1E8D19C
"RXC2.exe"+1E8D170: 80 BE 51 01 00 00 02           -  cmp byte ptr [esi+00000151],02
"RXC2.exe"+1E8D177: 74 1A                          -  je RXC2.exe+1E8D193
"RXC2.exe"+1E8D179: F7 86 7C 01 00 00 00 10 00 00  -  test [esi+0000017C],1000
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E8D183: 74 21                          -  je RXC2.exe+1E8D1A6
"RXC2.exe"+1E8D185: 8A 86 77 01 00 00              -  mov al,[esi+00000177]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E8D18B: 3C 01                          -  cmp al,01
"RXC2.exe"+1E8D18D: 74 04                          -  je RXC2.exe+1E8D193
"RXC2.exe"+1E8D18F: 3C 04                          -  cmp al,04
"RXC2.exe"+1E8D191: 75 13                          -  jne RXC2.exe+1E8D1A6
"RXC2.exe"+1E8D193: 80 86 4A 01 00 00 09           -  add byte ptr [esi+0000014A],09
"RXC2.exe"+1E8D19A: EB 0A                          -  jmp RXC2.exe+1E8D1A6
"RXC2.exe"+1E8D19C: 8B 06                          -  mov eax,[esi]
"RXC2.exe"+1E8D19E: 6A 00                          -  push 00
"RXC2.exe"+1E8D1A0: FF 90 88 00 00 00              -  call dword ptr [eax+00000088]
"RXC2.exe"+1E8D1A6: C6 86 4B 01 00 00 00           -  mov byte ptr [esi+0000014B],00
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>237</ID>
          <Description>"Rapid Fire (Don't Equip Ultimate Buster)"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-12
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MaxOnScreenBulletX5_AOB,RXC2.exe,0F 8D 7E 01 00 00) // should be unique
registersymbol(MaxOnScreenBulletX5_AOB)

MaxOnScreenBulletX5_AOB:
  db 90 90 90 90 90 90

[DISABLE]

MaxOnScreenBulletX5_AOB:
  db 0F 8D 7E 01 00 00

unregistersymbol(MaxOnScreenBulletX5_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E8AF8C

"RXC2.exe"+1E8AF63: 8A 9E 4C 01 00 00              -  mov bl,[esi+0000014C]
"RXC2.exe"+1E8AF69: 88 5C 24 08                    -  mov [esp+08],bl
"RXC2.exe"+1E8AF6D: 80 FB FF                       -  cmp bl,-01
"RXC2.exe"+1E8AF70: 0F 84 9A 01 00 00              -  je RXC2.exe+1E8B110
"RXC2.exe"+1E8AF76: 8B 06                          -  mov eax,[esi]
"RXC2.exe"+1E8AF78: 8B CE                          -  mov ecx,esi
"RXC2.exe"+1E8AF7A: FF 74 24 08                    -  push [esp+08]
"RXC2.exe"+1E8AF7E: 8B 80 B4 00 00 00              -  mov eax,[eax+000000B4]
"RXC2.exe"+1E8AF84: FF D0                          -  call eax
"RXC2.exe"+1E8AF86: 38 86 4E 01 00 00              -  cmp [esi+0000014E],al
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E8AF8C: 0F 8D 7E 01 00 00              -  jnl RXC2.exe+1E8B110
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E8AF92: 57                             -  push edi
"RXC2.exe"+1E8AF93: 0F BE FB                       -  movsx edi,bl
"RXC2.exe"+1E8AF96: 80 BF 08 7E 2E 03 00           -  cmp byte ptr [edi+RXC2.exe+2EE7E08],00
"RXC2.exe"+1E8AF9D: 74 0D                          -  je RXC2.exe+1E8AFAC
"RXC2.exe"+1E8AF9F: 80 BE 4F 01 00 00 00           -  cmp byte ptr [esi+0000014F],00
"RXC2.exe"+1E8AFA6: 0F 85 63 01 00 00              -  jne RXC2.exe+1E8B10F
"RXC2.exe"+1E8AFAC: 80 BF 60 7D 2E 03 00           -  cmp byte ptr [edi+RXC2.exe+2EE7D60],00
"RXC2.exe"+1E8AFB3: 74 15                          -  je RXC2.exe+1E8AFCA
"RXC2.exe"+1E8AFB5: 80 BE 4F 01 00 00 00           -  cmp byte ptr [esi+0000014F],00
"RXC2.exe"+1E8AFBC: 74 0C                          -  je RXC2.exe+1E8AFCA
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>274</ID>
          <Description>"Fly Again"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-14
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(FlyAgainX5_AOB,RXC2.exe,66 C7 87 40 01 00 00 00 04) // should be unique
registersymbol(FlyAgainX5_AOB)

FlyAgainX5_AOB:
  db 66 C7 87 40 01 00 00 00 00

[DISABLE]

FlyAgainX5_AOB:
  db 66 C7 87 40 01 00 00 00 04

unregistersymbol(FlyAgainX5_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E8AAAC

"RXC2.exe"+1E8AA70: 74 F3                          -  je RXC2.exe+1E8AA65
"RXC2.exe"+1E8AA72: 8B 87 A0 02 00 00              -  mov eax,[edi+000002A0]
"RXC2.exe"+1E8AA78: C7 40 28 00 00 00 00           -  mov [eax+28],00000000
"RXC2.exe"+1E8AA7F: 8B 87 A0 02 00 00              -  mov eax,[edi+000002A0]
"RXC2.exe"+1E8AA85: C7 40 30 00 00 00 00           -  mov [eax+30],00000000
"RXC2.exe"+1E8AA8C: 8B 87 A0 02 00 00              -  mov eax,[edi+000002A0]
"RXC2.exe"+1E8AA92: C7 40 2C 00 00 00 00           -  mov [eax+2C],00000000
"RXC2.exe"+1E8AA99: 8B 87 A0 02 00 00              -  mov eax,[edi+000002A0]
"RXC2.exe"+1E8AA9F: C7 40 34 00 00 00 00           -  mov [eax+34],00000000
"RXC2.exe"+1E8AAA6: 8A 87 77 01 00 00              -  mov al,[edi+00000177]
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E8AAAC: 66 C7 87 40 01 00 00 00 04     -  mov word ptr [edi+00000140],0400
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E8AAB5: C6 87 44 01 00 00 00           -  mov byte ptr [edi+00000144],00
"RXC2.exe"+1E8AABC: C7 87 08 03 00 00 00 00 34 43  -  mov [edi+00000308],43340000
"RXC2.exe"+1E8AAC6: C7 87 0C 03 00 00 00 00 00 00  -  mov [edi+0000030C],00000000
"RXC2.exe"+1E8AAD0: 3C 01                          -  cmp al,01
"RXC2.exe"+1E8AAD2: 74 63                          -  je RXC2.exe+1E8AB37
"RXC2.exe"+1E8AAD4: 3C 04                          -  cmp al,04
"RXC2.exe"+1E8AAD6: 74 5F                          -  je RXC2.exe+1E8AB37
"RXC2.exe"+1E8AAD8: 56                             -  push esi
"RXC2.exe"+1E8AAD9: 68 A9 00 00 00                 -  push 000000A9
"RXC2.exe"+1E8AADE: E8 9D 82 FF FF                 -  call RXC2.exe+1E82D80
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>294</ID>
          <Description>"Double Jump"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-15
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfDoubleJumpX5_AOB,RXC2.exe,66 C7 86 40 01 00 00 00 06) // should be unique
registersymbol(InfDoubleJumpX5_AOB)

InfDoubleJumpX5_AOB:
  db 66 C7 86 40 01 00 00 00 00

[DISABLE]

InfDoubleJumpX5_AOB:
  db 66 C7 86 40 01 00 00 00 06

unregistersymbol(InfDoubleJumpX5_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E8DD1E

"RXC2.exe"+1E8DCE6: C7 40 28 00 00 00 00        -  mov [eax+28],00000000
"RXC2.exe"+1E8DCED: 8B 86 A0 02 00 00           -  mov eax,[esi+000002A0]
"RXC2.exe"+1E8DCF3: C7 40 30 00 00 00 00        -  mov [eax+30],00000000
"RXC2.exe"+1E8DCFA: 8B 8E A0 02 00 00           -  mov ecx,[esi+000002A0]
"RXC2.exe"+1E8DD00: 8B 86 88 01 00 00           -  mov eax,[esi+00000188]
"RXC2.exe"+1E8DD06: 89 41 2C                    -  mov [ecx+2C],eax
"RXC2.exe"+1E8DD09: 8B 8E A0 02 00 00           -  mov ecx,[esi+000002A0]
"RXC2.exe"+1E8DD0F: 8B 86 90 01 00 00           -  mov eax,[esi+00000190]
"RXC2.exe"+1E8DD15: 89 41 34                    -  mov [ecx+34],eax
"RXC2.exe"+1E8DD18: 8B 86 A0 02 00 00           -  mov eax,[esi+000002A0]
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E8DD1E: 66 C7 86 40 01 00 00 00 06  -  mov word ptr [esi+00000140],0600
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E8DD27: C6 86 44 01 00 00 00        -  mov byte ptr [esi+00000144],00
"RXC2.exe"+1E8DD2E: C6 40 09 06                 -  mov byte ptr [eax+09],06
"RXC2.exe"+1E8DD32: 8B 86 A0 02 00 00           -  mov eax,[esi+000002A0]
"RXC2.exe"+1E8DD38: 5E                          -  pop esi
"RXC2.exe"+1E8DD39: C6 40 0A 00                 -  mov byte ptr [eax+0A],00
"RXC2.exe"+1E8DD3D: B8 01 00 00 00              -  mov eax,00000001
"RXC2.exe"+1E8DD42: C3                          -  ret 
"RXC2.exe"+1E8DD43: CC                          -  int 3 
"RXC2.exe"+1E8DD44: CC                          -  int 3 
"RXC2.exe"+1E8DD45: CC                          -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>285</ID>
          <Description>"Dash Hover"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-14
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(DashHoverX5_AOB,RXC2.exe,C6 86 41 01 00 00 03) // should be unique
registersymbol(DashHoverX5_AOB)

DashHoverX5_AOB:
  db C6 86 41 01 00 00 00

[DISABLE]

DashHoverX5_AOB:
  db C6 86 41 01 00 00 03

unregistersymbol(DashHoverX5_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E7C2CB

"RXC2.exe"+1E7C28F: C7 40 2C 00 00 00 00           -  mov [eax+2C],00000000
"RXC2.exe"+1E7C296: 8B 86 A0 02 00 00              -  mov eax,[esi+000002A0]
"RXC2.exe"+1E7C29C: C7 40 34 00 00 00 00           -  mov [eax+34],00000000
"RXC2.exe"+1E7C2A3: F6 86 7C 01 00 00 10           -  test byte ptr [esi+0000017C],10
"RXC2.exe"+1E7C2AA: C6 86 40 01 00 00 FF           -  mov byte ptr [esi+00000140],-01
"RXC2.exe"+1E7C2B1: 74 0C                          -  je RXC2.exe+1E7C2BF
"RXC2.exe"+1E7C2B3: C7 86 DC 02 00 00 00 00 20 41  -  mov [esi+000002DC],41200000
"RXC2.exe"+1E7C2BD: EB 0A                          -  jmp RXC2.exe+1E7C2C9
"RXC2.exe"+1E7C2BF: C7 86 DC 02 00 00 00 00 90 41  -  mov [esi+000002DC],41900000
"RXC2.exe"+1E7C2C9: 8B CE                          -  mov ecx,esi
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E7C2CB: C6 86 41 01 00 00 03           -  mov byte ptr [esi+00000141],03
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E7C2D2: 66 C7 86 46 01 00 00 00 00     -  mov word ptr [esi+00000146],0000
"RXC2.exe"+1E7C2DB: C6 86 48 01 00 00 00           -  mov byte ptr [esi+00000148],00
"RXC2.exe"+1E7C2E2: C7 86 CC 02 00 00 00 00 00 00  -  mov [esi+000002CC],00000000
"RXC2.exe"+1E7C2EC: C7 86 C8 02 00 00 00 00 00 00  -  mov [esi+000002C8],00000000
"RXC2.exe"+1E7C2F6: C7 86 04 03 00 00 00 00 00 00  -  mov [esi+00000304],00000000
"RXC2.exe"+1E7C300: E8 4B 27 00 00                 -  call RXC2.exe+1E7EA50
"RXC2.exe"+1E7C305: 8B 86 A0 02 00 00              -  mov eax,[esi+000002A0]
"RXC2.exe"+1E7C30B: C6 40 09 0D                    -  mov byte ptr [eax+09],0D
"RXC2.exe"+1E7C30F: 8B 86 A0 02 00 00              -  mov eax,[esi+000002A0]
"RXC2.exe"+1E7C315: 5E                             -  pop esi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>278</ID>
          <Description>"Inf. Fly Time"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-14
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfFlyTimeX5_AOB,RXC2.exe,A2 A2 FB FF 83 C4 04 84 C0) // should be unique
aobscanmodule(InfFlyTimeX5_AOB2,RXC2.exe,F2 A1 FB FF 83 C4 04 84 C0) // should be unique
alloc(newmem,$1000)
alloc(newmem2,$1000)

label(code)
label(code2)
label(return)
label(return2)

//1
newmem:
  mov dword ptr [ebx],(float)180
code:
  add esp,04
  test al,al
  jmp return

InfFlyTimeX5_AOB+04:
  jmp newmem
return:
registersymbol(InfFlyTimeX5_AOB)

//2
newmem2:
  mov dword ptr [ebx],(float)180
code2:
  add esp,04
  test al,al
  jmp return2

InfFlyTimeX5_AOB2+04:
  jmp newmem2
return2:
registersymbol(InfFlyTimeX5_AOB2)

[DISABLE]

InfFlyTimeX5_AOB+04:
  db 83 C4 04 84 C0

InfFlyTimeX5_AOB2+04:
  db 83 C4 04 84 C0

unregistersymbol(InfFlyTimeX5_AOB)
unregistersymbol(InfFlyTimeX5_AOB2)
dealloc(newmem)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E9361E

"RXC2.exe"+1E93600: 53                    -  push ebx
"RXC2.exe"+1E93601: 56                    -  push esi
"RXC2.exe"+1E93602: 8B F1                 -  mov esi,ecx
"RXC2.exe"+1E93604: 57                    -  push edi
"RXC2.exe"+1E93605: 0F B7 BE 3C 01 00 00  -  movzx edi,word ptr [esi+0000013C]
"RXC2.exe"+1E9360C: 8D 9E 08 03 00 00     -  lea ebx,[esi+00000308]
"RXC2.exe"+1E93612: C1 EF 07              -  shr edi,07
"RXC2.exe"+1E93615: 53                    -  push ebx
"RXC2.exe"+1E93616: 83 E7 01              -  and edi,01
"RXC2.exe"+1E93619: E8 22 A2 FB FF        -  call RXC2.exe+1E4D840
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E9361E: 83 C4 04              -  add esp,04
"RXC2.exe"+1E93621: 84 C0                 -  test al,al
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E93623: 74 10                 -  je RXC2.exe+1E93635
"RXC2.exe"+1E93625: 5F                    -  pop edi
"RXC2.exe"+1E93626: 8B CE                 -  mov ecx,esi
"RXC2.exe"+1E93628: C7 03 00 00 00 00     -  mov [ebx],00000000
"RXC2.exe"+1E9362E: 5E                    -  pop esi
"RXC2.exe"+1E9362F: 5B                    -  pop ebx
"RXC2.exe"+1E93630: E9 8B 93 FE FF        -  jmp RXC2.exe+1E7C9C0
"RXC2.exe"+1E93635: 85 FF                 -  test edi,edi
"RXC2.exe"+1E93637: 74 0A                 -  je RXC2.exe+1E93643
"RXC2.exe"+1E93639: 5F                    -  pop edi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>137</ID>
          <Description>"Min Clear Time"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-07
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MinStageTimeX5_AOB,RXC2.exe,D8 86 CC 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov dword ptr [esi+000001CC],(float)0
code:
  fld dword ptr [esi+000001CC]
  jmp return

MinStageTimeX5_AOB:
  jmp newmem
  nop
return:
registersymbol(MinStageTimeX5_AOB)

[DISABLE]

MinStageTimeX5_AOB:
  db D8 86 CC 01 00 00

unregistersymbol(MinStageTimeX5_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E7E7F5

"RXC2.exe"+1E7E7CB: 8B 0D D4 53 7F 03        -  mov ecx,[RXC2.exe+33F53D4]
"RXC2.exe"+1E7E7D1: 85 C0                    -  test eax,eax
"RXC2.exe"+1E7E7D3: 79 1B                    -  jns RXC2.exe+1E7E7F0
"RXC2.exe"+1E7E7D5: 8D 44 24 08              -  lea eax,[esp+08]
"RXC2.exe"+1E7E7D9: C7 44 24 08 00 00 00 00  -  mov [esp+08],00000000
"RXC2.exe"+1E7E7E1: 50                       -  push eax
"RXC2.exe"+1E7E7E2: 8D 49 4C                 -  lea ecx,[ecx+4C]
"RXC2.exe"+1E7E7E5: E8 86 B3 FD FF           -  call RXC2.exe+1E59B70
"RXC2.exe"+1E7E7EA: 8B 0D D4 53 7F 03        -  mov ecx,[RXC2.exe+33F53D4]
"RXC2.exe"+1E7E7F0: E8 9B 5B FC FF           -  call RXC2.exe+1E44390
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E7E7F5: D8 86 CC 01 00 00        -  fadd dword ptr [esi+000001CC]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E7E7FB: D9 9E CC 01 00 00        -  fstp dword ptr [esi+000001CC]
"RXC2.exe"+1E7E801: 8B 0D D4 53 7F 03        -  mov ecx,[RXC2.exe+33F53D4]
"RXC2.exe"+1E7E807: 8D 49 4C                 -  lea ecx,[ecx+4C]
"RXC2.exe"+1E7E80A: E8 D1 22 FD FF           -  call RXC2.exe+1E50AE0
"RXC2.exe"+1E7E80F: 8B 86 A0 02 00 00        -  mov eax,[esi+000002A0]
"RXC2.exe"+1E7E815: 8B CE                    -  mov ecx,esi
"RXC2.exe"+1E7E817: 0F BE 40 08              -  movsx eax,byte ptr [eax+08]
"RXC2.exe"+1E7E81B: 8B 04 85 40 1F 2D 03     -  mov eax,[eax*4+RXC2.exe+2ED1F40]
"RXC2.exe"+1E7E822: FF D0                    -  call eax
"RXC2.exe"+1E7E824: 8B 86 A0 02 00 00        -  mov eax,[esi+000002A0]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>133</ID>
          <Description>"No Mavericks Defeated"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-07
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoMavericksDefeatedX5_AOB,RXC2.exe,FF 80 08 01 00 00) // should be unique
registersymbol(NoMavericksDefeatedX5_AOB)

NoMavericksDefeatedX5_AOB:
  db 90 90 90 90 90 90

[DISABLE]

NoMavericksDefeatedX5_AOB:
  db FF 80 08 01 00 00

unregistersymbol(NoMavericksDefeatedX5_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E48182

"RXC2.exe"+1E48159: 6A 09                    -  push 09
"RXC2.exe"+1E4815B: 8D 89 A8 02 00 00        -  lea ecx,[ecx+000002A8]
"RXC2.exe"+1E48161: E8 FA 4A 01 00           -  call RXC2.exe+1E5CC60
"RXC2.exe"+1E48166: 84 C0                    -  test al,al
"RXC2.exe"+1E48168: 74 13                    -  je RXC2.exe+1E4817D
"RXC2.exe"+1E4816A: 6A 09                    -  push 09
"RXC2.exe"+1E4816C: 8B 0D D4 53 7F 03        -  mov ecx,[RXC2.exe+33F53D4]
"RXC2.exe"+1E48172: 8D 89 A8 02 00 00        -  lea ecx,[ecx+000002A8]
"RXC2.exe"+1E48178: E8 13 4B 01 00           -  call RXC2.exe+1E5CC90
"RXC2.exe"+1E4817D: A1 D4 53 7F 03           -  mov eax,[RXC2.exe+33F53D4]
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E48182: FF 80 08 01 00 00        -  inc [eax+00000108]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E48188: 84 DB                    -  test bl,bl
"RXC2.exe"+1E4818A: 75 27                    -  jne RXC2.exe+1E481B3
"RXC2.exe"+1E4818C: 8B 5C 24 18              -  mov ebx,[esp+18]
"RXC2.exe"+1E48190: 8B 54 24 1C              -  mov edx,[esp+1C]
"RXC2.exe"+1E48194: 45                       -  inc ebp
"RXC2.exe"+1E48195: 83 C3 04                 -  add ebx,04
"RXC2.exe"+1E48198: 89 5C 24 18              -  mov [esp+18],ebx
"RXC2.exe"+1E4819C: 83 FD 20                 -  cmp ebp,20
"RXC2.exe"+1E4819F: 0F 82 B0 FE FF FF        -  jb RXC2.exe+1E48055
"RXC2.exe"+1E481A5: C6 47 18 00              -  mov byte ptr [edi+18],00
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>136</ID>
          <Description>"No Damage Received"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-07
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoDamageReceivedX5_AOB,RXC2.exe,8B B0 0C 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov [eax+0000010C],#0
code:
  mov esi,[eax+0000010C]
  jmp return

NoDamageReceivedX5_AOB:
  jmp newmem
  nop
return:
registersymbol(NoDamageReceivedX5_AOB)

[DISABLE]

NoDamageReceivedX5_AOB:
  db 8B B0 0C 01 00 00

unregistersymbol(NoDamageReceivedX5_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1EA32B9

"RXC2.exe"+1EA32A9: CC                    -  int 3 
"RXC2.exe"+1EA32AA: CC                    -  int 3 
"RXC2.exe"+1EA32AB: CC                    -  int 3 
"RXC2.exe"+1EA32AC: CC                    -  int 3 
"RXC2.exe"+1EA32AD: CC                    -  int 3 
"RXC2.exe"+1EA32AE: CC                    -  int 3 
"RXC2.exe"+1EA32AF: CC                    -  int 3 
"RXC2.exe"+1EA32B0: A1 D4 53 7F 03        -  mov eax,[RXC2.exe+33F53D4]
"RXC2.exe"+1EA32B5: 83 EC 08              -  sub esp,08
"RXC2.exe"+1EA32B8: 56                    -  push esi
// ---------- INJECTING HERE ----------
"RXC2.exe"+1EA32B9: 8B B0 0C 01 00 00     -  mov esi,[eax+0000010C]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1EA32BF: 57                    -  push edi
"RXC2.exe"+1EA32C0: 8B F9                 -  mov edi,ecx
"RXC2.exe"+1EA32C2: 81 FE E7 03 00 00     -  cmp esi,000003E7
"RXC2.exe"+1EA32C8: 7C 68                 -  jl RXC2.exe+1EA3332
"RXC2.exe"+1EA32CA: 0F B7 05 2A CD 31 03  -  movzx eax,word ptr [RXC2.exe+2F1CD2A]
"RXC2.exe"+1EA32D1: 8B 74 24 14           -  mov esi,[esp+14]
"RXC2.exe"+1EA32D5: 68 89 00 00 00        -  push 00000089
"RXC2.exe"+1EA32DA: 50                    -  push eax
"RXC2.exe"+1EA32DB: 0F B7 05 28 CD 31 03  -  movzx eax,word ptr [RXC2.exe+2F1CD28]
"RXC2.exe"+1EA32E2: 50                    -  push eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>204</ID>
          <Description>"Hours Not Decrease"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-12
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HoursToCollisionNotDecreaseX5_AOB,RXC2.exe,C0 F3 0F 11 81 B4 00 00 00) // should be unique
aobscanmodule(HoursToCollisionNotDecreaseX5_AOB2,RXC2.exe,D8 AE B4 00 00 00) // should be unique
registersymbol(HoursToCollisionNotDecreaseX5_AOB)
registersymbol(HoursToCollisionNotDecreaseX5_AOB2)

HoursToCollisionNotDecreaseX5_AOB+01:
  db 90 90 90 90 90 90 90 90

HoursToCollisionNotDecreaseX5_AOB2:
  db D9 86 B4 00 00 00

[DISABLE]

HoursToCollisionNotDecreaseX5_AOB+01:
  db F3 0F 11 81 B4 00 00 00

HoursToCollisionNotDecreaseX5_AOB2:
  db D8 AE B4 00 00 00

unregistersymbol(HoursToCollisionNotDecreaseX5_AOB)
unregistersymbol(HoursToCollisionNotDecreaseX5_AOB2)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E59B7B

"RXC2.exe"+1E59B67: C2 04 00                    -  ret 0004
"RXC2.exe"+1E59B6A: CC                          -  int 3 
"RXC2.exe"+1E59B6B: CC                          -  int 3 
"RXC2.exe"+1E59B6C: CC                          -  int 3 
"RXC2.exe"+1E59B6D: CC                          -  int 3 
"RXC2.exe"+1E59B6E: CC                          -  int 3 
"RXC2.exe"+1E59B6F: CC                          -  int 3 
"RXC2.exe"+1E59B70: 8B 44 24 04                 -  mov eax,[esp+04]
"RXC2.exe"+1E59B74: 66 0F 6E 00                 -  movd xmm0,[eax]
"RXC2.exe"+1E59B78: 0F 5B C0                    -  cvtdq2ps xmm0,xmm0
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E59B7B: F3 0F 11 81 B4 00 00 00     -  movss [ecx+000000B4],xmm0
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E59B83: C2 04 00                    -  ret 0004
"RXC2.exe"+1E59B86: CC                          -  int 3 
"RXC2.exe"+1E59B87: CC                          -  int 3 
"RXC2.exe"+1E59B88: CC                          -  int 3 
"RXC2.exe"+1E59B89: CC                          -  int 3 
"RXC2.exe"+1E59B8A: CC                          -  int 3 
"RXC2.exe"+1E59B8B: CC                          -  int 3 
"RXC2.exe"+1E59B8C: CC                          -  int 3 
"RXC2.exe"+1E59B8D: CC                          -  int 3 
"RXC2.exe"+1E59B8E: CC                          -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>223</ID>
          <Description>"Equip Unlimited Parts"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-12
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(CanEquipUnlimitedPartsX5_AOB,RXC2.exe,7D 0F 0B C1 89 84 9F 90 00 00 00) // should be unique
registersymbol(CanEquipUnlimitedPartsX5_AOB)

CanEquipUnlimitedPartsX5_AOB:
  db 90 90

[DISABLE]

CanEquipUnlimitedPartsX5_AOB:
  db 7D 0F

unregistersymbol(CanEquipUnlimitedPartsX5_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1E6AE9F

"RXC2.exe"+1E6AE77: 8A 96 89 00 00 00        -  mov dl,[esi+00000089]
"RXC2.exe"+1E6AE7D: 8B 84 9F 90 00 00 00     -  mov eax,[edi+ebx*4+00000090]
"RXC2.exe"+1E6AE84: 88 54 24 1C              -  mov [esp+1C],dl
"RXC2.exe"+1E6AE88: 85 C1                    -  test ecx,eax
"RXC2.exe"+1E6AE8A: 74 0D                    -  je RXC2.exe+1E6AE99
"RXC2.exe"+1E6AE8C: F7 D1                    -  not ecx
"RXC2.exe"+1E6AE8E: 23 C8                    -  and ecx,eax
"RXC2.exe"+1E6AE90: 89 8C 9F 90 00 00 00     -  mov [edi+ebx*4+00000090],ecx
"RXC2.exe"+1E6AE97: EB 11                    -  jmp RXC2.exe+1E6AEAA
"RXC2.exe"+1E6AE99: 3A 96 88 00 00 00        -  cmp dl,[esi+00000088]
// ---------- INJECTING HERE ----------
"RXC2.exe"+1E6AE9F: 7D 0F                    -  jnl RXC2.exe+1E6AEB0
"RXC2.exe"+1E6AEA1: 0B C1                    -  or eax,ecx
"RXC2.exe"+1E6AEA3: 89 84 9F 90 00 00 00     -  mov [edi+ebx*4+00000090],eax
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1E6AEAA: 8B 35 D4 53 7F 03        -  mov esi,[RXC2.exe+33F53D4]
"RXC2.exe"+1E6AEB0: 0F BE 86 82 00 00 00     -  movsx eax,byte ptr [esi+00000082]
"RXC2.exe"+1E6AEB7: 8B CD                    -  mov ecx,ebp
"RXC2.exe"+1E6AEB9: FF B4 87 90 00 00 00     -  push [edi+eax*4+00000090]
"RXC2.exe"+1E6AEC0: E8 0B E3 FF FF           -  call RXC2.exe+1E691D0
"RXC2.exe"+1E6AEC5: 8A 4C 24 1C              -  mov cl,[esp+1C]
"RXC2.exe"+1E6AEC9: 88 86 89 00 00 00        -  mov [esi+00000089],al
"RXC2.exe"+1E6AECF: A1 D4 53 7F 03           -  mov eax,[RXC2.exe+33F53D4]
"RXC2.exe"+1E6AED4: 38 88 89 00 00 00        -  cmp [eax+00000089],cl
"RXC2.exe"+1E6AEDA: 74 13                    -  je RXC2.exe+1E6AEEF
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>213</ID>
          <Description>"Squid Adler Energy Items"</Description>
          <VariableType>Byte</VariableType>
          <Address>"RXC2.exe"+033F7444</Address>
          <Offsets>
            <Offset>7E</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>130</ID>
          <Description>"Hours To Collision"</Description>
          <VariableType>Float</VariableType>
          <Address>"RXC2.exe"+033F7444</Address>
          <Offsets>
            <Offset>100</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>212</ID>
          <Description>"Parts"</Description>
          <DropDownList DisplayValueAsItem="1">3FFFC:All Parts
</DropDownList>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>"RXC2.exe"+033F7444</Address>
          <Offsets>
            <Offset>D8</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>270</ID>
          <Description>"X Rank"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:MEH
1:PA
2:GA
3:SA
4:A
5:B
</DropDownList>
          <VariableType>Byte</VariableType>
          <Address>"RXC2.exe"+033F7444</Address>
          <Offsets>
            <Offset>FE</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>271</ID>
          <Description>"Zero Rank"</Description>
          <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:MEH
1:PA
2:GA
3:SA
4:A
5:B
</DropDownList>
          <VariableType>Byte</VariableType>
          <Address>"RXC2.exe"+033F7444</Address>
          <Offsets>
            <Offset>FF</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>261</ID>
          <Description>"Armor"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>252</ID>
              <Description>"4th Armor"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>0</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>9E</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>259</ID>
              <Description>"Falcon Armor"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>1</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>9E</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>260</ID>
              <Description>"Gaea Armor"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>2</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>9E</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>267</ID>
              <Description>"Ultimate Armor"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>3</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>9E</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>266</ID>
              <Description>"Zero's Black Armor"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>4</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>9E</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>262</ID>
          <Description>"Falcon Armor Parts"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>242</ID>
              <Description>"Falcon Helmet"</Description>
              <VariableType>Binary</VariableType>
              <BitStart>0</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>F5</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>243</ID>
              <Description>"Falcon X-Buster"</Description>
              <VariableType>Binary</VariableType>
              <BitStart>1</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>F5</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>244</ID>
              <Description>"Falcon Body"</Description>
              <VariableType>Binary</VariableType>
              <BitStart>2</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>F5</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>245</ID>
              <Description>"Falcon Boots"</Description>
              <VariableType>Binary</VariableType>
              <BitStart>3</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>F5</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>263</ID>
          <Description>"Gaea Armor Parts"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>246</ID>
              <Description>"Gaea Helmet"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>4</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>F5</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>247</ID>
              <Description>"Gaea X-Buster"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>5</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>F5</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>248</ID>
              <Description>"Gaea Body"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>6</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>F5</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>249</ID>
              <Description>"Gaea Boots"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>7</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>F5</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>264</ID>
          <Description>"Tanks"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>255</ID>
              <Description>"E Tanks 1"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>4</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>D3</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>257</ID>
              <Description>"E Tanks 2"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>5</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>D3</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>258</ID>
              <Description>"W Tanks"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>6</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>"RXC2.exe"+033F7444</Address>
              <Offsets>
                <Offset>D3</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>154</ID>
      <Description>"MegaMan X6"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>391</ID>
          <Description>"Inf. Health"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-15
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfHPX6_AOB,RXC2.exe,8B CB E8 2E B7 B6 FF) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  push eax
  push edx
  movsx edx,byte ptr [ebx-B2]
  mov al,byte ptr [edx+ebp+97]
  mov byte ptr [ecx+10],al
code:
  pop eax
  pop edx
  mov ecx,ebx
  call RXC2.exe+1CA4790
  jmp return

InfHPX6_AOB:
  jmp newmem
  nop
  nop
return:
registersymbol(InfHPX6_AOB)

[DISABLE]

InfHPX6_AOB:
  db 8B CB E8 2E B7 B6 FF

unregistersymbol(InfHPX6_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2137B1B

"RXC2.exe"+2137AF0: 68 80 00 00 00     -  push 00000080
"RXC2.exe"+2137AF5: E8 B6 95 E9 FF     -  call RXC2.exe+1FD10B0
"RXC2.exe"+2137AFA: 8B C8              -  mov ecx,eax
"RXC2.exe"+2137AFC: E8 7F EF E8 FF     -  call RXC2.exe+1FC6A80
"RXC2.exe"+2137B01: 8B 8F D4 00 00 00  -  mov ecx,[edi+000000D4]
"RXC2.exe"+2137B07: E8 A4 95 E9 FF     -  call RXC2.exe+1FD10B0
"RXC2.exe"+2137B0C: 8B C8              -  mov ecx,eax
"RXC2.exe"+2137B0E: E8 CD AF B6 FF     -  call RXC2.exe+1CA2AE0
"RXC2.exe"+2137B13: 3C 80              -  cmp al,-80
"RXC2.exe"+2137B15: 0F 84 AC 02 00 00  -  je RXC2.exe+2137DC7
// ---------- INJECTING HERE ----------
"RXC2.exe"+2137B1B: 8B CB              -  mov ecx,ebx
"RXC2.exe"+2137B1D: E8 2E 55 E8 FF     -  call RXC2.exe+1FBD050
// ---------- DONE INJECTING  ----------
"RXC2.exe"+2137B22: 24 0C              -  and al,0C
"RXC2.exe"+2137B24: 3C 0C              -  cmp al,0C
"RXC2.exe"+2137B26: 74 11              -  je RXC2.exe+2137B39
"RXC2.exe"+2137B28: 8B CB              -  mov ecx,ebx
"RXC2.exe"+2137B2A: E8 21 55 E8 FF     -  call RXC2.exe+1FBD050
"RXC2.exe"+2137B2F: 24 03              -  and al,03
"RXC2.exe"+2137B31: 3C 03              -  cmp al,03
"RXC2.exe"+2137B33: 0F 85 8E 02 00 00  -  jne RXC2.exe+2137DC7
"RXC2.exe"+2137B39: 8B CB              -  mov ecx,ebx
"RXC2.exe"+2137B3B: E8 30 C0 B6 FF     -  call RXC2.exe+1CA3B70
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>392</ID>
          <Description>"Invincible"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-08
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InvincibleX6_AOB,RXC2.exe,84 C0 0F 84 F2 00 00 00 8B B7) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  cmp byte ptr [ebx+000000E1],00
  jne code
  mov dword ptr [ecx+4],(float)75
code:
  test al,al
  je RXC2.exe+213956F
  jmp return

InvincibleX6_AOB:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(InvincibleX6_AOB)

[DISABLE]

InvincibleX6_AOB:
  db 84 C0 0F 84 F2 00 00 00

unregistersymbol(InvincibleX6_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2137F35

"RXC2.exe"+2137F10: 83 C4 08              -  add esp,08
"RXC2.exe"+2137F13: C3                    -  ret 
"RXC2.exe"+2137F14: 51                    -  push ecx
"RXC2.exe"+2137F15: 8B 8F D4 00 00 00     -  mov ecx,[edi+000000D4]
"RXC2.exe"+2137F1B: C7 04 24 00 00 00 00  -  mov [esp],00000000
"RXC2.exe"+2137F22: E8 89 91 E9 FF        -  call RXC2.exe+1FD10B0
"RXC2.exe"+2137F27: 8B C8                 -  mov ecx,eax
"RXC2.exe"+2137F29: E8 B2 F0 E8 FF        -  call RXC2.exe+1FC6FE0
"RXC2.exe"+2137F2E: 8B C8                 -  mov ecx,eax
"RXC2.exe"+2137F30: E8 DB 48 B6 FF        -  call RXC2.exe+1C9C810
// ---------- INJECTING HERE ----------
"RXC2.exe"+2137F35: 84 C0                 -  test al,al
"RXC2.exe"+2137F37: 0F 84 F2 00 00 00     -  je RXC2.exe+213802F
// ---------- DONE INJECTING  ----------
"RXC2.exe"+2137F3D: 8B B7 D4 00 00 00     -  mov esi,[edi+000000D4]
"RXC2.exe"+2137F43: E8 48 2D E7 FF        -  call RXC2.exe+1FAAC90
"RXC2.exe"+2137F48: 8B C8                 -  mov ecx,eax
"RXC2.exe"+2137F4A: E8 91 2D E7 FF        -  call RXC2.exe+1FAACE0
"RXC2.exe"+2137F4F: 8B C8                 -  mov ecx,eax
"RXC2.exe"+2137F51: E8 2A 56 E8 FF        -  call RXC2.exe+1FBD580
"RXC2.exe"+2137F56: 8B C8                 -  mov ecx,eax
"RXC2.exe"+2137F58: E8 B3 4F E8 FF        -  call RXC2.exe+1FBCF10
"RXC2.exe"+2137F5D: 51                    -  push ecx
"RXC2.exe"+2137F5E: 8B CE                 -  mov ecx,esi
}
</AssemblerScript>
          <Hotkeys>
            <Hotkey>
              <Action>Toggle Activation</Action>
              <Keys>
                <Key>97</Key>
              </Keys>
              <ID>0</ID>
              <ActivateSound>Activate</ActivateSound>
              <DeactivateSound>Deactivate</DeactivateSound>
            </Hotkey>
          </Hotkeys>
        </CheatEntry>
        <CheatEntry>
          <ID>406</ID>
          <Description>"Invincible Ride Armor"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-20
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InvincibleRideArmorX6_AOB,RXC2.exe,0F 85 58 FF FF FF 8B CB E8 FD) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  jmp RXC2.exe+1FCCC04
  jmp return

InvincibleRideArmorX6_AOB:
  jmp newmem
  nop
return:
registersymbol(InvincibleRideArmorX6_AOB)

[DISABLE]

InvincibleRideArmorX6_AOB:
  db 0F 85 58 FF FF FF

unregistersymbol(InvincibleRideArmorX6_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1FCCCA6

"RXC2.exe"+1FCCC82: E8 29 48 00 00        -  call RXC2.exe+1FD14B0
"RXC2.exe"+1FCCC87: 8B C8                 -  mov ecx,eax
"RXC2.exe"+1FCCC89: E8 D2 7E 3D 00        -  call RXC2.exe+23A4B60
"RXC2.exe"+1FCCC8E: 84 C0                 -  test al,al
"RXC2.exe"+1FCCC90: 0F 88 6E FF FF FF     -  js RXC2.exe+1FCCC04
"RXC2.exe"+1FCCC96: 8B CF                 -  mov ecx,edi
"RXC2.exe"+1FCCC98: E8 73 16 FF FF        -  call RXC2.exe+1FBE310
"RXC2.exe"+1FCCC9D: 8B C8                 -  mov ecx,eax
"RXC2.exe"+1FCCC9F: E8 6C 75 CD FF        -  call RXC2.exe+1CA4210
"RXC2.exe"+1FCCCA4: 84 C0                 -  test al,al
// ---------- INJECTING HERE ----------
"RXC2.exe"+1FCCCA6: 0F 85 58 FF FF FF     -  jne RXC2.exe+1FCCC04
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1FCCCAC: 8B CB                 -  mov ecx,ebx
"RXC2.exe"+1FCCCAE: E8 FD 47 00 00        -  call RXC2.exe+1FD14B0
"RXC2.exe"+1FCCCB3: 8B C8                 -  mov ecx,eax
"RXC2.exe"+1FCCCB5: E8 86 8D 16 00        -  call RXC2.exe+2135A40
"RXC2.exe"+1FCCCBA: 84 C0                 -  test al,al
"RXC2.exe"+1FCCCBC: 0F 88 42 FF FF FF     -  js RXC2.exe+1FCCC04
"RXC2.exe"+1FCCCC2: 57                    -  push edi
"RXC2.exe"+1FCCCC3: 53                    -  push ebx
"RXC2.exe"+1FCCCC4: 8B CE                 -  mov ecx,esi
"RXC2.exe"+1FCCCC6: E8 A5 F7 FF FF        -  call RXC2.exe+1FCC470
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>407</ID>
          <Description>"Inf. Lives"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-08
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfLivesX6_AOB,RXC2.exe,FE C8 8B CE 88 44 24 0C) // should be unique
registersymbol(InfLivesX6_AOB)

InfLivesX6_AOB:
  db 90 90

[DISABLE]

InfLivesX6_AOB:
  db FE C8

unregistersymbol(InfLivesX6_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1FB6F9C

"RXC2.exe"+1FB6F79: 8B C8              -  mov ecx,eax
"RXC2.exe"+1FB6F7B: E8 00 66 00 00     -  call RXC2.exe+1FBD580
"RXC2.exe"+1FB6F80: 8B C8              -  mov ecx,eax
"RXC2.exe"+1FB6F82: E8 29 61 00 00     -  call RXC2.exe+1FBD0B0
"RXC2.exe"+1FB6F87: 0F B6 C0           -  movzx eax,al
"RXC2.exe"+1FB6F8A: 8B CE              -  mov ecx,esi
"RXC2.exe"+1FB6F8C: 50                 -  push eax
"RXC2.exe"+1FB6F8D: E8 8E D1 FF FF     -  call RXC2.exe+1FB4120
"RXC2.exe"+1FB6F92: E9 87 00 00 00     -  jmp RXC2.exe+1FB701E
"RXC2.exe"+1FB6F97: E8 04 CC FF FF     -  call RXC2.exe+1FB3BA0
// ---------- INJECTING HERE ----------
"RXC2.exe"+1FB6F9C: FE C8              -  dec al
"RXC2.exe"+1FB6F9E: 8B CE              -  mov ecx,esi
"RXC2.exe"+1FB6FA0: 88 44 24 0C        -  mov [esp+0C],al
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1FB6FA4: FF 74 24 0C        -  push [esp+0C]
"RXC2.exe"+1FB6FA8: E8 13 D1 FF FF     -  call RXC2.exe+1FB40C0
"RXC2.exe"+1FB6FAD: 8B CE              -  mov ecx,esi
"RXC2.exe"+1FB6FAF: E8 EC CB FF FF     -  call RXC2.exe+1FB3BA0
"RXC2.exe"+1FB6FB4: 8B CE              -  mov ecx,esi
"RXC2.exe"+1FB6FB6: 84 C0              -  test al,al
"RXC2.exe"+1FB6FB8: 79 33              -  jns RXC2.exe+1FB6FED
"RXC2.exe"+1FB6FBA: 6A 13              -  push 13
"RXC2.exe"+1FB6FBC: E8 CF B3 CE FF     -  call RXC2.exe+1CA2390
"RXC2.exe"+1FB6FC1: 8B CE              -  mov ecx,esi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>408</ID>
          <Description>"Inf. Ammo"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-15
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfAmmoX6_AOB,RXC2.exe,66 2B F0 8B CF 0F B7 C6 50 E8 50) // should be unique
aobscanmodule(InfAmmoX6_AOB2,RXC2.exe,74 0B 6A 00 6A 00 8B CF) // should be unique
registersymbol(InfAmmoX6_AOB)
registersymbol(InfAmmoX6_AOB2)

InfAmmoX6_AOB:
  db 90 90 90

InfAmmoX6_AOB2:
  db EB 0B

[DISABLE]

InfAmmoX6_AOB:
  db 66 2B F0

InfAmmoX6_AOB2:
  db 74 0B

unregistersymbol(InfAmmoX6_AOB)
unregistersymbol(InfAmmoX6_AOB2)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1FAB802

"RXC2.exe"+1FAB7E5: 0F BE C0              -  movsx eax,al
"RXC2.exe"+1FAB7E8: 8B CF                 -  mov ecx,edi
"RXC2.exe"+1FAB7EA: 50                    -  push eax
"RXC2.exe"+1FAB7EB: E8 90 1D 01 00        -  call RXC2.exe+1FBD580
"RXC2.exe"+1FAB7F0: 8B C8                 -  mov ecx,eax
"RXC2.exe"+1FAB7F2: E8 99 18 01 00        -  call RXC2.exe+1FBD090
"RXC2.exe"+1FAB7F7: 53                    -  push ebx
"RXC2.exe"+1FAB7F8: 8B CD                 -  mov ecx,ebp
"RXC2.exe"+1FAB7FA: 66 8B F0              -  mov si,ax
"RXC2.exe"+1FAB7FD: E8 3E F5 FF FF        -  call RXC2.exe+1FAAD40
// ---------- INJECTING HERE ----------
"RXC2.exe"+1FAB802: 66 2B F0              -  sub si,ax
"RXC2.exe"+1FAB805: 8B CF                 -  mov ecx,edi
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1FAB807: 0F B7 C6              -  movzx eax,si
"RXC2.exe"+1FAB80A: 50                    -  push eax
"RXC2.exe"+1FAB80B: E8 70 1D 01 00        -  call RXC2.exe+1FBD580
"RXC2.exe"+1FAB810: 8B C8                 -  mov ecx,eax
"RXC2.exe"+1FAB812: E8 99 18 01 00        -  call RXC2.exe+1FBD0B0
"RXC2.exe"+1FAB817: 0F BE C0              -  movsx eax,al
"RXC2.exe"+1FAB81A: 8B CF                 -  mov ecx,edi
"RXC2.exe"+1FAB81C: 50                    -  push eax
"RXC2.exe"+1FAB81D: E8 5E 1D 01 00        -  call RXC2.exe+1FBD580
"RXC2.exe"+1FAB822: 8B C8                 -  mov ecx,eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>409</ID>
          <Description>"X-Buster Always Charged"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-16
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XBusterAlwaysChargedX6_AOB,RXC2.exe,75 27 57 8B CE) // should be unique
aobscanmodule(XBusterAlwaysChargedX6_AOB2,RXC2.exe,0F 84 A9 00 00 00 6A 2E) // should be unique
registersymbol(XBusterAlwaysChargedX6_AOB)
registersymbol(XBusterAlwaysChargedX6_AOB2)

XBusterAlwaysChargedX6_AOB:
  db EB 27

XBusterAlwaysChargedX6_AOB2:
  db 90 90 90 90 90 90

[DISABLE]

XBusterAlwaysChargedX6_AOB:
  db 75 27

XBusterAlwaysChargedX6_AOB2:
  db 0F 84 A9 00 00 00

unregistersymbol(XBusterAlwaysChargedX6_AOB)
unregistersymbol(XBusterAlwaysChargedX6_AOB2)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1FABDFF

"RXC2.exe"+1FABDDF: 75 0F                    -  jne RXC2.exe+1FABDF0
"RXC2.exe"+1FABDE1: 6A 12                    -  push 12
"RXC2.exe"+1FABDE3: FF 74 24 0C              -  push [esp+0C]
"RXC2.exe"+1FABDE7: E8 74 15 01 00           -  call RXC2.exe+1FBD360
"RXC2.exe"+1FABDEC: 5E                       -  pop esi
"RXC2.exe"+1FABDED: C2 04 00                 -  ret 0004
"RXC2.exe"+1FABDF0: 57                       -  push edi
"RXC2.exe"+1FABDF1: E8 4A 11 01 00           -  call RXC2.exe+1FBCF40
"RXC2.exe"+1FABDF6: 8B 7C 24 0C              -  mov edi,[esp+0C]
"RXC2.exe"+1FABDFA: A9 00 00 08 00           -  test eax,00080000
// ---------- INJECTING HERE ----------
"RXC2.exe"+1FABDFF: 75 27                    -  jne RXC2.exe+1FABE28
"RXC2.exe"+1FABE01: 57                       -  push edi
"RXC2.exe"+1FABE02: 8B CE                    -  mov ecx,esi
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1FABE04: E8 87 7C CF FF           -  call RXC2.exe+1CA3A90
"RXC2.exe"+1FABE09: 84 C0                    -  test al,al
"RXC2.exe"+1FABE0B: 74 6F                    -  je RXC2.exe+1FABE7C
"RXC2.exe"+1FABE0D: 57                       -  push edi
"RXC2.exe"+1FABE0E: 8B CE                    -  mov ecx,esi
"RXC2.exe"+1FABE10: E8 7B 7C CF FF           -  call RXC2.exe+1CA3A90
"RXC2.exe"+1FABE15: 3C 01                    -  cmp al,01
"RXC2.exe"+1FABE17: 75 0F                    -  jne RXC2.exe+1FABE28
"RXC2.exe"+1FABE19: 6A 09                    -  push 09
"RXC2.exe"+1FABE1B: 8B CE                    -  mov ecx,esi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>410</ID>
          <Description>"Special Weapons Always Charged"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-16
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SpecialWeaponsAlwaysChargedX6_AOB,RXC2.exe,74 3D 8B CE E8 66 7F CF FF) // should be unique
registersymbol(SpecialWeaponsAlwaysChargedX6_AOB)

SpecialWeaponsAlwaysChargedX6_AOB:
  db 90 90

[DISABLE]

SpecialWeaponsAlwaysChargedX6_AOB:
  db 74 3D

unregistersymbol(SpecialWeaponsAlwaysChargedX6_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1FABD21

"RXC2.exe"+1FABD04: 75 11                    -  jne RXC2.exe+1FABD17
"RXC2.exe"+1FABD06: 6A 00                    -  push 00
"RXC2.exe"+1FABD08: E8 93 12 01 00           -  call RXC2.exe+1FBCFA0
"RXC2.exe"+1FABD0D: 04 09                    -  add al,09
"RXC2.exe"+1FABD0F: 8B CE                    -  mov ecx,esi
"RXC2.exe"+1FABD11: 0F B6 C0                 -  movzx eax,al
"RXC2.exe"+1FABD14: 50                       -  push eax
"RXC2.exe"+1FABD15: EB 42                    -  jmp RXC2.exe+1FABD59
"RXC2.exe"+1FABD17: E8 24 12 01 00           -  call RXC2.exe+1FBCF40
"RXC2.exe"+1FABD1C: A9 00 00 08 00           -  test eax,00080000
// ---------- INJECTING HERE ----------
"RXC2.exe"+1FABD21: 74 3D                    -  je RXC2.exe+1FABD60
"RXC2.exe"+1FABD23: 8B CE                    -  mov ecx,esi
"RXC2.exe"+1FABD25: E8 06 11 01 00           -  call RXC2.exe+1FBCE30
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1FABD2A: 3C 01                    -  cmp al,01
"RXC2.exe"+1FABD2C: 74 16                    -  je RXC2.exe+1FABD44
"RXC2.exe"+1FABD2E: 8B CE                    -  mov ecx,esi
"RXC2.exe"+1FABD30: E8 FB 10 01 00           -  call RXC2.exe+1FBCE30
"RXC2.exe"+1FABD35: 3C 04                    -  cmp al,04
"RXC2.exe"+1FABD37: 74 0B                    -  je RXC2.exe+1FABD44
"RXC2.exe"+1FABD39: 8B CE                    -  mov ecx,esi
"RXC2.exe"+1FABD3B: E8 F0 10 01 00           -  call RXC2.exe+1FBCE30
"RXC2.exe"+1FABD40: 3C 03                    -  cmp al,03
"RXC2.exe"+1FABD42: 75 1C                    -  jne RXC2.exe+1FABD60
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>411</ID>
          <Description>"Rapid Fire"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-15
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RapidFireX5_AOB,RXC2.exe,0F 8D 22 03 00 00) // should be unique
registersymbol(RapidFireX5_AOB)

RapidFireX5_AOB:
  db 90 90 90 90 90 90

[DISABLE]

RapidFireX5_AOB:
  db 0F 8D 22 03 00 00

unregistersymbol(RapidFireX5_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+20F8277

"RXC2.exe"+20F8258: 55                    -  push ebp
"RXC2.exe"+20F8259: E8 32 11 00 00        -  call RXC2.exe+20F9390
"RXC2.exe"+20F825E: 8B CE                 -  mov ecx,esi
"RXC2.exe"+20F8260: 8A D8                 -  mov bl,al
"RXC2.exe"+20F8262: E8 F9 B6 EB FF        -  call RXC2.exe+1FB3960
"RXC2.exe"+20F8267: 8B C8                 -  mov ecx,eax
"RXC2.exe"+20F8269: E8 12 53 EC FF        -  call RXC2.exe+1FBD580
"RXC2.exe"+20F826E: 8B C8                 -  mov ecx,eax
"RXC2.exe"+20F8270: E8 1B 4D EC FF        -  call RXC2.exe+1FBCF90
"RXC2.exe"+20F8275: 3A C3                 -  cmp al,bl
// ---------- INJECTING HERE ----------
"RXC2.exe"+20F8277: 0F 8D 22 03 00 00     -  jnl RXC2.exe+20F859F
// ---------- DONE INJECTING  ----------
"RXC2.exe"+20F827D: 80 BF 98 3E 48 03 00  -  cmp byte ptr [edi+RXC2.exe+3083E98],00
"RXC2.exe"+20F8284: 74 1D                 -  je RXC2.exe+20F82A3
"RXC2.exe"+20F8286: 8B CE                 -  mov ecx,esi
"RXC2.exe"+20F8288: E8 D3 B6 EB FF        -  call RXC2.exe+1FB3960
"RXC2.exe"+20F828D: 8B C8                 -  mov ecx,eax
"RXC2.exe"+20F828F: E8 EC 52 EC FF        -  call RXC2.exe+1FBD580
"RXC2.exe"+20F8294: 8B C8                 -  mov ecx,eax
"RXC2.exe"+20F8296: E8 D5 4D EC FF        -  call RXC2.exe+1FBD070
"RXC2.exe"+20F829B: 84 C0                 -  test al,al
"RXC2.exe"+20F829D: 0F 85 FC 02 00 00     -  jne RXC2.exe+20F859F
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>412</ID>
          <Description>"Equip Unlimited Parts"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-16
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(EquipUnlimitedPartsX6_AOB,RXC2.exe,7C 0C C6 87 E5 04 00 00 02) // should be unique
registersymbol(EquipUnlimitedPartsX6_AOB)

EquipUnlimitedPartsX6_AOB:
  db EB 0C

[DISABLE]

EquipUnlimitedPartsX6_AOB:
  db 7C 0C

unregistersymbol(EquipUnlimitedPartsX6_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1FD98D8

"RXC2.exe"+1FD98AE: E8 7D 28 FD FF        -  call RXC2.exe+1FAC130
"RXC2.exe"+1FD98B3: 8B C8                 -  mov ecx,eax
"RXC2.exe"+1FD98B5: E8 56 28 FD FF        -  call RXC2.exe+1FAC110
"RXC2.exe"+1FD98BA: 8B C8                 -  mov ecx,eax
"RXC2.exe"+1FD98BC: E8 8F E3 C5 FF        -  call RXC2.exe+1C37C50
"RXC2.exe"+1FD98C1: 8B C8                 -  mov ecx,eax
"RXC2.exe"+1FD98C3: E8 A8 B8 FD FF        -  call RXC2.exe+1FB5170
"RXC2.exe"+1FD98C8: 0F BE C0              -  movsx eax,al
"RXC2.exe"+1FD98CB: 8A 84 38 FC 04 00 00  -  mov al,[eax+edi+000004FC]
"RXC2.exe"+1FD98D2: 3A 86 A0 A6 1D 03     -  cmp al,[esi+RXC2.exe+2DDA6A0]
// ---------- INJECTING HERE ----------
"RXC2.exe"+1FD98D8: 7C 0C                 -  jl RXC2.exe+1FD98E6
"RXC2.exe"+1FD98DA: C6 87 E5 04 00 00 02  -  mov byte ptr [edi+000004E5],02
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1FD98E1: E9 82 00 00 00        -  jmp RXC2.exe+1FD9968
"RXC2.exe"+1FD98E6: 6A 03                 -  push 03
"RXC2.exe"+1FD98E8: E8 43 28 FD FF        -  call RXC2.exe+1FAC130
"RXC2.exe"+1FD98ED: 8B C8                 -  mov ecx,eax
"RXC2.exe"+1FD98EF: E8 1C 28 FD FF        -  call RXC2.exe+1FAC110
"RXC2.exe"+1FD98F4: 8B C8                 -  mov ecx,eax
"RXC2.exe"+1FD98F6: E8 55 E3 C5 FF        -  call RXC2.exe+1C37C50
"RXC2.exe"+1FD98FB: 8B C8                 -  mov ecx,eax
"RXC2.exe"+1FD98FD: E8 6E B8 FD FF        -  call RXC2.exe+1FB5170
"RXC2.exe"+1FD9902: 0F BE C0              -  movsx eax,al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>413</ID>
          <Description>"Unlimited Use Limited Parts"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-15
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(UnlimitedLimitedPartsX6_AOB,RXC2.exe,6A 01 8B CB E8 99 B7 FC FF) // should be unique
registersymbol(UnlimitedLimitedPartsX6_AOB)

UnlimitedLimitedPartsX6_AOB:
  db 6A 00

[DISABLE]

UnlimitedLimitedPartsX6_AOB:
  db 6A 01

unregistersymbol(UnlimitedLimitedPartsX6_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1FE8A4E

"RXC2.exe"+1FE8A2C: 84 C0              -  test al,al
"RXC2.exe"+1FE8A2E: 0F 85 35 01 00 00  -  jne RXC2.exe+1FE8B69
"RXC2.exe"+1FE8A34: 6A 17              -  push 17
"RXC2.exe"+1FE8A36: 8B CF              -  mov ecx,edi
"RXC2.exe"+1FE8A38: E8 53 8C 14 00     -  call RXC2.exe+2131690
"RXC2.exe"+1FE8A3D: 0F B6 C0           -  movzx eax,al
"RXC2.exe"+1FE8A40: 83 E8 04           -  sub eax,04
"RXC2.exe"+1FE8A43: 0F 84 8A 00 00 00  -  je RXC2.exe+1FE8AD3
"RXC2.exe"+1FE8A49: 83 E8 01           -  sub eax,01
"RXC2.exe"+1FE8A4C: 74 54              -  je RXC2.exe+1FE8AA2
// ---------- INJECTING HERE ----------
"RXC2.exe"+1FE8A4E: 6A 01              -  push 01
"RXC2.exe"+1FE8A50: 8B CB              -  mov ecx,ebx
"RXC2.exe"+1FE8A52: E8 19 B5 FC FF     -  call RXC2.exe+1FB3F70
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1FE8A57: 6A 00              -  push 00
"RXC2.exe"+1FE8A59: 6A 22              -  push 22
"RXC2.exe"+1FE8A5B: 6A 00              -  push 00
"RXC2.exe"+1FE8A5D: E8 CE 35 FD FF     -  call RXC2.exe+1FBC030
"RXC2.exe"+1FE8A62: 8B C8              -  mov ecx,eax
"RXC2.exe"+1FE8A64: E8 57 2B FD FF     -  call RXC2.exe+1FBB5C0
"RXC2.exe"+1FE8A69: 6A 17              -  push 17
"RXC2.exe"+1FE8A6B: 8B CF              -  mov ecx,edi
"RXC2.exe"+1FE8A6D: E8 1E 8C 14 00     -  call RXC2.exe+2131690
"RXC2.exe"+1FE8A72: 8B CD              -  mov ecx,ebp
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>414</ID>
          <Description>"Inf. Limited Parts Time"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-15
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfLimitedPartsX6_AOB,RXC2.exe,D9 1C 24 E8 C3 F6 E7 FF) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov dword ptr [esp],(float)0
code:
  fld dword ptr [esp]
  call RXC2.exe+1FBE310
  jmp return

InfLimitedPartsX6_AOB:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(InfLimitedPartsX6_AOB)

[DISABLE]

InfLimitedPartsX6_AOB:
  db D9 1C 24 E8 C3 F6 E7 FF

unregistersymbol(InfLimitedPartsX6_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+213D6F5

"RXC2.exe"+213D6D5: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213D6D7: E8 34 F1 B5 FF        -  call RXC2.exe+1C9C810
"RXC2.exe"+213D6DC: 84 C0                 -  test al,al
"RXC2.exe"+213D6DE: 74 2B                 -  je RXC2.exe+213D70B
"RXC2.exe"+213D6E0: 8B B7 D4 00 00 00     -  mov esi,[edi+000000D4]
"RXC2.exe"+213D6E6: E8 A5 D5 E6 FF        -  call RXC2.exe+1FAAC90
"RXC2.exe"+213D6EB: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213D6ED: E8 5E D5 E6 FF        -  call RXC2.exe+1FAAC50
"RXC2.exe"+213D6F2: 51                    -  push ecx
"RXC2.exe"+213D6F3: 8B CE                 -  mov ecx,esi
// ---------- INJECTING HERE ----------
"RXC2.exe"+213D6F5: D9 1C 24              -  fstp dword ptr [esp]
"RXC2.exe"+213D6F8: E8 83 FE E7 FF        -  call RXC2.exe+1FBD580
// ---------- DONE INJECTING  ----------
"RXC2.exe"+213D6FD: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213D6FF: E8 0C 64 B6 FF        -  call RXC2.exe+1CA3B10
"RXC2.exe"+213D704: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213D706: E8 75 00 B6 FF        -  call RXC2.exe+1C9D780
"RXC2.exe"+213D70B: 8B 8F D4 00 00 00     -  mov ecx,[edi+000000D4]
"RXC2.exe"+213D711: 6A 00                 -  push 00
"RXC2.exe"+213D713: E8 68 FE E7 FF        -  call RXC2.exe+1FBD580
"RXC2.exe"+213D718: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213D71A: E8 F1 63 B6 FF        -  call RXC2.exe+1CA3B10
"RXC2.exe"+213D71F: 8B C8                 -  mov ecx,eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>415</ID>
          <Description>"Always Rescue Reploids"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-16
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AlwaysRescueReploidsX6_AOB,RXC2.exe,0F B6 54 24 10) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov byte ptr [esp+10],2
code:
  movzx edx,byte ptr [esp+10]
  jmp return

AlwaysRescueReploidsX6_AOB:
  jmp newmem
return:
registersymbol(AlwaysRescueReploidsX6_AOB)

[DISABLE]

AlwaysRescueReploidsX6_AOB:
  db 0F B6 54 24 10

unregistersymbol(AlwaysRescueReploidsX6_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+20AB3DA

"RXC2.exe"+20AB3BA: E8 01 73 BF FF        -  call RXC2.exe+1CA26C0
"RXC2.exe"+20AB3BF: 8B C8                 -  mov ecx,eax
"RXC2.exe"+20AB3C1: E8 1A A1 D8 FF        -  call RXC2.exe+1E354E0
"RXC2.exe"+20AB3C6: 8B C8                 -  mov ecx,eax
"RXC2.exe"+20AB3C8: E8 73 88 F0 FF        -  call RXC2.exe+1FB3C40
"RXC2.exe"+20AB3CD: 8B CE                 -  mov ecx,esi
"RXC2.exe"+20AB3CF: BA 0F 00 00 00        -  mov edx,0000000F
"RXC2.exe"+20AB3D4: D3 E2                 -  shl edx,cl
"RXC2.exe"+20AB3D6: F7 D2                 -  not edx
"RXC2.exe"+20AB3D8: 23 C2                 -  and eax,edx
// ---------- INJECTING HERE ----------
"RXC2.exe"+20AB3DA: 0F B6 54 24 10        -  movzx edx,byte ptr [esp+10]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+20AB3DF: D3 E2                 -  shl edx,cl
"RXC2.exe"+20AB3E1: 0B C2                 -  or eax,edx
"RXC2.exe"+20AB3E3: 50                    -  push eax
"RXC2.exe"+20AB3E4: 57                    -  push edi
"RXC2.exe"+20AB3E5: E8 A6 F8 EF FF        -  call RXC2.exe+1FAAC90
"RXC2.exe"+20AB3EA: 8B C8                 -  mov ecx,eax
"RXC2.exe"+20AB3EC: E8 CF 72 BF FF        -  call RXC2.exe+1CA26C0
"RXC2.exe"+20AB3F1: 8B C8                 -  mov ecx,eax
"RXC2.exe"+20AB3F3: E8 E8 A0 D8 FF        -  call RXC2.exe+1E354E0
"RXC2.exe"+20AB3F8: 8B C8                 -  mov ecx,eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>416</ID>
          <Description>"Inf. Blade Dash"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-16
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfBladeArmorDashX6_AOB,RXC2.exe,6A 07 8B CE E8 87 2D 0C 00) // should be unique
registersymbol(InfBladeArmorDashX6_AOB)

InfBladeArmorDashX6_AOB:
  db 6A 00

[DISABLE]

InfBladeArmorDashX6_AOB:
  db 6A 07

unregistersymbol(InfBladeArmorDashX6_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2079A60

"RXC2.exe"+2079A3C: 8B C8                 -  mov ecx,eax
"RXC2.exe"+2079A3E: E8 7D 2E 65 00        -  call RXC2.exe+26CC8C0
"RXC2.exe"+2079A43: 51                    -  push ecx
"RXC2.exe"+2079A44: 8B CE                 -  mov ecx,esi
"RXC2.exe"+2079A46: C7 04 24 00 00 70 41  -  mov [esp],41700000
"RXC2.exe"+2079A4D: E8 0E 9F F3 FF        -  call RXC2.exe+1FB3960
"RXC2.exe"+2079A52: 8B C8                 -  mov ecx,eax
"RXC2.exe"+2079A54: E8 27 3B F4 FF        -  call RXC2.exe+1FBD580
"RXC2.exe"+2079A59: 8B C8                 -  mov ecx,eax
"RXC2.exe"+2079A5B: E8 30 A4 C2 FF        -  call RXC2.exe+1CA3E90
// ---------- INJECTING HERE ----------
"RXC2.exe"+2079A60: 6A 07                 -  push 07
"RXC2.exe"+2079A62: 8B CE                 -  mov ecx,esi
"RXC2.exe"+2079A64: E8 F7 9E F3 FF        -  call RXC2.exe+1FB3960
// ---------- DONE INJECTING  ----------
"RXC2.exe"+2079A69: 8B C8                 -  mov ecx,eax
"RXC2.exe"+2079A6B: E8 10 3B F4 FF        -  call RXC2.exe+1FBD580
"RXC2.exe"+2079A70: 8B C8                 -  mov ecx,eax
"RXC2.exe"+2079A72: E8 29 89 C2 FF        -  call RXC2.exe+1CA23A0
"RXC2.exe"+2079A77: 6A 00                 -  push 00
"RXC2.exe"+2079A79: 8B CE                 -  mov ecx,esi
"RXC2.exe"+2079A7B: E8 E0 9E F3 FF        -  call RXC2.exe+1FB3960
"RXC2.exe"+2079A80: 8B C8                 -  mov ecx,eax
"RXC2.exe"+2079A82: E8 F9 3A F4 FF        -  call RXC2.exe+1FBD580
"RXC2.exe"+2079A87: 8B C8                 -  mov ecx,eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>417</ID>
          <Description>"Inf. Air Dash"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-16
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfAirDashX6_AOB,RXC2.exe,6A 03 E8 73 24 E8 FF) // should be unique
registersymbol(InfAirDashX6_AOB)

InfAirDashX6_AOB:
  db 6A 00

[DISABLE]

InfAirDashX6_AOB:
  db 6A 03

unregistersymbol(InfAirDashX6_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+213BE96

"RXC2.exe"+213BE6A: 8B 8F D4 00 00 00     -  mov ecx,[edi+000000D4]
"RXC2.exe"+213BE70: A8 10                 -  test al,10
"RXC2.exe"+213BE72: 74 09                 -  je RXC2.exe+213BE7D
"RXC2.exe"+213BE74: C7 04 24 00 00 20 41  -  mov [esp],41200000
"RXC2.exe"+213BE7B: EB 07                 -  jmp RXC2.exe+213BE84
"RXC2.exe"+213BE7D: C7 04 24 00 00 90 41  -  mov [esp],41900000
"RXC2.exe"+213BE84: E8 87 24 E8 FF        -  call RXC2.exe+1FBE310
"RXC2.exe"+213BE89: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213BE8B: E8 40 97 B6 FF        -  call RXC2.exe+1CA55D0
"RXC2.exe"+213BE90: 8B 8F D4 00 00 00     -  mov ecx,[edi+000000D4]
// ---------- INJECTING HERE ----------
"RXC2.exe"+213BE96: 6A 03                 -  push 03
"RXC2.exe"+213BE98: E8 73 24 E8 FF        -  call RXC2.exe+1FBE310
// ---------- DONE INJECTING  ----------
"RXC2.exe"+213BE9D: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213BE9F: E8 0C 97 B6 FF        -  call RXC2.exe+1CA55B0
"RXC2.exe"+213BEA4: E8 87 02 E7 FF        -  call RXC2.exe+1FAC130
"RXC2.exe"+213BEA9: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213BEAB: E8 80 F1 E6 FF        -  call RXC2.exe+1FAB030
"RXC2.exe"+213BEB0: 8B 8F D4 00 00 00     -  mov ecx,[edi+000000D4]
"RXC2.exe"+213BEB6: 6A 0D                 -  push 0D
"RXC2.exe"+213BEB8: E8 03 B6 E9 FF        -  call RXC2.exe+1FD74C0
"RXC2.exe"+213BEBD: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213BEBF: E8 2C 7C B6 FF        -  call RXC2.exe+1CA3AF0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>418</ID>
          <Description>"Inf. Double Jump"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-18
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfDoubleJumpX6_AOB,RXC2.exe,6A 06 8B CE E8 82 E8 02 00) // should be unique
registersymbol(InfDoubleJumpX6_AOB)

InfDoubleJumpX6_AOB:
  db 6A 00

[DISABLE]

InfDoubleJumpX6_AOB:
  db 6A 06

unregistersymbol(InfDoubleJumpX6_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+210EFC5

"RXC2.exe"+210EFA2: E8 49 36 EC FF     -  call RXC2.exe+1FD25F0
"RXC2.exe"+210EFA7: 8B C8              -  mov ecx,eax
"RXC2.exe"+210EFA9: E8 32 F8 ED FF     -  call RXC2.exe+1FEE7E0
"RXC2.exe"+210EFAE: 6A 00              -  push 00
"RXC2.exe"+210EFB0: 8B CE              -  mov ecx,esi
"RXC2.exe"+210EFB2: E8 99 E8 02 00     -  call RXC2.exe+213D850
"RXC2.exe"+210EFB7: 8B C8              -  mov ecx,eax
"RXC2.exe"+210EFB9: E8 52 F3 EA FF     -  call RXC2.exe+1FBE310
"RXC2.exe"+210EFBE: 8B C8              -  mov ecx,eax
"RXC2.exe"+210EFC0: E8 7B F6 EA FF     -  call RXC2.exe+1FBE640
// ---------- INJECTING HERE ----------
"RXC2.exe"+210EFC5: 6A 06              -  push 06
"RXC2.exe"+210EFC7: 8B CE              -  mov ecx,esi
"RXC2.exe"+210EFC9: E8 82 E8 02 00     -  call RXC2.exe+213D850
// ---------- DONE INJECTING  ----------
"RXC2.exe"+210EFCE: 8B C8              -  mov ecx,eax
"RXC2.exe"+210EFD0: E8 3B F3 EA FF     -  call RXC2.exe+1FBE310
"RXC2.exe"+210EFD5: 8B C8              -  mov ecx,eax
"RXC2.exe"+210EFD7: E8 D4 65 B9 FF     -  call RXC2.exe+1CA55B0
"RXC2.exe"+210EFDC: 6A 00              -  push 00
"RXC2.exe"+210EFDE: 8B CE              -  mov ecx,esi
"RXC2.exe"+210EFE0: E8 6B E8 02 00     -  call RXC2.exe+213D850
"RXC2.exe"+210EFE5: 8B C8              -  mov ecx,eax
"RXC2.exe"+210EFE7: E8 24 F3 EA FF     -  call RXC2.exe+1FBE310
"RXC2.exe"+210EFEC: 8B C8              -  mov ecx,eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>419</ID>
          <Description>"Hover Again"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-16
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(HoverAgainX6_AOB,RXC2.exe,6A 04 8B CE E8 AD 16 01 00) // should be unique
registersymbol(HoverAgainX6_AOB)

HoverAgainX6_AOB:
  db 6A 00

[DISABLE]

HoverAgainX6_AOB:
  db 6A 04

unregistersymbol(HoverAgainX6_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+212C19A

"RXC2.exe"+212C177: E8 74 64 EA FF        -  call RXC2.exe+1FD25F0
"RXC2.exe"+212C17C: 8B C8                 -  mov ecx,eax
"RXC2.exe"+212C17E: E8 5D 26 EC FF        -  call RXC2.exe+1FEE7E0
"RXC2.exe"+212C183: 6A 00                 -  push 00
"RXC2.exe"+212C185: 8B CE                 -  mov ecx,esi
"RXC2.exe"+212C187: E8 C4 16 01 00        -  call RXC2.exe+213D850
"RXC2.exe"+212C18C: 8B C8                 -  mov ecx,eax
"RXC2.exe"+212C18E: E8 7D 21 E9 FF        -  call RXC2.exe+1FBE310
"RXC2.exe"+212C193: 8B C8                 -  mov ecx,eax
"RXC2.exe"+212C195: E8 A6 24 E9 FF        -  call RXC2.exe+1FBE640
// ---------- INJECTING HERE ----------
"RXC2.exe"+212C19A: 6A 04                 -  push 04
"RXC2.exe"+212C19C: 8B CE                 -  mov ecx,esi
"RXC2.exe"+212C19E: E8 AD 16 01 00        -  call RXC2.exe+213D850
// ---------- DONE INJECTING  ----------
"RXC2.exe"+212C1A3: 8B C8                 -  mov ecx,eax
"RXC2.exe"+212C1A5: E8 66 21 E9 FF        -  call RXC2.exe+1FBE310
"RXC2.exe"+212C1AA: 8B C8                 -  mov ecx,eax
"RXC2.exe"+212C1AC: E8 FF 93 B7 FF        -  call RXC2.exe+1CA55B0
"RXC2.exe"+212C1B1: 6A 00                 -  push 00
"RXC2.exe"+212C1B3: 8B CE                 -  mov ecx,esi
"RXC2.exe"+212C1B5: E8 96 16 01 00        -  call RXC2.exe+213D850
"RXC2.exe"+212C1BA: 8B C8                 -  mov ecx,eax
"RXC2.exe"+212C1BC: E8 4F 21 E9 FF        -  call RXC2.exe+1FBE310
"RXC2.exe"+212C1C1: 8B C8                 -  mov ecx,eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>420</ID>
          <Description>"Inf. Hover Time"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-16
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfHoverTimeX6_AOB,RXC2.exe,84 C0 75 09 85 F6) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov dword ptr [ecx+4],(float)180
code:
  test al,al
  jne RXC2.exe+212C2C3
  test esi,esi
  jmp return

InfHoverTimeX6_AOB:
  jmp newmem
  nop
return:
registersymbol(InfHoverTimeX6_AOB)

[DISABLE]

InfHoverTimeX6_AOB:
  db 84 C0 75 09 85 F6

unregistersymbol(InfHoverTimeX6_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+212C2B6

"RXC2.exe"+212C28F: 8B CF                 -  mov ecx,edi
"RXC2.exe"+212C291: D9 5C 24 04           -  fstp dword ptr [esp+04]
"RXC2.exe"+212C295: C7 04 24 00 00 00 00  -  mov [esp],00000000
"RXC2.exe"+212C29C: E8 AF 15 01 00        -  call RXC2.exe+213D850
"RXC2.exe"+212C2A1: 8B C8                 -  mov ecx,eax
"RXC2.exe"+212C2A3: E8 68 20 E9 FF        -  call RXC2.exe+1FBE310
"RXC2.exe"+212C2A8: 8B C8                 -  mov ecx,eax
"RXC2.exe"+212C2AA: E8 61 8F B7 FF        -  call RXC2.exe+1CA5210
"RXC2.exe"+212C2AF: 8B C8                 -  mov ecx,eax
"RXC2.exe"+212C2B1: E8 8A 28 B7 FF        -  call RXC2.exe+1C9EB40
// ---------- INJECTING HERE ----------
"RXC2.exe"+212C2B6: 84 C0                 -  test al,al
"RXC2.exe"+212C2B8: 75 09                 -  jne RXC2.exe+212C2C3
"RXC2.exe"+212C2BA: 85 F6                 -  test esi,esi
// ---------- DONE INJECTING  ----------
"RXC2.exe"+212C2BC: 75 05                 -  jne RXC2.exe+212C2C3
"RXC2.exe"+212C2BE: 5F                    -  pop edi
"RXC2.exe"+212C2BF: 33 C0                 -  xor eax,eax
"RXC2.exe"+212C2C1: 5E                    -  pop esi
"RXC2.exe"+212C2C2: C3                    -  ret 
"RXC2.exe"+212C2C3: 8B CF                 -  mov ecx,edi
"RXC2.exe"+212C2C5: E8 C6 00 01 00        -  call RXC2.exe+213C390
"RXC2.exe"+212C2CA: 5F                    -  pop edi
"RXC2.exe"+212C2CB: B8 01 00 00 00        -  mov eax,00000001
"RXC2.exe"+212C2D0: 5E                    -  pop esi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>421</ID>
          <Description>"Min. Stage Time"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-15
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ZeroStageTimeX6_AOB,RXC2.exe,40 50 E8 70 D5 E6 FF) // should be unique
registersymbol(ZeroStageTimeX6_AOB)

ZeroStageTimeX6_AOB:
  db 90

[DISABLE]

ZeroStageTimeX6_AOB:
  db 40

unregistersymbol(ZeroStageTimeX6_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+213D669

"RXC2.exe"+213D63F: 83 E0 3F              -  and eax,3F
"RXC2.exe"+213D642: 80 B8 C0 73 48 03 00  -  cmp byte ptr [eax+RXC2.exe+30873C0],00
"RXC2.exe"+213D649: 0F 84 EF 00 00 00     -  je RXC2.exe+213D73E
"RXC2.exe"+213D64F: E8 3C D6 E6 FF        -  call RXC2.exe+1FAAC90
"RXC2.exe"+213D654: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213D656: E8 65 50 B6 FF        -  call RXC2.exe+1CA26C0
"RXC2.exe"+213D65B: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213D65D: E8 7E 7E CF FF        -  call RXC2.exe+1E354E0
"RXC2.exe"+213D662: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213D664: E8 87 62 E7 FF        -  call RXC2.exe+1FB38F0
// ---------- INJECTING HERE ----------
"RXC2.exe"+213D669: 40                    -  inc eax
"RXC2.exe"+213D66A: 50                    -  push eax
"RXC2.exe"+213D66B: E8 20 D6 E6 FF        -  call RXC2.exe+1FAAC90
// ---------- DONE INJECTING  ----------
"RXC2.exe"+213D670: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213D672: E8 49 50 B6 FF        -  call RXC2.exe+1CA26C0
"RXC2.exe"+213D677: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213D679: E8 62 7E CF FF        -  call RXC2.exe+1E354E0
"RXC2.exe"+213D67E: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213D680: E8 1B 67 E7 FF        -  call RXC2.exe+1FB3DA0
"RXC2.exe"+213D685: E8 06 D6 E6 FF        -  call RXC2.exe+1FAAC90
"RXC2.exe"+213D68A: 8B C8                 -  mov ecx,eax
"RXC2.exe"+213D68C: E8 2F 50 B6 FF        -  call RXC2.exe+1CA26C0
"RXC2.exe"+213D691: 8B C8                 -  mov ecx,eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>422</ID>
          <Description>"No Maverick Defeated"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-15
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ZeroMaverickDefeatedX6_AOB,RXC2.exe,40 50 E8 D8 0B FE FF) // should be unique
registersymbol(ZeroMaverickDefeatedX6_AOB)

ZeroMaverickDefeatedX6_AOB:
  db 90

[DISABLE]

ZeroMaverickDefeatedX6_AOB:
  db 40

unregistersymbol(ZeroMaverickDefeatedX6_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1FCA231

"RXC2.exe"+1FCA207: E8 84 6D A8 00     -  call RXC2.exe+2A50F90
"RXC2.exe"+1FCA20C: 3D C8 A6 1D 03     -  cmp eax,RXC2.exe+2DDA6C8
"RXC2.exe"+1FCA211: 0F 84 DB 00 00 00  -  je RXC2.exe+1FCA2F2
"RXC2.exe"+1FCA217: E8 74 0A FE FF     -  call RXC2.exe+1FAAC90
"RXC2.exe"+1FCA21C: 8B C8              -  mov ecx,eax
"RXC2.exe"+1FCA21E: E8 9D 84 CD FF     -  call RXC2.exe+1CA26C0
"RXC2.exe"+1FCA223: 8B C8              -  mov ecx,eax
"RXC2.exe"+1FCA225: E8 B6 B2 E6 FF     -  call RXC2.exe+1E354E0
"RXC2.exe"+1FCA22A: 8B C8              -  mov ecx,eax
"RXC2.exe"+1FCA22C: E8 EF EF B0 FF     -  call RXC2.exe+1AD9220
// ---------- INJECTING HERE ----------
"RXC2.exe"+1FCA231: 40                 -  inc eax
"RXC2.exe"+1FCA232: 50                 -  push eax
"RXC2.exe"+1FCA233: E8 58 0A FE FF     -  call RXC2.exe+1FAAC90
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1FCA238: 8B C8              -  mov ecx,eax
"RXC2.exe"+1FCA23A: E8 81 84 CD FF     -  call RXC2.exe+1CA26C0
"RXC2.exe"+1FCA23F: 8B C8              -  mov ecx,eax
"RXC2.exe"+1FCA241: E8 9A B2 E6 FF     -  call RXC2.exe+1E354E0
"RXC2.exe"+1FCA246: 8B C8              -  mov ecx,eax
"RXC2.exe"+1FCA248: E8 03 9C FE FF     -  call RXC2.exe+1FB3E50
"RXC2.exe"+1FCA24D: E8 3E 0A FE FF     -  call RXC2.exe+1FAAC90
"RXC2.exe"+1FCA252: 8B C8              -  mov ecx,eax
"RXC2.exe"+1FCA254: E8 67 84 CD FF     -  call RXC2.exe+1CA26C0
"RXC2.exe"+1FCA259: 8B C8              -  mov ecx,eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>423</ID>
          <Description>"No Damage Received"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-15
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ZeroDamageReceivedX6_AOB,RXC2.exe,89 81 D4 00 00 00 C2) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [ecx+000000D4],0
  jmp return

ZeroDamageReceivedX6_AOB:
  jmp newmem
  nop
return:
registersymbol(ZeroDamageReceivedX6_AOB)

[DISABLE]

ZeroDamageReceivedX6_AOB:
  db 89 81 D4 00 00 00

unregistersymbol(ZeroDamageReceivedX6_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1FB3E64

"RXC2.exe"+1FB3E4D: CC                    -  int 3 
"RXC2.exe"+1FB3E4E: CC                    -  int 3 
"RXC2.exe"+1FB3E4F: CC                    -  int 3 
"RXC2.exe"+1FB3E50: 8B 44 24 04           -  mov eax,[esp+04]
"RXC2.exe"+1FB3E54: 89 81 D0 00 00 00     -  mov [ecx+000000D0],eax
"RXC2.exe"+1FB3E5A: C2 04 00              -  ret 0004
"RXC2.exe"+1FB3E5D: CC                    -  int 3 
"RXC2.exe"+1FB3E5E: CC                    -  int 3 
"RXC2.exe"+1FB3E5F: CC                    -  int 3 
"RXC2.exe"+1FB3E60: 8B 44 24 04           -  mov eax,[esp+04]
// ---------- INJECTING HERE ----------
"RXC2.exe"+1FB3E64: 89 81 D4 00 00 00     -  mov [ecx+000000D4],eax
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1FB3E6A: C2 04 00              -  ret 0004
"RXC2.exe"+1FB3E6D: CC                    -  int 3 
"RXC2.exe"+1FB3E6E: CC                    -  int 3 
"RXC2.exe"+1FB3E6F: CC                    -  int 3 
"RXC2.exe"+1FB3E70: 66 8B 44 24 04        -  mov ax,[esp+04]
"RXC2.exe"+1FB3E75: 66 89 81 D8 00 00 00  -  mov [ecx+000000D8],ax
"RXC2.exe"+1FB3E7C: C2 04 00              -  ret 0004
"RXC2.exe"+1FB3E7F: CC                    -  int 3 
"RXC2.exe"+1FB3E80: 8A 44 24 04           -  mov al,[esp+04]
"RXC2.exe"+1FB3E84: 88 81 C8 00 00 00     -  mov [ecx+000000C8],al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>425</ID>
          <Description>"Max Collected Soul"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-15
  Author : Tegar

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MaxSoulCollectedX6_AOB,RXC2.exe,66 89 84 51 0E 01 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov word ptr [ecx+edx*2+0000010E],#9999
  jmp return

MaxSoulCollectedX6_AOB:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(MaxSoulCollectedX6_AOB)

[DISABLE]

MaxSoulCollectedX6_AOB:
  db 66 89 84 51 0E 01 00 00

unregistersymbol(MaxSoulCollectedX6_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+1FB3FDE

"RXC2.exe"+1FB3FCA: CC                       -  int 3 
"RXC2.exe"+1FB3FCB: CC                       -  int 3 
"RXC2.exe"+1FB3FCC: CC                       -  int 3 
"RXC2.exe"+1FB3FCD: CC                       -  int 3 
"RXC2.exe"+1FB3FCE: CC                       -  int 3 
"RXC2.exe"+1FB3FCF: CC                       -  int 3 
"RXC2.exe"+1FB3FD0: 8B 54 24 04              -  mov edx,[esp+04]
"RXC2.exe"+1FB3FD4: 83 FA 02                 -  cmp edx,02
"RXC2.exe"+1FB3FD7: 73 0D                    -  jae RXC2.exe+1FB3FE6
"RXC2.exe"+1FB3FD9: 66 8B 44 24 08           -  mov ax,[esp+08]
// ---------- INJECTING HERE ----------
"RXC2.exe"+1FB3FDE: 66 89 84 51 0E 01 00 00  -  mov [ecx+edx*2+0000010E],ax
// ---------- DONE INJECTING  ----------
"RXC2.exe"+1FB3FE6: C2 08 00                 -  ret 0008
"RXC2.exe"+1FB3FE9: CC                       -  int 3 
"RXC2.exe"+1FB3FEA: CC                       -  int 3 
"RXC2.exe"+1FB3FEB: CC                       -  int 3 
"RXC2.exe"+1FB3FEC: CC                       -  int 3 
"RXC2.exe"+1FB3FED: CC                       -  int 3 
"RXC2.exe"+1FB3FEE: CC                       -  int 3 
"RXC2.exe"+1FB3FEF: CC                       -  int 3 
"RXC2.exe"+1FB3FF0: 8A 44 24 04              -  mov al,[esp+04]
"RXC2.exe"+1FB3FF4: 88 81 04 01 00 00        -  mov [ecx+00000104],al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>441</ID>
          <Description>"X Soul Collected"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>RXC2.exe+3DD7814</Address>
          <Offsets>
            <Offset>17E</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>442</ID>
          <Description>"Zero Soul Collected"</Description>
          <VariableType>2 Bytes</VariableType>
          <Address>RXC2.exe+3DD7814</Address>
          <Offsets>
            <Offset>180</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>323</ID>
          <Description>"Parts"</Description>
          <DropDownList DisplayValueAsItem="1">03FFFFFC:All Parts
</DropDownList>
          <ShowAsHex>1</ShowAsHex>
          <VariableType>4 Bytes</VariableType>
          <Address>RXC2.exe+3DD7814</Address>
          <Offsets>
            <Offset>11C</Offset>
          </Offsets>
        </CheatEntry>
        <CheatEntry>
          <ID>426</ID>
          <Description>"Armor"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>427</ID>
              <Description>"Falcon Armor"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>0</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>RXC2.exe+3DD7814</Address>
              <Offsets>
                <Offset>10B</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>428</ID>
              <Description>"Shadow Armor"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>1</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>RXC2.exe+3DD7814</Address>
              <Offsets>
                <Offset>10B</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>429</ID>
                  <Description>"Helmet"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>4</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DD7814</Address>
                  <Offsets>
                    <Offset>115</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>430</ID>
                  <Description>"Body"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>6</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DD7814</Address>
                  <Offsets>
                    <Offset>115</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>431</ID>
                  <Description>"X-Buster"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>5</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DD7814</Address>
                  <Offsets>
                    <Offset>115</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>432</ID>
                  <Description>"Leg"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>7</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DD7814</Address>
                  <Offsets>
                    <Offset>115</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>433</ID>
              <Description>"Blade Armor"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>2</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>RXC2.exe+3DD7814</Address>
              <Offsets>
                <Offset>10B</Offset>
              </Offsets>
              <CheatEntries>
                <CheatEntry>
                  <ID>434</ID>
                  <Description>"Helmet"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DD7814</Address>
                  <Offsets>
                    <Offset>115</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>435</ID>
                  <Description>"Body"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>2</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DD7814</Address>
                  <Offsets>
                    <Offset>115</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>436</ID>
                  <Description>"X-Buster"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>1</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DD7814</Address>
                  <Offsets>
                    <Offset>115</Offset>
                  </Offsets>
                </CheatEntry>
                <CheatEntry>
                  <ID>437</ID>
                  <Description>"Leg"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>3</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DD7814</Address>
                  <Offsets>
                    <Offset>115</Offset>
                  </Offsets>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>438</ID>
              <Description>"Ultimate Armor"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>3</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>RXC2.exe+3DD7814</Address>
              <Offsets>
                <Offset>10B</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>439</ID>
              <Description>"Zero"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>4</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>RXC2.exe+3DD7814</Address>
              <Offsets>
                <Offset>10B</Offset>
              </Offsets>
            </CheatEntry>
            <CheatEntry>
              <ID>440</ID>
              <Description>"Zero's Black Armor"</Description>
              <ShowAsHex>1</ShowAsHex>
              <VariableType>Binary</VariableType>
              <BitStart>5</BitStart>
              <BitLength>1</BitLength>
              <ShowAsBinary>0</ShowAsBinary>
              <Address>RXC2.exe+3DD7814</Address>
              <Offsets>
                <Offset>10B</Offset>
              </Offsets>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>176</ID>
      <Description>"MegaMan X7"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>388</ID>
          <Description>"Invincible"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-10
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InvincibleX7_AOB,RXC2.exe,8A 44 1F 34 88 44 24 13) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov byte ptr [edi+ebx+34],1
code:
  mov al,[edi+ebx+34]
  mov [esp+13],al
  jmp return

InvincibleX7_AOB:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(InvincibleX7_AOB)

[DISABLE]

InvincibleX7_AOB:
  db 8A 44 1F 34 88 44 24 13

unregistersymbol(InvincibleX7_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21A27F4

"RXC2.exe"+21A27D9: 5E                             -  pop esi
"RXC2.exe"+21A27DA: 5D                             -  pop ebp
"RXC2.exe"+21A27DB: 59                             -  pop ecx
"RXC2.exe"+21A27DC: C3                             -  ret 
"RXC2.exe"+21A27DD: 8B 0D 88 09 4C 03              -  mov ecx,[RXC2.exe+30C0988]
"RXC2.exe"+21A27E3: 53                             -  push ebx
"RXC2.exe"+21A27E4: 8B 1D A4 09 4C 03              -  mov ebx,[RXC2.exe+30C09A4]
"RXC2.exe"+21A27EA: 57                             -  push edi
"RXC2.exe"+21A27EB: 8B BB 00 32 00 00              -  mov edi,[ebx+00003200]
"RXC2.exe"+21A27F1: C1 E7 07                       -  shl edi,07
// ---------- INJECTING HERE ----------
"RXC2.exe"+21A27F4: 8A 44 1F 34                    -  mov al,[edi+ebx+34]
"RXC2.exe"+21A27F8: 88 44 24 13                    -  mov [esp+13],al
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21A27FC: 84 C0                          -  test al,al
"RXC2.exe"+21A27FE: 75 18                          -  jne RXC2.exe+21A2818
"RXC2.exe"+21A2800: 69 82 04 04 00 00 D0 05 00 00  -  imul eax,[edx+00000404],000005D0
"RXC2.exe"+21A280A: F6 84 10 98 04 00 00 02        -  test byte ptr [eax+edx+00000498],02
"RXC2.exe"+21A2812: 0F 85 DA 00 00 00              -  jne RXC2.exe+21A28F2
"RXC2.exe"+21A2818: 69 82 04 04 00 00 D0 05 00 00  -  imul eax,[edx+00000404],000005D0
"RXC2.exe"+21A2822: 66 85 AC 10 98 04 00 00        -  test [eax+edx+00000498],bp
"RXC2.exe"+21A282A: 0F 85 C2 00 00 00              -  jne RXC2.exe+21A28F2
"RXC2.exe"+21A2830: 69 46 0C D0 05 00 00           -  imul eax,[esi+0C],000005D0
"RXC2.exe"+21A2837: F3 0F 10 86 14 09 00 00        -  movss xmm0,[esi+00000914]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>448</ID>
          <Description>"Inf. HP"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-22
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfHealthX7_AOB,RXC2.exe,8B 44 08 3C 89 87 60 08 00 00 83) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  push ebx
  mov ebx,[esi+70]
  mov [eax+ecx+3C],ebx
  pop ebx
code:
  mov eax,[eax+ecx+3C]
  mov [edi+00000860],eax
  jmp return

InfHealthX7_AOB:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(InfHealthX7_AOB)

[DISABLE]

InfHealthX7_AOB:
  db 8B 44 08 3C 89 87 60 08 00 00

unregistersymbol(InfHealthX7_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21A8DA0

"RXC2.exe"+21A8D75: 8B 0D 88 29 4C 03              -  mov ecx,[RXC2.exe+30C2988]
"RXC2.exe"+21A8D7B: 8D 87 70 07 00 00              -  lea eax,[edi+00000770]
"RXC2.exe"+21A8D81: 50                             -  push eax
"RXC2.exe"+21A8D82: E8 49 3E FB FF                 -  call RXC2.exe+215CBD0
"RXC2.exe"+21A8D87: 8A 87 FE 07 00 00              -  mov al,[edi+000007FE]
"RXC2.exe"+21A8D8D: 84 C0                          -  test al,al
"RXC2.exe"+21A8D8F: 75 3C                          -  jne RXC2.exe+21A8DCD
"RXC2.exe"+21A8D91: 8B 0D B4 29 4C 03              -  mov ecx,[RXC2.exe+30C29B4]
"RXC2.exe"+21A8D97: 8B 81 00 32 00 00              -  mov eax,[ecx+00003200]
"RXC2.exe"+21A8D9D: C1 E0 07                       -  shl eax,07
// ---------- INJECTING HERE ----------
"RXC2.exe"+21A8DA0: 8B 44 08 3C                    -  mov eax,[eax+ecx+3C]
"RXC2.exe"+21A8DA4: 89 87 60 08 00 00              -  mov [edi+00000860],eax
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21A8DAA: 83 7F 08 01                    -  cmp dword ptr [edi+08],01
"RXC2.exe"+21A8DAE: 74 11                          -  je RXC2.exe+21A8DC1
"RXC2.exe"+21A8DB0: 0F B6 47 5F                    -  movzx eax,byte ptr [edi+5F]
"RXC2.exe"+21A8DB4: 0F BF 44 47 72                 -  movsx eax,word ptr [edi+eax*2+72]
"RXC2.exe"+21A8DB9: 89 87 6C 08 00 00              -  mov [edi+0000086C],eax
"RXC2.exe"+21A8DBF: EB 3E                          -  jmp RXC2.exe+21A8DFF
"RXC2.exe"+21A8DC1: 0F BF 47 74                    -  movsx eax,word ptr [edi+74]
"RXC2.exe"+21A8DC5: 89 87 6C 08 00 00              -  mov [edi+0000086C],eax
"RXC2.exe"+21A8DCB: EB 32                          -  jmp RXC2.exe+21A8DFF
"RXC2.exe"+21A8DCD: 3C 01                          -  cmp al,01
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>177</ID>
          <Description>"Invincible"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-10
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InvincibleX7_AOB,RXC2.exe,8A 44 1F 34 88 44 24 13) // should be unique
aobscanmodule(InvincibleX7v2_AOB,RXC2.exe,80 7E 34 00 0F 85 BD 03 00 00) // should be unique
alloc(newmem,$1000)
alloc(newmem2,$1000)

label(code)
label(code2)
label(return)
label(return2)

//
newmem:
  mov byte ptr [edi+ebx+34],1
code:
  mov al,[edi+ebx+34]
  mov [esp+13],al
  jmp return

InvincibleX7_AOB:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(InvincibleX7_AOB)

//
newmem2:
  cmp byte ptr [esi+4C],00
  jne code2
  mov byte ptr [esi+34],01
code2:
  cmp byte ptr [esi+34],00
  jne RXC2.exe+21640F3
  jmp return2

InvincibleX7v2_AOB:
  jmp newmem2
  nop
  nop
  nop
  nop
  nop
return2:
registersymbol(InvincibleX7v2_AOB)

[DISABLE]

InvincibleX7_AOB:
  db 8A 44 1F 34 88 44 24 13

InvincibleX7v2_AOB:
  db 80 7E 34 00 0F 85 BD 03 00 00

unregistersymbol(InvincibleX7_AOB)
unregistersymbol(InvincibleX7v2_AOB)
dealloc(newmem)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21A27F4

"RXC2.exe"+21A27D9: 5E                             -  pop esi
"RXC2.exe"+21A27DA: 5D                             -  pop ebp
"RXC2.exe"+21A27DB: 59                             -  pop ecx
"RXC2.exe"+21A27DC: C3                             -  ret 
"RXC2.exe"+21A27DD: 8B 0D 88 09 4C 03              -  mov ecx,[RXC2.exe+30C0988]
"RXC2.exe"+21A27E3: 53                             -  push ebx
"RXC2.exe"+21A27E4: 8B 1D A4 09 4C 03              -  mov ebx,[RXC2.exe+30C09A4]
"RXC2.exe"+21A27EA: 57                             -  push edi
"RXC2.exe"+21A27EB: 8B BB 00 32 00 00              -  mov edi,[ebx+00003200]
"RXC2.exe"+21A27F1: C1 E7 07                       -  shl edi,07
// ---------- INJECTING HERE ----------
"RXC2.exe"+21A27F4: 8A 44 1F 34                    -  mov al,[edi+ebx+34]
"RXC2.exe"+21A27F8: 88 44 24 13                    -  mov [esp+13],al
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21A27FC: 84 C0                          -  test al,al
"RXC2.exe"+21A27FE: 75 18                          -  jne RXC2.exe+21A2818
"RXC2.exe"+21A2800: 69 82 04 04 00 00 D0 05 00 00  -  imul eax,[edx+00000404],000005D0
"RXC2.exe"+21A280A: F6 84 10 98 04 00 00 02        -  test byte ptr [eax+edx+00000498],02
"RXC2.exe"+21A2812: 0F 85 DA 00 00 00              -  jne RXC2.exe+21A28F2
"RXC2.exe"+21A2818: 69 82 04 04 00 00 D0 05 00 00  -  imul eax,[edx+00000404],000005D0
"RXC2.exe"+21A2822: 66 85 AC 10 98 04 00 00        -  test [eax+edx+00000498],bp
"RXC2.exe"+21A282A: 0F 85 C2 00 00 00              -  jne RXC2.exe+21A28F2
"RXC2.exe"+21A2830: 69 46 0C D0 05 00 00           -  imul eax,[esi+0C],000005D0
"RXC2.exe"+21A2837: F3 0F 10 86 14 09 00 00        -  movss xmm0,[esi+00000914]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>509</ID>
          <Description>"Inf. Ride Chaser HP"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-23
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfRideChaserHealthX7_AOB,RXC2.exe,8B 44 01 3C 8D 8E B0 07 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov byte ptr [ecx+eax+34],1
  push ebx
  movsx ebx,byte ptr [esi+41]
  mov [ecx+eax+3C],ebx
  pop ebx
code:
  mov eax,[ecx+eax+3C]
  lea ecx,[esi+000007B0]
  jmp return

InfRideChaserHealthX7_AOB:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(InfRideChaserHealthX7_AOB)

[DISABLE]

InfRideChaserHealthX7_AOB:
  db 8B 44 01 3C 8D 8E B0 07 00 00

unregistersymbol(InfRideChaserHealthX7_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+22D9093

"RXC2.exe"+22D9071: A1 B4 29 4C 03        -  mov eax,[RXC2.exe+30C29B4]
"RXC2.exe"+22D9076: 8B 56 18              -  mov edx,[esi+18]
"RXC2.exe"+22D9079: 89 90 00 32 00 00     -  mov [eax+00003200],edx
"RXC2.exe"+22D907F: 8B 4E 18              -  mov ecx,[esi+18]
"RXC2.exe"+22D9082: 85 C9                 -  test ecx,ecx
"RXC2.exe"+22D9084: 79 05                 -  jns RXC2.exe+22D908B
"RXC2.exe"+22D9086: 83 C8 FF              -  or eax,-01
"RXC2.exe"+22D9089: EB 0C                 -  jmp RXC2.exe+22D9097
"RXC2.exe"+22D908B: A1 B4 29 4C 03        -  mov eax,[RXC2.exe+30C29B4]
"RXC2.exe"+22D9090: C1 E1 07              -  shl ecx,07
// ---------- INJECTING HERE ----------
"RXC2.exe"+22D9093: 8B 44 01 3C           -  mov eax,[ecx+eax+3C]
"RXC2.exe"+22D9097: 8D 8E B0 07 00 00     -  lea ecx,[esi+000007B0]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+22D909D: 89 86 C0 07 00 00     -  mov [esi+000007C0],eax
"RXC2.exe"+22D90A3: E8 D8 44 FE FF        -  call RXC2.exe+22BD580
"RXC2.exe"+22D90A8: 8B 46 10              -  mov eax,[esi+10]
"RXC2.exe"+22D90AB: 8B 0D A0 29 4C 03     -  mov ecx,[RXC2.exe+30C29A0]
"RXC2.exe"+22D90B1: 8B 94 81 6C 1A 00 00  -  mov edx,[ecx+eax*4+00001A6C]
"RXC2.exe"+22D90B8: 85 D2                 -  test edx,edx
"RXC2.exe"+22D90BA: 74 23                 -  je RXC2.exe+22D90DF
"RXC2.exe"+22D90BC: 8B 02                 -  mov eax,[edx]
"RXC2.exe"+22D90BE: 8B CA                 -  mov ecx,edx
"RXC2.exe"+22D90C0: 56                    -  push esi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>510</ID>
          <Description>"Inf. Lives"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-22
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfLivesX7_AOB,RXC2.exe,83 2D 14 7A 1F 04 01 79 2A) // should be unique
registersymbol(InfLivesX7_AOB)

InfLivesX7_AOB:
  db 83 2D 14 7A 1F 04 00

[DISABLE]

InfLivesX7_AOB:
  db 83 2D 14 7A 1F 04 01

unregistersymbol(InfLivesX7_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21B5C54

"RXC2.exe"+21B5C30: 03 C1                 -  add eax,ecx
"RXC2.exe"+21B5C32: 50                    -  push eax
"RXC2.exe"+21B5C33: E8 E8 D4 23 00        -  call RXC2.exe+23F3120
"RXC2.exe"+21B5C38: 83 C4 08              -  add esp,08
"RXC2.exe"+21B5C3B: 83 47 54 FF           -  add dword ptr [edi+54],-01
"RXC2.exe"+21B5C3F: 0F 89 17 06 00 00     -  jns RXC2.exe+21B625C
"RXC2.exe"+21B5C45: 6A C0                 -  push -40
"RXC2.exe"+21B5C47: 6A 08                 -  push 08
"RXC2.exe"+21B5C49: 8D 8E 50 08 00 00     -  lea ecx,[esi+00000850]
"RXC2.exe"+21B5C4F: E8 7C 7A 10 00        -  call RXC2.exe+22BD6D0
// ---------- INJECTING HERE ----------
"RXC2.exe"+21B5C54: 83 2D 14 7A 1F 04 01  -  sub dword ptr [RXC2.exe+3DF7A14],01
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21B5C5B: 79 2A                 -  jns RXC2.exe+21B5C87
"RXC2.exe"+21B5C5D: 8B 0D 90 CB 5B 04     -  mov ecx,[RXC2.exe+41BCB90]
"RXC2.exe"+21B5C63: 85 C9                 -  test ecx,ecx
"RXC2.exe"+21B5C65: 74 05                 -  je RXC2.exe+21B5C6C
"RXC2.exe"+21B5C67: 8B 01                 -  mov eax,[ecx]
"RXC2.exe"+21B5C69: FF 50 1C              -  call dword ptr [eax+1C]
"RXC2.exe"+21B5C6C: 8B 0D E8 2F 4C 03     -  mov ecx,[RXC2.exe+30C2FE8]
"RXC2.exe"+21B5C72: 6A 02                 -  push 02
"RXC2.exe"+21B5C74: 6A 40                 -  push 40
"RXC2.exe"+21B5C76: 6A 00                 -  push 00
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>485</ID>
          <Description>"Inf. Ammo"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-22
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfAmmoX7_AOB,RXC2.exe,66 01 41 72 0F B6 42 5F) // should be unique
aobscanmodule(InfAmmoX7_AOB2,RXC2.exe,66 01 41 72 79 0B) // should be unique
aobscanmodule(InfAmmoX7_AOB3,RXC2.exe,66 89 86 96 00 00 00 B8) // should be unique
registersymbol(InfAmmoX7_AOB)
registersymbol(InfAmmoX7_AOB2)
registersymbol(InfAmmoX7_AOB3)

InfAmmoX7_AOB:
  db 90 90 90 90

InfAmmoX7_AOB2:
  db 90 90 90 90

InfAmmoX7_AOB3:
  db 90 90 90 90 90 90 90

[DISABLE]

InfAmmoX7_AOB:
  db 66 01 41 72

InfAmmoX7_AOB2:
  db 66 01 41 72

InfAmmoX7_AOB3:
  db 66 89 86 96 00 00 00

unregistersymbol(InfAmmoX7_AOB)
unregistersymbol(InfAmmoX7_AOB2)
unregistersymbol(InfAmmoX7_AOB3)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2158B96

"RXC2.exe"+2158B77: 75 05                 -  jne RXC2.exe+2158B7E
"RXC2.exe"+2158B79: 32 C0                 -  xor al,al
"RXC2.exe"+2158B7B: C2 08 00              -  ret 0008
"RXC2.exe"+2158B7E: 69 C0 60 0A 00 00     -  imul eax,eax,00000A60
"RXC2.exe"+2158B84: 8D 51 10              -  lea edx,[ecx+10]
"RXC2.exe"+2158B87: 56                    -  push esi
"RXC2.exe"+2158B88: 03 D0                 -  add edx,eax
"RXC2.exe"+2158B8A: 0F B6 42 5F           -  movzx eax,byte ptr [edx+5F]
"RXC2.exe"+2158B8E: 8D 0C 42              -  lea ecx,[edx+eax*2]
"RXC2.exe"+2158B91: 66 8B 44 24 0C        -  mov ax,[esp+0C]
// ---------- INJECTING HERE ----------
"RXC2.exe"+2158B96: 66 01 41 72           -  add [ecx+72],ax
"RXC2.exe"+2158B9A: 0F B6 42 5F           -  movzx eax,byte ptr [edx+5F]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+2158B9E: 0F B7 74 42 72        -  movzx esi,word ptr [edx+eax*2+72]
"RXC2.exe"+2158BA3: 8D 0C 42              -  lea ecx,[edx+eax*2]
"RXC2.exe"+2158BA6: 66 85 F6              -  test si,si
"RXC2.exe"+2158BA9: 79 0C                 -  jns RXC2.exe+2158BB7
"RXC2.exe"+2158BAB: 33 C0                 -  xor eax,eax
"RXC2.exe"+2158BAD: 66 89 41 72           -  mov [ecx+72],ax
"RXC2.exe"+2158BB1: B0 01                 -  mov al,01
"RXC2.exe"+2158BB3: 5E                    -  pop esi
"RXC2.exe"+2158BB4: C2 08 00              -  ret 0008
"RXC2.exe"+2158BB7: 0F B7 42 6E           -  movzx eax,word ptr [edx+6E]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>558</ID>
          <Description>"Inf. Air Dash"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-23
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfAirDashX7_AOB,RXC2.exe,C6 42 46 01 C2 04 00) // should be unique
registersymbol(InfAirDashX7_AOB)

InfAirDashX7_AOB:
  db C6 42 46 00

[DISABLE]

InfAirDashX7_AOB:
  db C6 42 46 01

unregistersymbol(InfAirDashX7_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21B347F

"RXC2.exe"+21B3451: 88 42 47                    -  mov [edx+47],al
"RXC2.exe"+21B3454: 8B 82 D0 07 00 00           -  mov eax,[edx+000007D0]
"RXC2.exe"+21B345A: 89 41 60                    -  mov [ecx+60],eax
"RXC2.exe"+21B345D: 8B 82 D4 07 00 00           -  mov eax,[edx+000007D4]
"RXC2.exe"+21B3463: 89 41 64                    -  mov [ecx+64],eax
"RXC2.exe"+21B3466: 8B 82 D8 07 00 00           -  mov eax,[edx+000007D8]
"RXC2.exe"+21B346C: 89 41 68                    -  mov [ecx+68],eax
"RXC2.exe"+21B346F: 8B 82 DC 07 00 00           -  mov eax,[edx+000007DC]
"RXC2.exe"+21B3475: 89 41 6C                    -  mov [ecx+6C],eax
"RXC2.exe"+21B3478: C7 41 70 00 00 00 00        -  mov [ecx+70],00000000
// ---------- INJECTING HERE ----------
"RXC2.exe"+21B347F: C6 42 46 01                 -  mov byte ptr [edx+46],01
"RXC2.exe"+21B3483: C2 04 00                    -  ret 0004
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21B3486: CC                          -  int 3 
"RXC2.exe"+21B3487: CC                          -  int 3 
"RXC2.exe"+21B3488: CC                          -  int 3 
"RXC2.exe"+21B3489: CC                          -  int 3 
"RXC2.exe"+21B348A: CC                          -  int 3 
"RXC2.exe"+21B348B: CC                          -  int 3 
"RXC2.exe"+21B348C: CC                          -  int 3 
"RXC2.exe"+21B348D: CC                          -  int 3 
"RXC2.exe"+21B348E: CC                          -  int 3 
"RXC2.exe"+21B348F: CC                          -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>513</ID>
          <Description>"Glide Again"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-23
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(GlideAgainX7_AOB,RXC2.exe,C6 46 46 01 66 C7 46 48 00 01) // should be unique
registersymbol(GlideAgainX7_AOB)

GlideAgainX7_AOB:
  db C6 46 46 00 66 C7 46 48 00 00

[DISABLE]

GlideAgainX7_AOB:
  db C6 46 46 01 66 C7 46 48 00 01

unregistersymbol(GlideAgainX7_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21B382D

"RXC2.exe"+21B37FC: 8B 86 D0 07 00 00        -  mov eax,[esi+000007D0]
"RXC2.exe"+21B3802: 89 41 60                 -  mov [ecx+60],eax
"RXC2.exe"+21B3805: 8B 86 D4 07 00 00        -  mov eax,[esi+000007D4]
"RXC2.exe"+21B380B: 89 41 64                 -  mov [ecx+64],eax
"RXC2.exe"+21B380E: 8B 86 D8 07 00 00        -  mov eax,[esi+000007D8]
"RXC2.exe"+21B3814: 89 41 68                 -  mov [ecx+68],eax
"RXC2.exe"+21B3817: 8B 86 DC 07 00 00        -  mov eax,[esi+000007DC]
"RXC2.exe"+21B381D: 89 41 6C                 -  mov [ecx+6C],eax
"RXC2.exe"+21B3820: C7 41 70 00 00 00 00     -  mov [ecx+70],00000000
"RXC2.exe"+21B3827: 8B 86 84 09 00 00        -  mov eax,[esi+00000984]
// ---------- INJECTING HERE ----------
"RXC2.exe"+21B382D: C6 46 46 01              -  mov byte ptr [esi+46],01
"RXC2.exe"+21B3831: 66 C7 46 48 00 01        -  mov word ptr [esi+48],0100
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21B3837: 89 41 74                 -  mov [ecx+74],eax
"RXC2.exe"+21B383A: A1 9C 97 48 03           -  mov eax,[RXC2.exe+308979C]
"RXC2.exe"+21B383F: 80 78 19 01              -  cmp byte ptr [eax+19],01
"RXC2.exe"+21B3843: 75 18                    -  jne RXC2.exe+21B385D
"RXC2.exe"+21B3845: F3 0F 10 86 84 09 00 00  -  movss xmm0,[esi+00000984]
"RXC2.exe"+21B384D: F3 0F 59 05 40 04 15 03  -  mulss xmm0,[RXC2.exe+2D50440]
"RXC2.exe"+21B3855: F3 0F 11 86 84 09 00 00  -  movss [esi+00000984],xmm0
"RXC2.exe"+21B385D: 69 4E 0C D0 05 00 00     -  imul ecx,[esi+0C],000005D0
"RXC2.exe"+21B3864: A1 88 29 4C 03           -  mov eax,[RXC2.exe+30C2988]
"RXC2.exe"+21B3869: 05 40 05 00 00           -  add eax,00000540
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>494</ID>
          <Description>"X Rapid Fire"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-22
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XRapidFireX7_OB,RXC2.exe,7C 1E 8B CE E8 F7 63 FF FF) // should be unique
registersymbol(XRapidFireX7_OB)

XRapidFireX7_OB:
  db EB 1E

[DISABLE]

XRapidFireX7_OB:
  db 7C 1E

unregistersymbol(XRapidFireX7_OB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21ACEA0

"RXC2.exe"+21ACE7C: B8 01 00 00 00        -  mov eax,00000001
"RXC2.exe"+21ACE81: 5B                    -  pop ebx
"RXC2.exe"+21ACE82: C3                    -  ret 
"RXC2.exe"+21ACE83: 23 05 84 B3 21 04     -  and eax,[RXC2.exe+3E1B384]
"RXC2.exe"+21ACE89: 66 85 C0              -  test ax,ax
"RXC2.exe"+21ACE8C: 74 5D                 -  je RXC2.exe+21ACEEB
"RXC2.exe"+21ACE8E: 80 BE 9A 00 00 00 01  -  cmp byte ptr [esi+0000009A],01
"RXC2.exe"+21ACE95: 7D 17                 -  jnl RXC2.exe+21ACEAE
"RXC2.exe"+21ACE97: 8A 46 56              -  mov al,[esi+56]
"RXC2.exe"+21ACE9A: 3A 86 9E 09 00 00     -  cmp al,[esi+0000099E]
// ---------- INJECTING HERE ----------
"RXC2.exe"+21ACEA0: 7C 1E                 -  jl RXC2.exe+21ACEC0
"RXC2.exe"+21ACEA2: 8B CE                 -  mov ecx,esi
"RXC2.exe"+21ACEA4: E8 F7 63 FF FF        -  call RXC2.exe+21A32A0
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21ACEA9: 5E                    -  pop esi
"RXC2.exe"+21ACEAA: 33 C0                 -  xor eax,eax
"RXC2.exe"+21ACEAC: 5B                    -  pop ebx
"RXC2.exe"+21ACEAD: C3                    -  ret 
"RXC2.exe"+21ACEAE: 80 7E 58 01           -  cmp byte ptr [esi+58],01
"RXC2.exe"+21ACEB2: 7C 0C                 -  jl RXC2.exe+21ACEC0
"RXC2.exe"+21ACEB4: 8B CE                 -  mov ecx,esi
"RXC2.exe"+21ACEB6: E8 E5 63 FF FF        -  call RXC2.exe+21A32A0
"RXC2.exe"+21ACEBB: 5E                    -  pop esi
"RXC2.exe"+21ACEBC: 33 C0                 -  xor eax,eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>499</ID>
          <Description>"X Normal Attack Always Charged"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-23
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XNormalAttackAlwaysChargedX7_AOB,RXC2.exe,80 BE 9A 00 00 00 01) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov byte ptr [esi+0000009A],03
code:
  cmp byte ptr [esi+0000009A],01
  jmp return

XNormalAttackAlwaysChargedX7_AOB:
  jmp newmem
  nop
  nop
return:
registersymbol(XNormalAttackAlwaysChargedX7_AOB)

[DISABLE]

XNormalAttackAlwaysChargedX7_AOB:
  db 80 BE 9A 00 00 00 01

unregistersymbol(XNormalAttackAlwaysChargedX7_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21ACE8E

"RXC2.exe"+21ACE74: FF 50 24              -  call dword ptr [eax+24]
"RXC2.exe"+21ACE77: 85 C0                 -  test eax,eax
"RXC2.exe"+21ACE79: 74 B8                 -  je RXC2.exe+21ACE33
"RXC2.exe"+21ACE7B: 5E                    -  pop esi
"RXC2.exe"+21ACE7C: B8 01 00 00 00        -  mov eax,00000001
"RXC2.exe"+21ACE81: 5B                    -  pop ebx
"RXC2.exe"+21ACE82: C3                    -  ret 
"RXC2.exe"+21ACE83: 23 05 84 B3 21 04     -  and eax,[RXC2.exe+3E1B384]
"RXC2.exe"+21ACE89: 66 85 C0              -  test ax,ax
"RXC2.exe"+21ACE8C: 74 5D                 -  je RXC2.exe+21ACEEB
// ---------- INJECTING HERE ----------
"RXC2.exe"+21ACE8E: 80 BE 9A 00 00 00 01  -  cmp byte ptr [esi+0000009A],01
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21ACE95: 7D 17                 -  jnl RXC2.exe+21ACEAE
"RXC2.exe"+21ACE97: 8A 46 56              -  mov al,[esi+56]
"RXC2.exe"+21ACE9A: 3A 86 9E 09 00 00     -  cmp al,[esi+0000099E]
"RXC2.exe"+21ACEA0: EB 1E                 -  jmp RXC2.exe+21ACEC0
"RXC2.exe"+21ACEA2: 8B CE                 -  mov ecx,esi
"RXC2.exe"+21ACEA4: E8 F7 63 FF FF        -  call RXC2.exe+21A32A0
"RXC2.exe"+21ACEA9: 5E                    -  pop esi
"RXC2.exe"+21ACEAA: 33 C0                 -  xor eax,eax
"RXC2.exe"+21ACEAC: 5B                    -  pop ebx
"RXC2.exe"+21ACEAD: C3                    -  ret 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>504</ID>
          <Description>"X Normal Attack Charge Rapid Fire"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-23
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XNormalChargeRapidFireX7_AOB,RXC2.exe,7C 0C 8B CE E8 E5 63 FF FF) // should be unique
registersymbol(XNormalChargeRapidFireX7_AOB)

XNormalChargeRapidFireX7_AOB:
  db EB 0C

[DISABLE]

XNormalChargeRapidFireX7_AOB:
  db 7C 0C

unregistersymbol(XNormalChargeRapidFireX7_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21ACEB2

"RXC2.exe"+21ACE97: 8A 46 56              -  mov al,[esi+56]
"RXC2.exe"+21ACE9A: 3A 86 9E 09 00 00     -  cmp al,[esi+0000099E]
"RXC2.exe"+21ACEA0: EB 1E                 -  jmp RXC2.exe+21ACEC0
"RXC2.exe"+21ACEA2: 8B CE                 -  mov ecx,esi
"RXC2.exe"+21ACEA4: E8 F7 63 FF FF        -  call RXC2.exe+21A32A0
"RXC2.exe"+21ACEA9: 5E                    -  pop esi
"RXC2.exe"+21ACEAA: 33 C0                 -  xor eax,eax
"RXC2.exe"+21ACEAC: 5B                    -  pop ebx
"RXC2.exe"+21ACEAD: C3                    -  ret 
"RXC2.exe"+21ACEAE: 80 7E 58 01           -  cmp byte ptr [esi+58],01
// ---------- INJECTING HERE ----------
"RXC2.exe"+21ACEB2: 7C 0C                 -  jl RXC2.exe+21ACEC0
"RXC2.exe"+21ACEB4: 8B CE                 -  mov ecx,esi
"RXC2.exe"+21ACEB6: E8 E5 63 FF FF        -  call RXC2.exe+21A32A0
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21ACEBB: 5E                    -  pop esi
"RXC2.exe"+21ACEBC: 33 C0                 -  xor eax,eax
"RXC2.exe"+21ACEBE: 5B                    -  pop ebx
"RXC2.exe"+21ACEBF: C3                    -  ret 
"RXC2.exe"+21ACEC0: 8A 5E 5F              -  mov bl,[esi+5F]
"RXC2.exe"+21ACEC3: 8B 4E 08              -  mov ecx,[esi+08]
"RXC2.exe"+21ACEC6: C6 46 5F 00           -  mov byte ptr [esi+5F],00
"RXC2.exe"+21ACECA: A1 98 29 4C 03        -  mov eax,[RXC2.exe+30C2998]
"RXC2.exe"+21ACECF: 56                    -  push esi
"RXC2.exe"+21ACED0: 8B 8C 88 30 1F 00 00  -  mov ecx,[eax+ecx*4+00001F30]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>537</ID>
          <Description>"X Special Attack Rapid Fire"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-23
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XSpecialAttackRapidFireX7_AOB,RXC2.exe,7C 24 8B CE E8 B6 65 FF FF) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  jmp RXC2.exe+21ACE57
  mov ecx,esi
  call RXC2.exe+21A33F0
  jmp return

XSpecialAttackRapidFireX7_AOB:
  jmp newmem
  nop
  nop
  nop
  nop
return:
registersymbol(XSpecialAttackRapidFireX7_AOB)

[DISABLE]

XSpecialAttackRapidFireX7_AOB:
  db 7C 24 8B CE E8 B6 65 FF FF

unregistersymbol(XSpecialAttackRapidFireX7_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21ACE31

"RXC2.exe"+21ACE08: 8D 0C 80                 -  lea ecx,[eax+eax*4]
"RXC2.exe"+21ACE0B: C1 E1 05                 -  shl ecx,05
"RXC2.exe"+21ACE0E: 0F B7 81 B6 B3 21 04     -  movzx eax,word ptr [ecx+RXC2.exe+3E1B3B6]
"RXC2.exe"+21ACE15: 66 85 05 86 B3 21 04     -  test [RXC2.exe+3E1B386],ax
"RXC2.exe"+21ACE1C: 74 65                    -  je RXC2.exe+21ACE83
"RXC2.exe"+21ACE1E: 80 BE 9B 00 00 00 03     -  cmp byte ptr [esi+0000009B],03
"RXC2.exe"+21ACE25: 7D 18                    -  jnl RXC2.exe+21ACE3F
"RXC2.exe"+21ACE27: 80 7E 5F 00              -  cmp byte ptr [esi+5F],00
"RXC2.exe"+21ACE2B: 0F 95 C0                 -  setne al
"RXC2.exe"+21ACE2E: 38 46 57                 -  cmp [esi+57],al
// ---------- INJECTING HERE ----------
"RXC2.exe"+21ACE31: 7C 24                    -  jl RXC2.exe+21ACE57
"RXC2.exe"+21ACE33: 8B CE                    -  mov ecx,esi
"RXC2.exe"+21ACE35: E8 B6 65 FF FF           -  call RXC2.exe+21A33F0
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21ACE3A: 5E                       -  pop esi
"RXC2.exe"+21ACE3B: 33 C0                    -  xor eax,eax
"RXC2.exe"+21ACE3D: 5B                       -  pop ebx
"RXC2.exe"+21ACE3E: C3                       -  ret 
"RXC2.exe"+21ACE3F: 80 7E 5F 00              -  cmp byte ptr [esi+5F],00
"RXC2.exe"+21ACE43: 0F 95 C0                 -  setne al
"RXC2.exe"+21ACE46: 38 46 59                 -  cmp [esi+59],al
"RXC2.exe"+21ACE49: 7C 0C                    -  jl RXC2.exe+21ACE57
"RXC2.exe"+21ACE4B: 8B CE                    -  mov ecx,esi
"RXC2.exe"+21ACE4D: E8 9E 65 FF FF           -  call RXC2.exe+21A33F0
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>506</ID>
          <Description>"X Special Attack Always Charged"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-23
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XSpecialAttackAlwaysChargedX7_AOB,RXC2.exe,80 BE 9B 00 00 00 03 7D) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov byte ptr [esi+0000009B],03
code:
  cmp byte ptr [esi+0000009B],03
  jmp return

XSpecialAttackAlwaysChargedX7_AOB:
  jmp newmem
  nop
  nop
return:
registersymbol(XSpecialAttackAlwaysChargedX7_AOB)

[DISABLE]

XSpecialAttackAlwaysChargedX7_AOB:
  db 80 BE 9B 00 00 00 03

unregistersymbol(XSpecialAttackAlwaysChargedX7_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21ACE1E

"RXC2.exe"+21ACDFF: CC                       -  int 3 
"RXC2.exe"+21ACE00: 53                       -  push ebx
"RXC2.exe"+21ACE01: 56                       -  push esi
"RXC2.exe"+21ACE02: 8B F1                    -  mov esi,ecx
"RXC2.exe"+21ACE04: 0F B6 46 37              -  movzx eax,byte ptr [esi+37]
"RXC2.exe"+21ACE08: 8D 0C 80                 -  lea ecx,[eax+eax*4]
"RXC2.exe"+21ACE0B: C1 E1 05                 -  shl ecx,05
"RXC2.exe"+21ACE0E: 0F B7 81 B6 B3 21 04     -  movzx eax,word ptr [ecx+RXC2.exe+3E1B3B6]
"RXC2.exe"+21ACE15: 66 85 05 86 B3 21 04     -  test [RXC2.exe+3E1B386],ax
"RXC2.exe"+21ACE1C: 74 65                    -  je RXC2.exe+21ACE83
// ---------- INJECTING HERE ----------
"RXC2.exe"+21ACE1E: 80 BE 9B 00 00 00 03     -  cmp byte ptr [esi+0000009B],03
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21ACE25: 7D 18                    -  jnl RXC2.exe+21ACE3F
"RXC2.exe"+21ACE27: 80 7E 5F 00              -  cmp byte ptr [esi+5F],00
"RXC2.exe"+21ACE2B: 0F 95 C0                 -  setne al
"RXC2.exe"+21ACE2E: 38 46 57                 -  cmp [esi+57],al
"RXC2.exe"+21ACE31: 7C 24                    -  jl RXC2.exe+21ACE57
"RXC2.exe"+21ACE33: 8B CE                    -  mov ecx,esi
"RXC2.exe"+21ACE35: E8 B6 65 FF FF           -  call RXC2.exe+21A33F0
"RXC2.exe"+21ACE3A: 5E                       -  pop esi
"RXC2.exe"+21ACE3B: 33 C0                    -  xor eax,eax
"RXC2.exe"+21ACE3D: 5B                       -  pop ebx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>443</ID>
          <Description>"Inf. Double Jump"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-22
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfDoubleJumpX7_AOB,RXC2.exe,C6 40 3B 01 C6 40 46 01) // should be unique
registersymbol(InfDoubleJumpX7_AOB)

InfDoubleJumpX7_AOB:
  db C6 40 3B 00 C6 40 46 00

[DISABLE]

InfDoubleJumpX7_AOB:
  db C6 40 3B 01 C6 40 46 01

unregistersymbol(InfDoubleJumpX7_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21B38CB

"RXC2.exe"+21B38B8: CC                       -  int 3 
"RXC2.exe"+21B38B9: CC                       -  int 3 
"RXC2.exe"+21B38BA: CC                       -  int 3 
"RXC2.exe"+21B38BB: CC                       -  int 3 
"RXC2.exe"+21B38BC: CC                       -  int 3 
"RXC2.exe"+21B38BD: CC                       -  int 3 
"RXC2.exe"+21B38BE: CC                       -  int 3 
"RXC2.exe"+21B38BF: CC                       -  int 3 
"RXC2.exe"+21B38C0: 8B 44 24 04              -  mov eax,[esp+04]
"RXC2.exe"+21B38C4: C7 41 4C 00 00 00 00     -  mov [ecx+4C],00000000
// ---------- INJECTING HERE ----------
"RXC2.exe"+21B38CB: C6 40 3B 01              -  mov byte ptr [eax+3B],01
"RXC2.exe"+21B38CF: C6 40 46 01              -  mov byte ptr [eax+46],01
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21B38D3: C2 04 00                 -  ret 0004
"RXC2.exe"+21B38D6: CC                       -  int 3 
"RXC2.exe"+21B38D7: CC                       -  int 3 
"RXC2.exe"+21B38D8: CC                       -  int 3 
"RXC2.exe"+21B38D9: CC                       -  int 3 
"RXC2.exe"+21B38DA: CC                       -  int 3 
"RXC2.exe"+21B38DB: CC                       -  int 3 
"RXC2.exe"+21B38DC: CC                       -  int 3 
"RXC2.exe"+21B38DD: CC                       -  int 3 
"RXC2.exe"+21B38DE: CC                       -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>559</ID>
          <Description>"Axl Rapid Fire"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-22
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AxlRapidFireX7_AOB,RXC2.exe,7D 98 A1 98 29 4C 03) // should be unique
registersymbol(AxlRapidFireX7_AOB)

AxlRapidFireX7_AOB:
  db 90 90

[DISABLE]

AxlRapidFireX7_AOB:
  db 7D 98

unregistersymbol(AxlRapidFireX7_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21A54FA

"RXC2.exe"+21A54DA: B8 01 00 00 00           -  mov eax,00000001
"RXC2.exe"+21A54DF: C6 46 5C 01              -  mov byte ptr [esi+5C],01
"RXC2.exe"+21A54E3: 5E                       -  pop esi
"RXC2.exe"+21A54E4: C3                       -  ret 
"RXC2.exe"+21A54E5: 23 05 84 B3 21 04        -  and eax,[RXC2.exe+3E1B384]
"RXC2.exe"+21A54EB: 66 85 C0                 -  test ax,ax
"RXC2.exe"+21A54EE: 74 A4                    -  je RXC2.exe+21A5494
"RXC2.exe"+21A54F0: 8B CE                    -  mov ecx,esi
"RXC2.exe"+21A54F2: E8 39 00 00 00           -  call RXC2.exe+21A5530
"RXC2.exe"+21A54F7: 38 46 56                 -  cmp [esi+56],al
// ---------- INJECTING HERE ----------
"RXC2.exe"+21A54FA: 7D 98                    -  jnl RXC2.exe+21A5494
"RXC2.exe"+21A54FC: A1 98 29 4C 03           -  mov eax,[RXC2.exe+30C2998]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21A5501: 8B 4E 08                 -  mov ecx,[esi+08]
"RXC2.exe"+21A5504: 56                       -  push esi
"RXC2.exe"+21A5505: 8B 8C 88 30 1F 00 00     -  mov ecx,[eax+ecx*4+00001F30]
"RXC2.exe"+21A550C: 8B 01                    -  mov eax,[ecx]
"RXC2.exe"+21A550E: FF 50 3C                 -  call dword ptr [eax+3C]
"RXC2.exe"+21A5511: 85 C0                    -  test eax,eax
"RXC2.exe"+21A5513: 0F 84 7B FF FF FF        -  je RXC2.exe+21A5494
"RXC2.exe"+21A5519: 66 C7 46 5B 00 00        -  mov word ptr [esi+5B],0000
"RXC2.exe"+21A551F: B8 01 00 00 00           -  mov eax,00000001
"RXC2.exe"+21A5524: 5E                       -  pop esi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>535</ID>
          <Description>"Axl Special Attack Rapid Fire"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-23
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AxlSpecialAttackRapidFireX7_AOB,RXC2.exe,7D E4 8B CE E8 89 EF FF FF) // should be unique
registersymbol(AxlSpecialAttackRapidFireX7_AOB)

AxlSpecialAttackRapidFireX7_AOB:
  db 90 90

[DISABLE]

AxlSpecialAttackRapidFireX7_AOB:
  db 7D E4

unregistersymbol(AxlSpecialAttackRapidFireX7_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21A54AE

"RXC2.exe"+21A548F: E8 5C DF FF FF        -  call RXC2.exe+21A33F0
"RXC2.exe"+21A5494: 33 C0                 -  xor eax,eax
"RXC2.exe"+21A5496: 5E                    -  pop esi
"RXC2.exe"+21A5497: C3                    -  ret 
"RXC2.exe"+21A5498: 0F B7 80 B4 B3 21 04  -  movzx eax,word ptr [eax+RXC2.exe+3E1B3B4]
"RXC2.exe"+21A549F: 66 85 C1              -  test cx,ax
"RXC2.exe"+21A54A2: 74 41                 -  je RXC2.exe+21A54E5
"RXC2.exe"+21A54A4: 80 7E 5F 00           -  cmp byte ptr [esi+5F],00
"RXC2.exe"+21A54A8: 74 EA                 -  je RXC2.exe+21A5494
"RXC2.exe"+21A54AA: 80 7E 57 01           -  cmp byte ptr [esi+57],01
// ---------- INJECTING HERE ----------
"RXC2.exe"+21A54AE: 7D E4                 -  jnl RXC2.exe+21A5494
"RXC2.exe"+21A54B0: 8B CE                 -  mov ecx,esi
"RXC2.exe"+21A54B2: E8 89 EF FF FF        -  call RXC2.exe+21A4440
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21A54B7: 3C 01                 -  cmp al,01
"RXC2.exe"+21A54B9: 75 D9                 -  jne RXC2.exe+21A5494
"RXC2.exe"+21A54BB: A1 98 29 4C 03        -  mov eax,[RXC2.exe+30C2998]
"RXC2.exe"+21A54C0: 8B 4E 08              -  mov ecx,[esi+08]
"RXC2.exe"+21A54C3: 56                    -  push esi
"RXC2.exe"+21A54C4: 8B 8C 88 30 1F 00 00  -  mov ecx,[eax+ecx*4+00001F30]
"RXC2.exe"+21A54CB: 8B 01                 -  mov eax,[ecx]
"RXC2.exe"+21A54CD: FF 50 3C              -  call dword ptr [eax+3C]
"RXC2.exe"+21A54D0: 85 C0                 -  test eax,eax
"RXC2.exe"+21A54D2: 74 C0                 -  je RXC2.exe+21A5494
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>560</ID>
          <Description>"Axl Copy Shot No Charge"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-22
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AxlCopyShotNoChargeX7_AOB,RXC2.exe,75 26 A1 98 29 4C 03) // should be unique
registersymbol(AxlCopyShotNoChargeX7_AOB)

AxlCopyShotNoChargeX7_AOB:
  db 90 90

[DISABLE]

AxlCopyShotNoChargeX7_AOB:
  db 75 26

unregistersymbol(AxlCopyShotNoChargeX7_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21A5465

"RXC2.exe"+21A543E: 8D 04 80                       -  lea eax,[eax+eax*4]
"RXC2.exe"+21A5441: C1 E0 05                       -  shl eax,05
"RXC2.exe"+21A5444: 66 85 88 B6 B3 21 04           -  test [eax+RXC2.exe+3E1B3B6],cx
"RXC2.exe"+21A544B: 74 4B                          -  je RXC2.exe+21A5498
"RXC2.exe"+21A544D: 80 7E 5F 00                    -  cmp byte ptr [esi+5F],00
"RXC2.exe"+21A5451: 75 41                          -  jne RXC2.exe+21A5494
"RXC2.exe"+21A5453: 8A 86 9F 09 00 00              -  mov al,[esi+0000099F]
"RXC2.exe"+21A5459: 38 46 57                       -  cmp [esi+57],al
"RXC2.exe"+21A545C: 7D 2F                          -  jnl RXC2.exe+21A548D
"RXC2.exe"+21A545E: 80 BE 9B 00 00 00 03           -  cmp byte ptr [esi+0000009B],03
// ---------- INJECTING HERE ----------
"RXC2.exe"+21A5465: 75 26                          -  jne RXC2.exe+21A548D
"RXC2.exe"+21A5467: A1 98 29 4C 03                 -  mov eax,[RXC2.exe+30C2998]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21A546C: 8B 4E 08                       -  mov ecx,[esi+08]
"RXC2.exe"+21A546F: 56                             -  push esi
"RXC2.exe"+21A5470: 8B 8C 88 30 1F 00 00           -  mov ecx,[eax+ecx*4+00001F30]
"RXC2.exe"+21A5477: 8B 01                          -  mov eax,[ecx]
"RXC2.exe"+21A5479: FF 50 40                       -  call dword ptr [eax+40]
"RXC2.exe"+21A547C: 85 C0                          -  test eax,eax
"RXC2.exe"+21A547E: 74 0D                          -  je RXC2.exe+21A548D
"RXC2.exe"+21A5480: 66 C7 46 5B 01 00              -  mov word ptr [esi+5B],0001
"RXC2.exe"+21A5486: B8 01 00 00 00                 -  mov eax,00000001
"RXC2.exe"+21A548B: 5E                             -  pop esi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>487</ID>
          <Description>"Inf. Axl Hover Time"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-22
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfAxlHoverTimeX7_AOB,RXC2.exe,80 47 54 FF 74 05) // should be unique
registersymbol(InfAxlHoverTimeX7_AOB)

InfAxlHoverTimeX7_AOB:
  db 80 47 54 00

[DISABLE]

InfAxlHoverTimeX7_AOB:
  db 80 47 54 FF

unregistersymbol(InfAxlHoverTimeX7_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+21B53E0

"RXC2.exe"+21B53B7: 51                    -  push ecx
"RXC2.exe"+21B53B8: 89 46 40              -  mov [esi+40],eax
"RXC2.exe"+21B53BB: 8B 0D 88 29 4C 03     -  mov ecx,[RXC2.exe+30C2988]
"RXC2.exe"+21B53C1: C7 04 24 7C CD 05 3C  -  mov [esp],3C05CD7C
"RXC2.exe"+21B53C8: E8 D3 A5 FE FF        -  call RXC2.exe+219F9A0
"RXC2.exe"+21B53CD: 8B CE                 -  mov ecx,esi
"RXC2.exe"+21B53CF: C6 46 46 01           -  mov byte ptr [esi+46],01
"RXC2.exe"+21B53D3: E8 88 09 FF FF        -  call RXC2.exe+21A5D60
"RXC2.exe"+21B53D8: 85 C0                 -  test eax,eax
"RXC2.exe"+21B53DA: 0F 85 1E 01 00 00     -  jne RXC2.exe+21B54FE
// ---------- INJECTING HERE ----------
"RXC2.exe"+21B53E0: 80 47 54 FF           -  add byte ptr [edi+54],-01
"RXC2.exe"+21B53E4: 74 05                 -  je RXC2.exe+21B53EB
// ---------- DONE INJECTING  ----------
"RXC2.exe"+21B53E6: 38 47 55              -  cmp [edi+55],al
"RXC2.exe"+21B53E9: 75 40                 -  jne RXC2.exe+21B542B
"RXC2.exe"+21B53EB: FE 47 4C              -  inc byte ptr [edi+4C]
"RXC2.exe"+21B53EE: 80 7F 55 00           -  cmp byte ptr [edi+55],00
"RXC2.exe"+21B53F2: C6 47 54 0E           -  mov byte ptr [edi+54],0E
"RXC2.exe"+21B53F6: 75 2E                 -  jne RXC2.exe+21B5426
"RXC2.exe"+21B53F8: 83 BE 34 09 00 00 02  -  cmp dword ptr [esi+00000934],02
"RXC2.exe"+21B53FF: 8B 0D 88 29 4C 03     -  mov ecx,[RXC2.exe+30C2988]
"RXC2.exe"+21B5405: 75 07                 -  jne RXC2.exe+21B540E
"RXC2.exe"+21B5407: 68 8F 00 00 00        -  push 0000008F
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>489</ID>
          <Description>"No Death"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-22
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoDeathX7_AOB,RXC2.exe,FE 80 E0 26 59 04) // should be unique
registersymbol(NoDeathX7_AOB)

NoDeathX7_AOB:
  db 90 90 90 90 90 90

[DISABLE]

NoDeathX7_AOB:
  db FE 80 E0 26 59 04

unregistersymbol(NoDeathX7_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2183954

"RXC2.exe"+2183947: CC                             -  int 3 
"RXC2.exe"+2183948: CC                             -  int 3 
"RXC2.exe"+2183949: CC                             -  int 3 
"RXC2.exe"+218394A: CC                             -  int 3 
"RXC2.exe"+218394B: CC                             -  int 3 
"RXC2.exe"+218394C: CC                             -  int 3 
"RXC2.exe"+218394D: CC                             -  int 3 
"RXC2.exe"+218394E: CC                             -  int 3 
"RXC2.exe"+218394F: CC                             -  int 3 
"RXC2.exe"+2183950: 8B 44 24 04                    -  mov eax,[esp+04]
// ---------- INJECTING HERE ----------
"RXC2.exe"+2183954: FE 80 E0 26 59 04              -  inc byte ptr [eax+RXC2.exe+41926E0]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+218395A: C3                             -  ret 
"RXC2.exe"+218395B: CC                             -  int 3 
"RXC2.exe"+218395C: CC                             -  int 3 
"RXC2.exe"+218395D: CC                             -  int 3 
"RXC2.exe"+218395E: CC                             -  int 3 
"RXC2.exe"+218395F: CC                             -  int 3 
"RXC2.exe"+2183960: 80 3D EA 26 59 04 00           -  cmp byte ptr [RXC2.exe+41926EA],00
"RXC2.exe"+2183967: 0F 84 8B 00 00 00              -  je RXC2.exe+21839F8
"RXC2.exe"+218396D: 8B 15 9C 97 48 03              -  mov edx,[RXC2.exe+308979C]
"RXC2.exe"+2183973: 8B 0D 98 29 4C 03              -  mov ecx,[RXC2.exe+30C2998]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>469</ID>
          <Description>"Freeze Stage Time"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-22
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(FreezeStageTimeX7_AOB,RXC2.exe,03 CA 89 48 34) // should be unique
registersymbol(FreezeStageTimeX7_AOB)

FreezeStageTimeX7_AOB:
  db 90 90

[DISABLE]

FreezeStageTimeX7_AOB:
  db 03 CA

unregistersymbol(FreezeStageTimeX7_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+217D669

"RXC2.exe"+217D63D: 03 CA                 -  add ecx,edx
"RXC2.exe"+217D63F: 89 48 30              -  mov [eax+30],ecx
"RXC2.exe"+217D642: A1 9C 97 48 03        -  mov eax,[RXC2.exe+308979C]
"RXC2.exe"+217D647: 81 78 30 3F 7E 05 00  -  cmp [eax+30],00057E3F
"RXC2.exe"+217D64E: 76 0C                 -  jna RXC2.exe+217D65C
"RXC2.exe"+217D650: A1 9C 97 48 03        -  mov eax,[RXC2.exe+308979C]
"RXC2.exe"+217D655: C7 40 30 3F 7E 05 00  -  mov [eax+30],00057E3F
"RXC2.exe"+217D65C: A1 9C 97 48 03        -  mov eax,[RXC2.exe+308979C]
"RXC2.exe"+217D661: 8B 48 34              -  mov ecx,[eax+34]
"RXC2.exe"+217D664: A1 9C 97 48 03        -  mov eax,[RXC2.exe+308979C]
// ---------- INJECTING HERE ----------
"RXC2.exe"+217D669: 03 CA                 -  add ecx,edx
"RXC2.exe"+217D66B: 89 48 34              -  mov [eax+34],ecx
// ---------- DONE INJECTING  ----------
"RXC2.exe"+217D66E: A1 9C 97 48 03        -  mov eax,[RXC2.exe+308979C]
"RXC2.exe"+217D673: 81 78 34 3F 7E 05 00  -  cmp [eax+34],00057E3F
"RXC2.exe"+217D67A: 76 0C                 -  jna RXC2.exe+217D688
"RXC2.exe"+217D67C: A1 9C 97 48 03        -  mov eax,[RXC2.exe+308979C]
"RXC2.exe"+217D681: C7 40 34 3F 7E 05 00  -  mov [eax+34],00057E3F
"RXC2.exe"+217D688: C3                    -  ret 
"RXC2.exe"+217D689: CC                    -  int 3 
"RXC2.exe"+217D68A: CC                    -  int 3 
"RXC2.exe"+217D68B: CC                    -  int 3 
"RXC2.exe"+217D68C: CC                    -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>561</ID>
          <Description>"Max Hunted"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-22
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MaxHuntedX7_AOB,RXC2.exe,66 FF 04 45 CA 26 59 04) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov word ptr [eax*2+"RXC2.exe"+41926CA],#999
  jmp return

MaxHuntedX7_AOB:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(MaxHuntedX7_AOB)

[DISABLE]

MaxHuntedX7_AOB:
  db 66 FF 04 45 CA 26 59 04

unregistersymbol(MaxHuntedX7_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+218368A

"RXC2.exe"+218366F: CC                             -  int 3 
"RXC2.exe"+2183670: 66 8B 44 24 04                 -  mov ax,[esp+04]
"RXC2.exe"+2183675: 66 A3 E4 26 59 04              -  mov [RXC2.exe+41926E4],ax
"RXC2.exe"+218367B: C3                             -  ret 
"RXC2.exe"+218367C: CC                             -  int 3 
"RXC2.exe"+218367D: CC                             -  int 3 
"RXC2.exe"+218367E: CC                             -  int 3 
"RXC2.exe"+218367F: CC                             -  int 3 
"RXC2.exe"+2183680: 0F B6 44 24 04                 -  movzx eax,byte ptr [esp+04]
"RXC2.exe"+2183685: B9 E7 03 00 00                 -  mov ecx,000003E7
// ---------- INJECTING HERE ----------
"RXC2.exe"+218368A: 66 FF 04 45 CA 26 59 04        -  inc word ptr [eax*2+RXC2.exe+41926CA]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+2183692: 66 39 0C 45 CA 26 59 04        -  cmp [eax*2+RXC2.exe+41926CA],cx
"RXC2.exe"+218369A: 76 08                          -  jna RXC2.exe+21836A4
"RXC2.exe"+218369C: 66 89 0C 45 CA 26 59 04        -  mov [eax*2+RXC2.exe+41926CA],cx
"RXC2.exe"+21836A4: C3                             -  ret 
"RXC2.exe"+21836A5: CC                             -  int 3 
"RXC2.exe"+21836A6: CC                             -  int 3 
"RXC2.exe"+21836A7: CC                             -  int 3 
"RXC2.exe"+21836A8: CC                             -  int 3 
"RXC2.exe"+21836A9: CC                             -  int 3 
"RXC2.exe"+21836AA: CC                             -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>544</ID>
          <Description>"No Damage"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-23
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoDamageX7_AOB,RXC2.exe,89 0D D0 26 59 04 A3 D4 26 59 04) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [RXC2.exe+41926D0],0
  mov [RXC2.exe+41926D4],0
  jmp return

NoDamageX7_AOB:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(NoDamageX7_AOB)

[DISABLE]

NoDamageX7_AOB:
  db 89 0D D0 26 59 04 A3 D4 26 59 04

unregistersymbol(NoDamageX7_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2183937

"RXC2.exe"+2183918: 2B C2                          -  sub eax,edx
"RXC2.exe"+218391A: BA E7 03 00 00                 -  mov edx,000003E7
"RXC2.exe"+218391F: 89 3D D8 26 59 04              -  mov [RXC2.exe+41926D8],edi
"RXC2.exe"+2183925: 3B CA                          -  cmp ecx,edx
"RXC2.exe"+2183927: 89 35 DC 26 59 04              -  mov [RXC2.exe+41926DC],esi
"RXC2.exe"+218392D: 5F                             -  pop edi
"RXC2.exe"+218392E: 0F 4F CA                       -  cmovg ecx,edx
"RXC2.exe"+2183931: 3B C2                          -  cmp eax,edx
"RXC2.exe"+2183933: 5D                             -  pop ebp
"RXC2.exe"+2183934: 0F 4F C2                       -  cmovg eax,edx
// ---------- INJECTING HERE ----------
"RXC2.exe"+2183937: 89 0D D0 26 59 04              -  mov [RXC2.exe+41926D0],ecx
// ---------- DONE INJECTING  ----------
"RXC2.exe"+218393D: A3 D4 26 59 04                 -  mov [RXC2.exe+41926D4],eax
"RXC2.exe"+2183942: 5B                             -  pop ebx
"RXC2.exe"+2183943: 5E                             -  pop esi
"RXC2.exe"+2183944: C3                             -  ret 
"RXC2.exe"+2183945: CC                             -  int 3 
"RXC2.exe"+2183946: CC                             -  int 3 
"RXC2.exe"+2183947: CC                             -  int 3 
"RXC2.exe"+2183948: CC                             -  int 3 
"RXC2.exe"+2183949: CC                             -  int 3 
"RXC2.exe"+218394A: CC                             -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>562</ID>
          <Description>"Always Rescued Reploids"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-22
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AlwaysRescuedReploidX7_AOB,RXC2.exe,C6 04 C8 02 8B CE) // should be unique
registersymbol(AlwaysRescuedReploidX7_AOB)

AlwaysRescuedReploidX7_AOB:
  db C6 04 C8 01

[DISABLE]

AlwaysRescuedReploidX7_AOB:
  db C6 04 C8 02

unregistersymbol(AlwaysRescuedReploidX7_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+22581BF

"RXC2.exe"+225818D: 8B 86 18 02 00 00              -  mov eax,[esi+00000218]
"RXC2.exe"+2258193: 83 F8 FF                       -  cmp eax,-01
"RXC2.exe"+2258196: 74 16                          -  je RXC2.exe+22581AE
"RXC2.exe"+2258198: 8B 0D C0 29 4C 03              -  mov ecx,[RXC2.exe+30C29C0]
"RXC2.exe"+225819E: 50                             -  push eax
"RXC2.exe"+225819F: E8 4C C2 F0 FF                 -  call RXC2.exe+21643F0
"RXC2.exe"+22581A4: C7 86 18 02 00 00 FF FF FF FF  -  mov [esi+00000218],FFFFFFFF
"RXC2.exe"+22581AE: A1 B8 29 4C 03                 -  mov eax,[RXC2.exe+30C29B8]
"RXC2.exe"+22581B3: 8B 8E B8 01 00 00              -  mov ecx,[esi+000001B8]
"RXC2.exe"+22581B9: 8B 80 10 B4 00 00              -  mov eax,[eax+0000B410]
// ---------- INJECTING HERE ----------
"RXC2.exe"+22581BF: C6 04 C8 02                    -  mov byte ptr [eax+ecx*8],02
"RXC2.exe"+22581C3: 8B CE                          -  mov ecx,esi
// ---------- DONE INJECTING  ----------
"RXC2.exe"+22581C5: E8 A6 DA F3 FF                 -  call RXC2.exe+2195C70
"RXC2.exe"+22581CA: 56                             -  push esi
"RXC2.exe"+22581CB: E8 90 00 00 00                 -  call RXC2.exe+2258260
"RXC2.exe"+22581D0: 83 C4 04                       -  add esp,04
"RXC2.exe"+22581D3: 5E                             -  pop esi
"RXC2.exe"+22581D4: 83 C4 10                       -  add esp,10
"RXC2.exe"+22581D7: C3                             -  ret 
"RXC2.exe"+22581D8: 0F B6 86 AC 01 00 00           -  movzx eax,byte ptr [esi+000001AC]
"RXC2.exe"+22581DF: 83 E8 00                       -  sub eax,00
"RXC2.exe"+22581E2: 74 3B                          -  je RXC2.exe+225821F
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>563</ID>
          <Description>"Freeze Ride Boarski Explosion Time"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-23
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(FreezeExplosionTimeCCStageX7_AOB,RXC2.exe,48 89 46 50 5E) // should be unique
registersymbol(FreezeExplosionTimeCCStageX7_AOB)

FreezeExplosionTimeCCStageX7_AOB:
  db 90

[DISABLE]

FreezeExplosionTimeCCStageX7_AOB:
  db 48

unregistersymbol(FreezeExplosionTimeCCStageX7_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2338000

"RXC2.exe"+2337FDE: 85 D2                 -  test edx,edx
"RXC2.exe"+2337FE0: 75 17                 -  jne RXC2.exe+2337FF9
"RXC2.exe"+2337FE2: 81 F9 43 07 00 00     -  cmp ecx,00000743
"RXC2.exe"+2337FE8: 7F 0F                 -  jg RXC2.exe+2337FF9
"RXC2.exe"+2337FEA: 68 00 00 00 06        -  push 06000000
"RXC2.exe"+2337FEF: B9 70 91 21 04        -  mov ecx,RXC2.exe+3E19170
"RXC2.exe"+2337FF4: E8 97 0A E1 FF        -  call RXC2.exe+2148A90
"RXC2.exe"+2337FF9: 8B 46 50              -  mov eax,[esi+50]
"RXC2.exe"+2337FFC: 85 C0                 -  test eax,eax
"RXC2.exe"+2337FFE: 74 04                 -  je RXC2.exe+2338004
// ---------- INJECTING HERE ----------
"RXC2.exe"+2338000: 48                    -  dec eax
"RXC2.exe"+2338001: 89 46 50              -  mov [esi+50],eax
"RXC2.exe"+2338004: 5E                    -  pop esi
// ---------- DONE INJECTING  ----------
"RXC2.exe"+2338005: C3                    -  ret 
"RXC2.exe"+2338006: CC                    -  int 3 
"RXC2.exe"+2338007: CC                    -  int 3 
"RXC2.exe"+2338008: CC                    -  int 3 
"RXC2.exe"+2338009: CC                    -  int 3 
"RXC2.exe"+233800A: CC                    -  int 3 
"RXC2.exe"+233800B: CC                    -  int 3 
"RXC2.exe"+233800C: CC                    -  int 3 
"RXC2.exe"+233800D: CC                    -  int 3 
"RXC2.exe"+233800E: CC                    -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>551</ID>
          <Description>"X"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>545</ID>
              <Description>"X +HP"</Description>
              <VariableType>Byte</VariableType>
              <Address>RXC2.exe+3DF79C0</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>548</ID>
              <Description>"X +Energy"</Description>
              <VariableType>Byte</VariableType>
              <Address>RXC2.exe+3DF79C3</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>492</ID>
              <Description>"X Rank"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:D
1:C
2:B
3:A
4:SA
5:GA
6:PA
7:UH
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>RXC2.exe+3DF79DC</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>517</ID>
              <Description>"X Glide Armor Parts"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>511</ID>
                  <Description>"Helmet"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79BE</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>516</ID>
                  <Description>"X-Buster"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>3</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79BE</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>514</ID>
                  <Description>"Armor"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>1</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79BE</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>515</ID>
                  <Description>"Boots"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>2</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79BE</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>518</ID>
              <Description>"X"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>519</ID>
                  <Description>"X"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>4 Bytes</VariableType>
                  <Address>RXC2.exe+3DF79D0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>520</ID>
                  <Description>"Power Lvl. 1"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>521</ID>
                  <Description>"Power Lvl. 2"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>1</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>522</ID>
                  <Description>"Power Lvl. 3"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>2</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>523</ID>
                  <Description>"Power Lvl. 4"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>3</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>524</ID>
                  <Description>"Speed Lvl. 1"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>4</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>525</ID>
                  <Description>"Speed Lvl. 2"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>5</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>526</ID>
                  <Description>"Speed Lvl. 3"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>6</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>527</ID>
                  <Description>"Speed Lvl. 4"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>7</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D0</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>528</ID>
                  <Description>"Special Lvl. 1"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>4</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D1</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>529</ID>
                  <Description>"Special Lvl. 2"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>5</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D1</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>530</ID>
                  <Description>"Special Lvl. 3"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>6</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D1</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>531</ID>
                  <Description>"Special Lvl. 4"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D2</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>552</ID>
          <Description>"Zero"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>547</ID>
              <Description>"Zero +HP"</Description>
              <VariableType>Byte</VariableType>
              <Address>RXC2.exe+3DF79C1</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>549</ID>
              <Description>"Zero +Energy"</Description>
              <VariableType>Byte</VariableType>
              <Address>RXC2.exe+3DF79C4</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>490</ID>
              <Description>"Zero Rank"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:D
1:C
2:B
3:A
4:SA
5:GA
6:PA
7:UH
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>RXC2.exe+3DF79DD</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>470</ID>
              <Description>"Zero"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>471</ID>
                  <Description>"Zero"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>4 Bytes</VariableType>
                  <Address>RXC2.exe+3DF79D4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>472</ID>
                  <Description>"Power Lvl. 1"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>473</ID>
                  <Description>"Power Lvl. 2"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>1</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>474</ID>
                  <Description>"Power Lvl. 3"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>2</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>475</ID>
                  <Description>"Power Lvl. 4"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>3</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>476</ID>
                  <Description>"Speed Lvl. 1"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D5</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>477</ID>
                  <Description>"Speed Lvl. 2"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>1</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D5</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>478</ID>
                  <Description>"Speed Lvl. 3"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>6</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D4</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>479</ID>
                  <Description>"Speed Lvl. 4"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>2</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D5</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>480</ID>
                  <Description>"Special Lvl. 1"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>4</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D5</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>481</ID>
                  <Description>"Special Lvl. 2"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>5</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D5</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>482</ID>
                  <Description>"Special Lvl. 3"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>6</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D5</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>483</ID>
                  <Description>"Special Lvl. 4"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>7</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D5</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>553</ID>
          <Description>"Axl"</Description>
          <Options moHideChildren="1"/>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>546</ID>
              <Description>"Axl +HP"</Description>
              <VariableType>Byte</VariableType>
              <Address>RXC2.exe+3DF79C2</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>550</ID>
              <Description>"Axl +Energy"</Description>
              <VariableType>Byte</VariableType>
              <Address>RXC2.exe+3DF79C5</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>491</ID>
              <Description>"Axl Rank"</Description>
              <DropDownList ReadOnly="1" DescriptionOnly="1" DisplayValueAsItem="1">0:D
1:C
2:B
3:A
4:SA
5:GA
6:PA
7:UH
</DropDownList>
              <VariableType>Byte</VariableType>
              <Address>RXC2.exe+3DF79DE</Address>
            </CheatEntry>
            <CheatEntry>
              <ID>462</ID>
              <Description>"Axl"</Description>
              <Options moHideChildren="1"/>
              <GroupHeader>1</GroupHeader>
              <CheatEntries>
                <CheatEntry>
                  <ID>467</ID>
                  <Description>"Axl"</Description>
                  <ShowAsHex>1</ShowAsHex>
                  <VariableType>4 Bytes</VariableType>
                  <Address>RXC2.exe+3DF79D8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>453</ID>
                  <Description>"Power Lvl. 1"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>0</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>459</ID>
                  <Description>"Power Lvl. 2"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>1</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>460</ID>
                  <Description>"Power Lvl. 3"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>2</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>461</ID>
                  <Description>"Power Lvl. 4"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>3</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>454</ID>
                  <Description>"Speed Lvl. 1"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>4</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>463</ID>
                  <Description>"Speed Lvl. 2"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>5</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>464</ID>
                  <Description>"Speed Lvl. 3"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>6</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D8</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>455</ID>
                  <Description>"Speed Lvl. 4"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>3</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D9</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>457</ID>
                  <Description>"Special Lvl. 1"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>4</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D9</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>465</ID>
                  <Description>"Special Lvl. 2"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>5</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D9</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>466</ID>
                  <Description>"Special Lvl. 3"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>6</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79D9</Address>
                </CheatEntry>
                <CheatEntry>
                  <ID>458</ID>
                  <Description>"Special Lvl. 4"</Description>
                  <VariableType>Binary</VariableType>
                  <BitStart>1</BitStart>
                  <BitLength>1</BitLength>
                  <ShowAsBinary>0</ShowAsBinary>
                  <Address>RXC2.exe+3DF79DA</Address>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>178</ID>
      <Description>"MegaMan X8"</Description>
      <Options moHideChildren="1" moDeactivateChildrenAsWell="1"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>612</ID>
          <Description>"Metals Not Decrease"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MetalsNotDecreaseX8_AOB,RXC2.exe,2B C7 6A 01 6A 00) // should be unique
registersymbol(MetalsNotDecreaseX8_AOB)

MetalsNotDecreaseX8_AOB:
  db 90 90

[DISABLE]

MetalsNotDecreaseX8_AOB:
  db 2B C7

unregistersymbol(MetalsNotDecreaseX8_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2515820

"RXC2.exe"+25157FF: 80 3D 99 A1 60 04 00           -  cmp byte ptr [RXC2.exe+420A199],00
"RXC2.exe"+2515806: 74 13                          -  je RXC2.exe+251581B
"RXC2.exe"+2515808: B8 99 99 99 99                 -  mov eax,99999999
"RXC2.exe"+251580D: F7 EF                          -  imul edi
"RXC2.exe"+251580F: C1 FA 02                       -  sar edx,02
"RXC2.exe"+2515812: 8B C2                          -  mov eax,edx
"RXC2.exe"+2515814: C1 E8 1F                       -  shr eax,1F
"RXC2.exe"+2515817: 03 C2                          -  add eax,edx
"RXC2.exe"+2515819: 03 F8                          -  add edi,eax
"RXC2.exe"+251581B: A1 FC 9F 60 04                 -  mov eax,[RXC2.exe+4209FFC]
// ---------- INJECTING HERE ----------
"RXC2.exe"+2515820: 2B C7                          -  sub eax,edi
"RXC2.exe"+2515822: 6A 01                          -  push 01
"RXC2.exe"+2515824: 6A 00                          -  push 00
// ---------- DONE INJECTING  ----------
"RXC2.exe"+2515826: A3 FC 9F 60 04                 -  mov [RXC2.exe+4209FFC],eax
"RXC2.exe"+251582B: A3 00 A0 60 04                 -  mov [RXC2.exe+420A000],eax
"RXC2.exe"+2515830: E8 6B 1F 00 00                 -  call RXC2.exe+25177A0
"RXC2.exe"+2515835: 83 C4 08                       -  add esp,08
"RXC2.exe"+2515838: 83 F8 64                       -  cmp eax,64
"RXC2.exe"+251583B: 75 36                          -  jne RXC2.exe+2515873
"RXC2.exe"+251583D: 6A 02                          -  push 02
"RXC2.exe"+251583F: 6A 00                          -  push 00
"RXC2.exe"+2515841: E8 5A 1F 00 00                 -  call RXC2.exe+25177A0
"RXC2.exe"+2515846: 83 C4 08                       -  add esp,08
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>616</ID>
          <Description>"Retry Not Decrease"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(RetryNotDecreaseX8_AOB,RXC2.exe,FE 8A 88 A1 60 04) // should be unique
aobscanmodule(RetryNotDecreaseX8_AOB2,RXC2.exe,FE C9 88 0D 52 A4 60 04) // should be unique
registersymbol(RetryNotDecreaseX8_AOB)
registersymbol(RetryNotDecreaseX8_AOB2)

RetryNotDecreaseX8_AOB:
  db 90 90 90 90 90 90

RetryNotDecreaseX8_AOB2:
  db 90 90

[DISABLE]

RetryNotDecreaseX8_AOB:
  db FE 8A 88 A1 60 04

RetryNotDecreaseX8_AOB2:
  db FE C9

unregistersymbol(RetryNotDecreaseX8_AOB)
unregistersymbol(RetryNotDecreaseX8_AOB2)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+245B4D0

"RXC2.exe"+245B4A7: 0F AB D0                       -  bts eax,edx
"RXC2.exe"+245B4AA: FE 8A 88 A1 60 04              -  dec [edx+RXC2.exe+420A188]
"RXC2.exe"+245B4B0: 83 FA 20                       -  cmp edx,20
"RXC2.exe"+245B4B3: 0F 43 C8                       -  cmovae ecx,eax
"RXC2.exe"+245B4B6: 33 C1                          -  xor eax,ecx
"RXC2.exe"+245B4B8: 83 FA 40                       -  cmp edx,40
"RXC2.exe"+245B4BB: 0F 43 C8                       -  cmovae ecx,eax
"RXC2.exe"+245B4BE: 09 05 70 A1 60 04              -  or [RXC2.exe+420A170],eax
"RXC2.exe"+245B4C4: 09 0D 74 A1 60 04              -  or [RXC2.exe+420A174],ecx
"RXC2.exe"+245B4CA: 8A 0D 52 A4 60 04              -  mov cl,[RXC2.exe+420A452]
// ---------- INJECTING HERE ----------
"RXC2.exe"+245B4D0: FE C9                          -  dec cl
"RXC2.exe"+245B4D2: 88 0D 52 A4 60 04              -  mov [RXC2.exe+420A452],cl
// ---------- DONE INJECTING  ----------
"RXC2.exe"+245B4D8: E8 43 FA FF FF                 -  call RXC2.exe+245AF20
"RXC2.exe"+245B4DD: 6A 0B                          -  push 0B
"RXC2.exe"+245B4DF: B9 F0 2E 62 04                 -  mov ecx,RXC2.exe+4222EF0
"RXC2.exe"+245B4E4: E8 07 E9 F7 FF                 -  call RXC2.exe+23D9DF0
"RXC2.exe"+245B4E9: 50                             -  push eax
"RXC2.exe"+245B4EA: B9 F0 2E 62 04                 -  mov ecx,RXC2.exe+4222EF0
"RXC2.exe"+245B4EF: E8 8C EC F7 FF                 -  call RXC2.exe+23DA180
"RXC2.exe"+245B4F4: C7 05 AC 01 79 04 01 00 00 00  -  mov [RXC2.exe+43901AC],00000001
"RXC2.exe"+245B4FE: C7 05 B0 01 79 04 01 00 00 00  -  mov [RXC2.exe+43901B0],00000001
"RXC2.exe"+245B508: C7 05 C4 2A 88 04 14 00 00 00  -  mov [RXC2.exe+4482AC4],00000014
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>569</ID>
          <Description>"Inf. Health"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-23
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfHealthInvincibleX8_AOB,RXC2.exe,8B 42 40 89 41 64) // should be unique
aobscanmodule(InfHealthSubCharX8_AOB,RXC2.exe,8B 42 40 89 41 68) // should be unique
alloc(newmem,$1000)
alloc(newmem2,$1000)

label(code)
label(code2)
label(return)
label(return2)

//
newmem:
//  mov eax,[edx+1C]
//  mov byte ptr [eax+CC],1
//  mov byte ptr [eax+118],1
//  mov byte ptr [eax+119],1
  fld [edx+44]
  fstp [edx+40]
code:
  mov eax,[edx+40]
  mov [ecx+64],eax
  jmp return

InfHealthInvincibleX8_AOB:
  jmp newmem
  nop
return:
registersymbol(InfHealthInvincibleX8_AOB)

//
newmem2:
  fld [edx+44]
  fstp [edx+40]
code2:
  mov eax,[edx+40]
  mov [ecx+68],eax
  jmp return2

InfHealthSubCharX8_AOB:
  jmp newmem2
  nop
return2:
registersymbol(InfHealthSubCharX8_AOB)

[DISABLE]

InfHealthInvincibleX8_AOB:
  db 8B 42 40 89 41 64

InfHealthSubCharX8_AOB:
  db 8B 42 40 89 41 68

unregistersymbol(InfHealthInvincibleX8_AOB)
unregistersymbol(InfHealthSubCharX8_AOB)
dealloc(newmem)
dealloc(newmem2)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+24443E4

"RXC2.exe"+24443C1: 8B 82 D4 05 00 00              -  mov eax,[edx+000005D4]
"RXC2.exe"+24443C7: 33 F6                          -  xor esi,esi
"RXC2.exe"+24443C9: 83 F8 FF                       -  cmp eax,-01
"RXC2.exe"+24443CC: 0F 45 F0                       -  cmovne esi,eax
"RXC2.exe"+24443CF: 8B 14 B5 08 18 73 04           -  mov edx,[esi*4+RXC2.exe+4331808]
"RXC2.exe"+24443D6: 85 D2                          -  test edx,edx
"RXC2.exe"+24443D8: 74 1B                          -  je RXC2.exe+24443F5
"RXC2.exe"+24443DA: 8B 92 EC 05 00 00              -  mov edx,[edx+000005EC]
"RXC2.exe"+24443E0: 85 D2                          -  test edx,edx
"RXC2.exe"+24443E2: 74 11                          -  je RXC2.exe+24443F5
// ---------- INJECTING HERE ----------
"RXC2.exe"+24443E4: 8B 42 40                       -  mov eax,[edx+40]
"RXC2.exe"+24443E7: 89 41 64                       -  mov [ecx+64],eax
// ---------- DONE INJECTING  ----------
"RXC2.exe"+24443EA: 8B 42 44                       -  mov eax,[edx+44]
"RXC2.exe"+24443ED: 89 81 CC 00 00 00              -  mov [ecx+000000CC],eax
"RXC2.exe"+24443F3: EB 11                          -  jmp RXC2.exe+2444406
"RXC2.exe"+24443F5: C7 41 64 00 00 00 00           -  mov [ecx+64],00000000
"RXC2.exe"+24443FC: C7 81 CC 00 00 00 00 00 00 00  -  mov [ecx+000000CC],00000000
"RXC2.exe"+2444406: A1 0C 18 73 04                 -  mov eax,[RXC2.exe+433180C]
"RXC2.exe"+244440B: 85 C0                          -  test eax,eax
"RXC2.exe"+244440D: 75 05                          -  jne RXC2.exe+2444414
"RXC2.exe"+244440F: 8D 50 01                       -  lea edx,[eax+01]
"RXC2.exe"+2444412: EB 1C                          -  jmp RXC2.exe+2444430
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>674</ID>
          <Description>"Special Energy Not Decrease"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-25
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(SpecialEnergyNotDecreaseX8_AOB,RXC2.exe,2B C7 66 89 81 82 09 00 00) // should be unique
aobscanmodule(SpecialEnergyNotDecreaseX8_AOB2,RXC2.exe,66 29 8C 47 82 09 00 00) // should be unique
aobscanmodule(SpecialEnergyNotDecreaseX8_AOB3,RXC2.exe,66 29 81 82 09 00 00) // should be unique
aobscanmodule(SpecialEnergyNotDecreaseX8_AOB4,RXC2.exe,66 29 38 8D 40 02) // should be unique
registersymbol(SpecialEnergyNotDecreaseX8_AOB)
registersymbol(SpecialEnergyNotDecreaseX8_AOB2)
registersymbol(SpecialEnergyNotDecreaseX8_AOB3)
registersymbol(SpecialEnergyNotDecreaseX8_AOB4)

SpecialEnergyNotDecreaseX8_AOB:
  db 90 90

SpecialEnergyNotDecreaseX8_AOB2:
  db 90 90 90 90 90 90 90 90

SpecialEnergyNotDecreaseX8_AOB3:
  db 90 90 90 90 90 90 90

SpecialEnergyNotDecreaseX8_AOB4:
  db 90 90 90

[DISABLE]

SpecialEnergyNotDecreaseX8_AOB:
  db 2B C7

SpecialEnergyNotDecreaseX8_AOB2:
  db 66 29 8C 47 82 09 00 00

SpecialEnergyNotDecreaseX8_AOB3:
  db 66 29 81 82 09 00 00

SpecialEnergyNotDecreaseX8_AOB4:
  db 66 29 38

unregistersymbol(SpecialEnergyNotDecreaseX8_AOB)
unregistersymbol(SpecialEnergyNotDecreaseX8_AOB2)
unregistersymbol(SpecialEnergyNotDecreaseX8_AOB3)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+255F61F

"RXC2.exe"+255F601: 66 3B C7                 -  cmp ax,di
"RXC2.exe"+255F604: 7D 07                    -  jnl RXC2.exe+255F60D
"RXC2.exe"+255F606: 5F                       -  pop edi
"RXC2.exe"+255F607: B0 01                    -  mov al,01
"RXC2.exe"+255F609: 5E                       -  pop esi
"RXC2.exe"+255F60A: C2 04 00                 -  ret 0004
"RXC2.exe"+255F60D: 83 BE B8 05 00 00 03     -  cmp dword ptr [esi+000005B8],03
"RXC2.exe"+255F614: 74 09                    -  je RXC2.exe+255F61F
"RXC2.exe"+255F616: 83 3D 1C A4 60 04 01     -  cmp dword ptr [RXC2.exe+420A41C],01
"RXC2.exe"+255F61D: 74 09                    -  je RXC2.exe+255F628
// ---------- INJECTING HERE ----------
"RXC2.exe"+255F61F: 2B C7                    -  sub eax,edi
"RXC2.exe"+255F621: 66 89 81 82 09 00 00     -  mov [ecx+00000982],ax
// ---------- DONE INJECTING  ----------
"RXC2.exe"+255F628: 5F                       -  pop edi
"RXC2.exe"+255F629: 32 C0                    -  xor al,al
"RXC2.exe"+255F62B: 5E                       -  pop esi
"RXC2.exe"+255F62C: C2 04 00                 -  ret 0004
"RXC2.exe"+255F62F: CC                       -  int 3 
"RXC2.exe"+255F630: 83 B9 B8 05 00 00 03     -  cmp dword ptr [ecx+000005B8],03
"RXC2.exe"+255F637: 74 09                    -  je RXC2.exe+255F642
"RXC2.exe"+255F639: 83 3D 1C A4 60 04 01     -  cmp dword ptr [RXC2.exe+420A41C],01
"RXC2.exe"+255F640: 74 15                    -  je RXC2.exe+255F657
"RXC2.exe"+255F642: 8B 81 5C 09 00 00        -  mov eax,[ecx+0000095C]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>771</ID>
          <Description>"Invincible"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-26
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InvincibleX8v2_AOB,RXC2.exe,0F B7 51 20 66 85 D2) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov edx,[esi+5F8]
  mov byte ptr [edx+CC],01
  mov byte ptr [edx+118],01
  mov byte ptr [edx+119],01
  mov edx,[esi+5FC]
  test edx,edx
  je code
  mov byte ptr [edx+CC],01
code:
  movzx edx,word ptr [ecx+20]
  test dx,dx
  jmp return

InvincibleX8v2_AOB:
  jmp newmem
  nop
  nop
return:
registersymbol(InvincibleX8v2_AOB)

[DISABLE]

InvincibleX8v2_AOB:
  db 0F B7 51 20 66 85 D2

unregistersymbol(InvincibleX8v2_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+252DD00

"RXC2.exe"+252DCE2: B9 20 78 62 03                 -  mov ecx,RXC2.exe+3227820
"RXC2.exe"+252DCE7: F3 0F 11 04 24                 -  movss [esp],xmm0
"RXC2.exe"+252DCEC: 50                             -  push eax
"RXC2.exe"+252DCED: FF B7 E4 05 00 00              -  push [edi+000005E4]
"RXC2.exe"+252DCF3: E8 B8 E7 EC FF                 -  call RXC2.exe+23FC4B0
"RXC2.exe"+252DCF8: 5F                             -  pop edi
"RXC2.exe"+252DCF9: 5E                             -  pop esi
"RXC2.exe"+252DCFA: 8B E5                          -  mov esp,ebp
"RXC2.exe"+252DCFC: 5D                             -  pop ebp
"RXC2.exe"+252DCFD: C2 04 00                       -  ret 0004
// ---------- INJECTING HERE ----------
"RXC2.exe"+252DD00: 0F B7 51 20                    -  movzx edx,word ptr [ecx+20]
"RXC2.exe"+252DD04: 66 85 D2                       -  test dx,dx
// ---------- DONE INJECTING  ----------
"RXC2.exe"+252DD07: 7E 38                          -  jle RXC2.exe+252DD41
"RXC2.exe"+252DD09: 4A                             -  dec edx
"RXC2.exe"+252DD0A: 66 89 51 20                    -  mov [ecx+20],dx
"RXC2.exe"+252DD0E: 66 85 D2                       -  test dx,dx
"RXC2.exe"+252DD11: 0F 84 E9 DD FF FF              -  je RXC2.exe+252BB00
"RXC2.exe"+252DD17: 8B 41 1C                       -  mov eax,[ecx+1C]
"RXC2.exe"+252DD1A: 0F B7 00                       -  movzx eax,word ptr [eax]
"RXC2.exe"+252DD1D: D1 E8                          -  shr eax,1
"RXC2.exe"+252DD1F: 66 3B D0                       -  cmp dx,ax
"RXC2.exe"+252DD22: 75 1D                          -  jne RXC2.exe+252DD41
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>785</ID>
          <Description>"Walk On Spikes"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-26
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(WalkOnSpikeX8_AOB,RXC2.exe,83 BE AC 08 00 00 00 0F 85 B8) // should be unique
aobscanmodule(WalkOnSpikesATransX8_AOB,RXC2.exe,83 BE AC 08 00 00 00 0F 85 D1) // should be unique
registersymbol(WalkOnSpikeX8_AOB)
registersymbol(WalkOnSpikesATransX8_AOB)

WalkOnSpikeX8_AOB:
  db 83 BE AC 08 00 00 80

WalkOnSpikesATransX8_AOB:
  db 83 BE AC 08 00 00 80

[DISABLE]

WalkOnSpikeX8_AOB:
  db 83 BE AC 08 00 00 00

WalkOnSpikesATransX8_AOB:
  db 83 BE AC 08 00 00 00

unregistersymbol(WalkOnSpikeX8_AOB)
unregistersymbol(WalkOnSpikesATransX8_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2551A6C

"RXC2.exe"+2551A3D: 69 C7 30 01 00 00        -  imul eax,edi,00000130
"RXC2.exe"+2551A43: 8B 80 84 18 6E 04        -  mov eax,[eax+RXC2.exe+42E1884]
"RXC2.exe"+2551A49: 85 C0                    -  test eax,eax
"RXC2.exe"+2551A4B: 0F 84 28 01 00 00        -  je RXC2.exe+2551B79
"RXC2.exe"+2551A51: 8B 00                    -  mov eax,[eax]
"RXC2.exe"+2551A53: 83 E0 10                 -  and eax,10
"RXC2.exe"+2551A56: 0F 84 1D 01 00 00        -  je RXC2.exe+2551B79
"RXC2.exe"+2551A5C: 8B 86 EC 05 00 00        -  mov eax,[esi+000005EC]
"RXC2.exe"+2551A62: 83 78 40 00              -  cmp dword ptr [eax+40],00
"RXC2.exe"+2551A66: 0F 8E 56 01 00 00        -  jng RXC2.exe+2551BC2
// ---------- INJECTING HERE ----------
"RXC2.exe"+2551A6C: 83 BE AC 08 00 00 00     -  cmp dword ptr [esi+000008AC],00
// ---------- DONE INJECTING  ----------
"RXC2.exe"+2551A73: 0F 85 B8 00 00 00        -  jne RXC2.exe+2551B31
"RXC2.exe"+2551A79: 8B 0D 84 D9 68 04        -  mov ecx,[RXC2.exe+428D984]
"RXC2.exe"+2551A7F: E8 5C 32 E9 FF           -  call RXC2.exe+23E4CE0
"RXC2.exe"+2551A84: 8B C8                    -  mov ecx,eax
"RXC2.exe"+2551A86: E8 35 6E A7 FF           -  call RXC2.exe+1FC88C0
"RXC2.exe"+2551A8B: 84 C0                    -  test al,al
"RXC2.exe"+2551A8D: 0F 84 A6 00 00 00        -  je RXC2.exe+2551B39
"RXC2.exe"+2551A93: 6A 00                    -  push 00
"RXC2.exe"+2551A95: B9 E0 12 73 04           -  mov ecx,RXC2.exe+43312E0
"RXC2.exe"+2551A9A: E8 61 9E E9 FF           -  call RXC2.exe+23EB900
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>645</ID>
          <Description>"Inf. Health Ride Armor"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfHealthRideArmorX8_AOB,RXC2.exe,8B 40 40 BA 24 00 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  fld [eax+44]
  fstp [eax+40]
code:
  mov eax,[eax+40]
  mov edx,00000024
  jmp return

InfHealthRideArmorX8_AOB:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(InfHealthRideArmorX8_AOB)

[DISABLE]

InfHealthRideArmorX8_AOB:
  db 8B 40 40 BA 24 00 00 00

unregistersymbol(InfHealthRideArmorX8_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2448653

"RXC2.exe"+2448634: 83 F8 02              -  cmp eax,02
"RXC2.exe"+2448637: 74 05                 -  je RXC2.exe+244863E
"RXC2.exe"+2448639: 83 F8 03              -  cmp eax,03
"RXC2.exe"+244863C: 75 73                 -  jne RXC2.exe+24486B1
"RXC2.exe"+244863E: 8B 04 85 08 18 73 04  -  mov eax,[eax*4+RXC2.exe+4331808]
"RXC2.exe"+2448645: 85 C0                 -  test eax,eax
"RXC2.exe"+2448647: 74 61                 -  je RXC2.exe+24486AA
"RXC2.exe"+2448649: 8B 80 EC 05 00 00     -  mov eax,[eax+000005EC]
"RXC2.exe"+244864F: 85 C0                 -  test eax,eax
"RXC2.exe"+2448651: 74 57                 -  je RXC2.exe+24486AA
// ---------- INJECTING HERE ----------
"RXC2.exe"+2448653: 8B 40 40              -  mov eax,[eax+40]
"RXC2.exe"+2448656: BA 24 00 00 00        -  mov edx,00000024
// ---------- DONE INJECTING  ----------
"RXC2.exe"+244865B: 3B C2                 -  cmp eax,edx
"RXC2.exe"+244865D: 0F 4F C2              -  cmovg eax,edx
"RXC2.exe"+2448660: 89 41 28              -  mov [ecx+28],eax
"RXC2.exe"+2448663: 89 41 30              -  mov [ecx+30],eax
"RXC2.exe"+2448666: A1 08 18 73 04        -  mov eax,[RXC2.exe+4331808]
"RXC2.exe"+244866B: 85 C0                 -  test eax,eax
"RXC2.exe"+244866D: 75 04                 -  jne RXC2.exe+2448673
"RXC2.exe"+244866F: 33 D2                 -  xor edx,edx
"RXC2.exe"+2448671: EB 19                 -  jmp RXC2.exe+244868C
"RXC2.exe"+2448673: 8B 90 C4 05 00 00     -  mov edx,[eax+000005C4]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>701</ID>
          <Description>"Inf. Chaser Boost"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-25
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfChaserBoostX8_AOB,RXC2.exe,0F B7 80 82 09 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  push ebx
  mov bx,word ptr [eax+00000960]
  mov word ptr [eax+00000982],bx
  pop ebx
code:
  movzx eax,word ptr [eax+00000982]
  jmp return

InfChaserBoostX8_AOB:
  jmp newmem
  nop
  nop
return:
registersymbol(InfChaserBoostX8_AOB)

[DISABLE]

InfChaserBoostX8_AOB:
  db 0F B7 80 82 09 00 00

unregistersymbol(InfChaserBoostX8_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+24445AD

"RXC2.exe"+2444590: EB 22                          -  jmp RXC2.exe+24445B4
"RXC2.exe"+2444592: 8B 81 D8 00 00 00              -  mov eax,[ecx+000000D8]
"RXC2.exe"+2444598: E9 63 BA 49 33                 -  jmp 35CE0000
"RXC2.exe"+244459D: 90                             -  nop 
"RXC2.exe"+244459E: 90                             -  nop 
"RXC2.exe"+244459F: 90                             -  nop 
"RXC2.exe"+24445A0: EB 12                          -  jmp RXC2.exe+24445B4
"RXC2.exe"+24445A2: 8B 04 95 08 18 73 04           -  mov eax,[edx*4+RXC2.exe+4331808]
"RXC2.exe"+24445A9: 85 C0                          -  test eax,eax
"RXC2.exe"+24445AB: 74 07                          -  je RXC2.exe+24445B4
// ---------- INJECTING HERE ----------
"RXC2.exe"+24445AD: 0F B7 80 82 09 00 00           -  movzx eax,word ptr [eax+00000982]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+24445B4: 98                             -  cwde 
"RXC2.exe"+24445B5: 5F                             -  pop edi
"RXC2.exe"+24445B6: 89 41 7C                       -  mov [ecx+7C],eax
"RXC2.exe"+24445B9: 8B 15 08 18 73 04              -  mov edx,[RXC2.exe+4331808]
"RXC2.exe"+24445BF: 5E                             -  pop esi
"RXC2.exe"+24445C0: 5B                             -  pop ebx
"RXC2.exe"+24445C1: 85 D2                          -  test edx,edx
"RXC2.exe"+24445C3: 75 04                          -  jne RXC2.exe+24445C9
"RXC2.exe"+24445C5: 33 C0                          -  xor eax,eax
"RXC2.exe"+24445C7: EB 0E                          -  jmp RXC2.exe+24445D7
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>586</ID>
          <Description>"Max AT"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfATX8_AOB,RXC2.exe,0F B7 05 B8 2F 76 04) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov word ptr [RXC2.exe+4362FB8],#100
code:
  movzx eax,word ptr [RXC2.exe+4362FB8]
  jmp return

InfATX8_AOB:
  jmp newmem
  nop
  nop
return:
registersymbol(InfATX8_AOB)

[DISABLE]

InfATX8_AOB:
  db 0F B7 05 B8 2F 76 04

unregistersymbol(InfATX8_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+24444B8

"RXC2.exe"+2444490: EB 06                          -  jmp RXC2.exe+2444498
"RXC2.exe"+2444492: 8B BF B8 05 00 00              -  mov edi,[edi+000005B8]
"RXC2.exe"+2444498: 89 B9 88 00 00 00              -  mov [ecx+00000088],edi
"RXC2.exe"+244449E: A1 0C 18 73 04                 -  mov eax,[RXC2.exe+433180C]
"RXC2.exe"+24444A3: 85 C0                          -  test eax,eax
"RXC2.exe"+24444A5: 75 05                          -  jne RXC2.exe+24444AC
"RXC2.exe"+24444A7: 83 C8 FF                       -  or eax,-01
"RXC2.exe"+24444AA: EB 06                          -  jmp RXC2.exe+24444B2
"RXC2.exe"+24444AC: 8B 80 B8 05 00 00              -  mov eax,[eax+000005B8]
"RXC2.exe"+24444B2: 89 81 8C 00 00 00              -  mov [ecx+0000008C],eax
// ---------- INJECTING HERE ----------
"RXC2.exe"+24444B8: 0F B7 05 B8 2F 76 04           -  movzx eax,word ptr [RXC2.exe+4362FB8]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+24444BF: 66 89 81 A4 00 00 00           -  mov [ecx+000000A4],ax
"RXC2.exe"+24444C6: 0F B7 05 BC 2F 76 04           -  movzx eax,word ptr [RXC2.exe+4362FBC]
"RXC2.exe"+24444CD: 66 89 81 AC 00 00 00           -  mov [ecx+000000AC],ax
"RXC2.exe"+24444D4: 8B 35 08 18 73 04              -  mov esi,[RXC2.exe+4331808]
"RXC2.exe"+24444DA: 85 F6                          -  test esi,esi
"RXC2.exe"+24444DC: 75 04                          -  jne RXC2.exe+24444E2
"RXC2.exe"+24444DE: 33 D2                          -  xor edx,edx
"RXC2.exe"+24444E0: EB 19                          -  jmp RXC2.exe+24444FB
"RXC2.exe"+24444E2: 8B 96 C4 05 00 00              -  mov edx,[esi+000005C4]
"RXC2.exe"+24444E8: 83 FA FF                       -  cmp edx,-01
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>618</ID>
          <Description>"Inf. Protection Chips"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ChipsInfUseX8_AOB,RXC2.exe,FE 4C 01 18 C2 08 00) // should be unique
registersymbol(ChipsInfUseX8_AOB)

ChipsInfUseX8_AOB:
  db 90 90 90 90

[DISABLE]

ChipsInfUseX8_AOB:
  db FE 4C 01 18

unregistersymbol(ChipsInfUseX8_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2535692

"RXC2.exe"+253567A: CC                       -  int 3 
"RXC2.exe"+253567B: CC                       -  int 3 
"RXC2.exe"+253567C: CC                       -  int 3 
"RXC2.exe"+253567D: CC                       -  int 3 
"RXC2.exe"+253567E: CC                       -  int 3 
"RXC2.exe"+253567F: CC                       -  int 3 
"RXC2.exe"+2535680: 8B 44 24 04              -  mov eax,[esp+04]
"RXC2.exe"+2535684: 8D 04 C0                 -  lea eax,[eax+eax*8]
"RXC2.exe"+2535687: 8D 0C C5 70 A1 60 04     -  lea ecx,[eax*8+RXC2.exe+420A170]
"RXC2.exe"+253568E: 8B 44 24 08              -  mov eax,[esp+08]
// ---------- INJECTING HERE ----------
"RXC2.exe"+2535692: FE 4C 01 18              -  dec [ecx+eax+18]
"RXC2.exe"+2535696: C2 08 00                 -  ret 0008
// ---------- DONE INJECTING  ----------
"RXC2.exe"+2535699: CC                       -  int 3 
"RXC2.exe"+253569A: CC                       -  int 3 
"RXC2.exe"+253569B: CC                       -  int 3 
"RXC2.exe"+253569C: CC                       -  int 3 
"RXC2.exe"+253569D: CC                       -  int 3 
"RXC2.exe"+253569E: CC                       -  int 3 
"RXC2.exe"+253569F: CC                       -  int 3 
"RXC2.exe"+25356A0: 56                       -  push esi
"RXC2.exe"+25356A1: 8B F1                    -  mov esi,ecx
"RXC2.exe"+25356A3: 8B 46 08                 -  mov eax,[esi+08]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>611</ID>
          <Description>"Inf. Air Dash"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfAirDashX8_AOB,RXC2.exe,C6 86 C0 08 00 00 01 5E C3 F6 46 28 80) // should be unique
registersymbol(InfAirDashX8_AOB)

InfAirDashX8_AOB:
  db C6 86 C0 08 00 00 00

[DISABLE]

InfAirDashX8_AOB:
  db C6 86 C0 08 00 00 01

unregistersymbol(InfAirDashX8_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+257B8A8

"RXC2.exe"+257B883: 66 8B 0D 10 13 6E 04  -  mov cx,[RXC2.exe+42E1310]
"RXC2.exe"+257B88A: 66 85 4E 28           -  test [esi+28],cx
"RXC2.exe"+257B88E: 74 21                 -  je RXC2.exe+257B8B1
"RXC2.exe"+257B890: 66 8B 46 0C           -  mov ax,[esi+0C]
"RXC2.exe"+257B894: 66 23 C1              -  and ax,cx
"RXC2.exe"+257B897: 0F B7 C0              -  movzx eax,ax
"RXC2.exe"+257B89A: 66 85 C0              -  test ax,ax
"RXC2.exe"+257B89D: 74 12                 -  je RXC2.exe+257B8B1
"RXC2.exe"+257B89F: C6 86 D2 08 00 00 00  -  mov byte ptr [esi+000008D2],00
"RXC2.exe"+257B8A6: B0 01                 -  mov al,01
// ---------- INJECTING HERE ----------
"RXC2.exe"+257B8A8: C6 86 C0 08 00 00 01  -  mov byte ptr [esi+000008C0],01
// ---------- DONE INJECTING  ----------
"RXC2.exe"+257B8AF: 5E                    -  pop esi
"RXC2.exe"+257B8B0: C3                    -  ret 
"RXC2.exe"+257B8B1: F6 46 28 80           -  test byte ptr [esi+28],-80
"RXC2.exe"+257B8B5: 74 26                 -  je RXC2.exe+257B8DD
"RXC2.exe"+257B8B7: 66 8B 46 10           -  mov ax,[esi+10]
"RXC2.exe"+257B8BB: B9 80 00 00 00        -  mov ecx,00000080
"RXC2.exe"+257B8C0: 66 23 C1              -  and ax,cx
"RXC2.exe"+257B8C3: 0F B7 C0              -  movzx eax,ax
"RXC2.exe"+257B8C6: 66 85 C0              -  test ax,ax
"RXC2.exe"+257B8C9: 74 12                 -  je RXC2.exe+257B8DD
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>779</ID>
          <Description>"Inf. Nova Strike Energy"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-26
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XInfNovaStrikeX8_AOB,RXC2.exe,66 89 86 82 09 00 00 66 89 86 96 09 00 00) // should be unique
registersymbol(XInfNovaStrikeX8_AOB)

XInfNovaStrikeX8_AOB:
  db 90 90 90 90 90 90 90 90 90 90 90 90 90 90

[DISABLE]

XInfNovaStrikeX8_AOB:
  db 66 89 86 82 09 00 00 66 89 86 96 09 00 00

unregistersymbol(XInfNovaStrikeX8_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+255939D

"RXC2.exe"+2559366: F3 0F 59 05 C8 10 15 03        -  mulss xmm0,[RXC2.exe+2D510C8]
"RXC2.exe"+255936E: F3 0F 2C C0                    -  cvttss2si eax,xmm0
"RXC2.exe"+2559372: 66 89 86 F6 2C 00 00           -  mov [esi+00002CF6],ax
"RXC2.exe"+2559379: 0F BF 84 4E 82 09 00 00        -  movsx eax,word ptr [esi+ecx*2+00000982]
"RXC2.exe"+2559381: 66 0F 6E C0                    -  movd xmm0,eax
"RXC2.exe"+2559385: 0F 5B C0                       -  cvtdq2ps xmm0,xmm0
"RXC2.exe"+2559388: F3 0F 59 05 C8 10 15 03        -  mulss xmm0,[RXC2.exe+2D510C8]
"RXC2.exe"+2559390: F3 0F 2C C0                    -  cvttss2si eax,xmm0
"RXC2.exe"+2559394: 66 89 86 F8 2C 00 00           -  mov [esi+00002CF8],ax
"RXC2.exe"+255939B: 33 C0                          -  xor eax,eax
// ---------- INJECTING HERE ----------
"RXC2.exe"+255939D: 66 89 86 82 09 00 00           -  mov [esi+00000982],ax
// ---------- DONE INJECTING  ----------
"RXC2.exe"+25593A4: 66 89 86 96 09 00 00           -  mov [esi+00000996],ax
"RXC2.exe"+25593AB: B0 01                          -  mov al,01
"RXC2.exe"+25593AD: 5E                             -  pop esi
"RXC2.exe"+25593AE: C3                             -  ret 
"RXC2.exe"+25593AF: 32 C0                          -  xor al,al
"RXC2.exe"+25593B1: 5E                             -  pop esi
"RXC2.exe"+25593B2: C3                             -  ret 
"RXC2.exe"+25593B3: CC                             -  int 3 
"RXC2.exe"+25593B4: CC                             -  int 3 
"RXC2.exe"+25593B5: CC                             -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>749</ID>
          <Description>"X Inf. Giga Crash"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-25
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XInfGigaCrashX8_AOB,RXC2.exe,66 89 86 82 09 00 00 66 89 86 94 09 00 00) // should be unique
registersymbol(XInfGigaCrashX8_AOB)

XInfGigaCrashX8_AOB:
  db 90 90 90 90 90 90 90 90 90 90 90 90 90 90

[DISABLE]

XInfGigaCrashX8_AOB:
  db 66 89 86 82 09 00 00 66 89 86 94 09 00 00

unregistersymbol(XInfGigaCrashX8_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+25592AD

"RXC2.exe"+2559284: 83 BE 94 08 00 00 00           -  cmp dword ptr [esi+00000894],00
"RXC2.exe"+255928B: 75 32                          -  jne RXC2.exe+25592BF
"RXC2.exe"+255928D: 8B 86 5C 09 00 00              -  mov eax,[esi+0000095C]
"RXC2.exe"+2559293: 0F BF 84 46 82 09 00 00        -  movsx eax,word ptr [esi+eax*2+00000982]
"RXC2.exe"+255929B: 99                             -  cdq 
"RXC2.exe"+255929C: 83 E2 03                       -  and edx,03
"RXC2.exe"+255929F: 03 C2                          -  add eax,edx
"RXC2.exe"+25592A1: C1 F8 02                       -  sar eax,02
"RXC2.exe"+25592A4: 66 89 86 40 2C 00 00           -  mov [esi+00002C40],ax
"RXC2.exe"+25592AB: 33 C0                          -  xor eax,eax
// ---------- INJECTING HERE ----------
"RXC2.exe"+25592AD: 66 89 86 82 09 00 00           -  mov [esi+00000982],ax
// ---------- DONE INJECTING  ----------
"RXC2.exe"+25592B4: 66 89 86 94 09 00 00           -  mov [esi+00000994],ax
"RXC2.exe"+25592BB: B0 01                          -  mov al,01
"RXC2.exe"+25592BD: 5E                             -  pop esi
"RXC2.exe"+25592BE: C3                             -  ret 
"RXC2.exe"+25592BF: 32 C0                          -  xor al,al
"RXC2.exe"+25592C1: 5E                             -  pop esi
"RXC2.exe"+25592C2: C3                             -  ret 
"RXC2.exe"+25592C3: CC                             -  int 3 
"RXC2.exe"+25592C4: CC                             -  int 3 
"RXC2.exe"+25592C5: CC                             -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>712</ID>
          <Description>"X Inf. Drive"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-25
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfXDriveX8_AOB,RXC2.exe,66 FF 8E 82 09 00 00 66 FF 8E 98 09 00 00) // should be unique
registersymbol(InfXDriveX8_AOB)

InfXDriveX8_AOB:
  db 90 90 90 90 90 90 90 90 90 90 90 90 90 90

[DISABLE]

InfXDriveX8_AOB:
  db 66 FF 8E 82 09 00 00 66 FF 8E 98 09 00 00

unregistersymbol(InfXDriveX8_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+255994E

"RXC2.exe"+2559927: E8 D4 EC FF FF                 -  call RXC2.exe+2558600
"RXC2.exe"+255992C: 80 BE C0 21 00 00 00           -  cmp byte ptr [esi+000021C0],00
"RXC2.exe"+2559933: 74 43                          -  je RXC2.exe+2559978
"RXC2.exe"+2559935: FF 86 C4 21 00 00              -  inc [esi+000021C4]
"RXC2.exe"+255993B: 33 D2                          -  xor edx,edx
"RXC2.exe"+255993D: 8B 86 C4 21 00 00              -  mov eax,[esi+000021C4]
"RXC2.exe"+2559943: B9 0A 00 00 00                 -  mov ecx,0000000A
"RXC2.exe"+2559948: F7 F1                          -  div ecx
"RXC2.exe"+255994A: 85 D2                          -  test edx,edx
"RXC2.exe"+255994C: 75 2A                          -  jne RXC2.exe+2559978
// ---------- INJECTING HERE ----------
"RXC2.exe"+255994E: 66 FF 8E 82 09 00 00           -  dec word ptr [esi+00000982]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+2559955: 66 FF 8E 98 09 00 00           -  dec word ptr [esi+00000998]
"RXC2.exe"+255995C: 66 39 96 98 09 00 00           -  cmp [esi+00000998],dx
"RXC2.exe"+2559963: 7F 13                          -  jg RXC2.exe+2559978
"RXC2.exe"+2559965: 8B CE                          -  mov ecx,esi
"RXC2.exe"+2559967: E8 94 04 00 00                 -  call RXC2.exe+2559E00
"RXC2.exe"+255996C: B8 78 00 00 00                 -  mov eax,00000078
"RXC2.exe"+2559971: 66 89 86 90 27 00 00           -  mov [esi+00002790],ax
"RXC2.exe"+2559978: 53                             -  push ebx
"RXC2.exe"+2559979: 57                             -  push edi
"RXC2.exe"+255997A: 0F B7 BE 60 0E 00 00           -  movzx edi,word ptr [esi+00000E60]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>724</ID>
          <Description>"X Normal Attack Always Charged"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-25
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XNrmlAtkAlwaysChargedX8_AOB,RXC2.exe,66 39 46 20 7C 1C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov byte ptr [esi-4],04
  mov byte ptr [esi+22],04
code:
  cmp [esi+20],ax
  jl RXC2.exe+252D6A0
  jmp return

XNrmlAtkAlwaysChargedX8_AOB:
  jmp newmem
  nop
return:
registersymbol(XNrmlAtkAlwaysChargedX8_AOB)

[DISABLE]

XNrmlAtkAlwaysChargedX8_AOB:
  db 66 39 46 20 7C 1C

unregistersymbol(XNrmlAtkAlwaysChargedX8_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+252D67E

"RXC2.exe"+252D650: 83 BF 78 08 00 00 00     -  cmp dword ptr [edi+00000878],00
"RXC2.exe"+252D657: 0F 85 ED 00 00 00        -  jne RXC2.exe+252D74A
"RXC2.exe"+252D65D: 66 83 7E 24 00           -  cmp word ptr [esi+24],00
"RXC2.exe"+252D662: 0F 85 F5 00 00 00        -  jne RXC2.exe+252D75D
"RXC2.exe"+252D668: 8B 4E 1C                 -  mov ecx,[esi+1C]
"RXC2.exe"+252D66B: 0F BF 41 06              -  movsx eax,word ptr [ecx+06]
"RXC2.exe"+252D66F: 66 0F 6E C0              -  movd xmm0,eax
"RXC2.exe"+252D673: 0F 5B C0                 -  cvtdq2ps xmm0,xmm0
"RXC2.exe"+252D676: F3 0F 59 C1              -  mulss xmm0,xmm1
"RXC2.exe"+252D67A: F3 0F 2C C0              -  cvttss2si eax,xmm0
// ---------- INJECTING HERE ----------
"RXC2.exe"+252D67E: 66 39 46 20              -  cmp [esi+20],ax
"RXC2.exe"+252D682: 7C 1C                    -  jl RXC2.exe+252D6A0
// ---------- DONE INJECTING  ----------
"RXC2.exe"+252D684: 8B 41 18                 -  mov eax,[ecx+18]
"RXC2.exe"+252D687: 83 F8 FF                 -  cmp eax,-01
"RXC2.exe"+252D68A: 74 14                    -  je RXC2.exe+252D6A0
"RXC2.exe"+252D68C: 83 7E 38 00              -  cmp dword ptr [esi+38],00
"RXC2.exe"+252D690: 75 0E                    -  jne RXC2.exe+252D6A0
"RXC2.exe"+252D692: 50                       -  push eax
"RXC2.exe"+252D693: B9 F0 2E 62 04           -  mov ecx,RXC2.exe+4222EF0
"RXC2.exe"+252D698: E8 53 C7 EA FF           -  call RXC2.exe+23D9DF0
"RXC2.exe"+252D69D: 89 46 38                 -  mov [esi+38],eax
"RXC2.exe"+252D6A0: 8A 56 22                 -  mov dl,[esi+22]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>675</ID>
          <Description>"X Rapid Fire Special Weapon"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-25
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(XRapidFireSpecialAttackX8_AOB,RXC2.exe,73 50 8B 8E 40 09 00 00) // should be unique
aobscanmodule(XRapidFireSpecialAttackX8_AOB2,RXC2.exe,0F 83 3C FF FF FF) // should be unique
registersymbol(XRapidFireSpecialAttackX8_AOB)
registersymbol(XRapidFireSpecialAttackX8_AOB2)

XRapidFireSpecialAttackX8_AOB:
  db 90 90

XRapidFireSpecialAttackX8_AOB2:
  db 90 90 90 90 90 90

[DISABLE]

XRapidFireSpecialAttackX8_AOB:
  db 73 50

XRapidFireSpecialAttackX8_AOB2:
  db 0F 83 3C FF FF FF

unregistersymbol(XRapidFireSpecialAttackX8_AOB)
unregistersymbol(XRapidFireSpecialAttackX8_AOB2)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2559061

"RXC2.exe"+255903E: 83 FF 0A                       -  cmp edi,0A
"RXC2.exe"+2559041: 74 70                          -  je RXC2.exe+25590B3
"RXC2.exe"+2559043: 83 FF 0B                       -  cmp edi,0B
"RXC2.exe"+2559046: 74 6B                          -  je RXC2.exe+25590B3
"RXC2.exe"+2559048: 8B CE                          -  mov ecx,esi
"RXC2.exe"+255904A: E8 C1 07 00 00                 -  call RXC2.exe+2559810
"RXC2.exe"+255904F: 3C 01                          -  cmp al,01
"RXC2.exe"+2559051: 74 60                          -  je RXC2.exe+25590B3
"RXC2.exe"+2559053: 8A 84 37 1D 09 00 00           -  mov al,[edi+esi+0000091D]
"RXC2.exe"+255905A: 3A 84 37 2E 09 00 00           -  cmp al,[edi+esi+0000092E]
// ---------- INJECTING HERE ----------
"RXC2.exe"+2559061: 73 50                          -  jae RXC2.exe+25590B3
"RXC2.exe"+2559063: 8B 8E 40 09 00 00              -  mov ecx,[esi+00000940]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+2559069: 56                             -  push esi
"RXC2.exe"+255906A: 8B 01                          -  mov eax,[ecx]
"RXC2.exe"+255906C: 8B 40 2C                       -  mov eax,[eax+2C]
"RXC2.exe"+255906F: FF D0                          -  call eax
"RXC2.exe"+2559071: 3C 01                          -  cmp al,01
"RXC2.exe"+2559073: 75 3E                          -  jne RXC2.exe+25590B3
"RXC2.exe"+2559075: 80 BE A4 2D 00 00 00           -  cmp byte ptr [esi+00002DA4],00
"RXC2.exe"+255907C: 75 3A                          -  jne RXC2.exe+25590B8
"RXC2.exe"+255907E: 6A 00                          -  push 00
"RXC2.exe"+2559080: 8B CE                          -  mov ecx,esi
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>610</ID>
          <Description>"Zero Inf. Double Jump"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(ZeroInfDoubleJumpX8_AOB,RXC2.exe,C6 81 C0 08 00 00 01 C3) // should be unique
registersymbol(ZeroInfDoubleJumpX8_AOB)

ZeroInfDoubleJumpX8_AOB:
  db C6 81 C0 08 00 00 00

[DISABLE]

ZeroInfDoubleJumpX8_AOB:
  db C6 81 C0 08 00 00 01

unregistersymbol(ZeroInfDoubleJumpX8_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2562183

"RXC2.exe"+2562160: 66 85 51 28              -  test [ecx+28],dx
"RXC2.exe"+2562164: 74 25                    -  je RXC2.exe+256218B
"RXC2.exe"+2562166: 66 8B 41 0C              -  mov ax,[ecx+0C]
"RXC2.exe"+256216A: 66 23 C2                 -  and ax,dx
"RXC2.exe"+256216D: 0F B7 C0                 -  movzx eax,ax
"RXC2.exe"+2562170: 66 85 C0                 -  test ax,ax
"RXC2.exe"+2562173: 74 16                    -  je RXC2.exe+256218B
"RXC2.exe"+2562175: 8B 81 B8 08 00 00        -  mov eax,[ecx+000008B8]
"RXC2.exe"+256217B: 89 81 B4 08 00 00        -  mov [ecx+000008B4],eax
"RXC2.exe"+2562181: B0 01                    -  mov al,01
// ---------- INJECTING HERE ----------
"RXC2.exe"+2562183: C6 81 C0 08 00 00 01     -  mov byte ptr [ecx+000008C0],01
// ---------- DONE INJECTING  ----------
"RXC2.exe"+256218A: C3                       -  ret 
"RXC2.exe"+256218B: 32 C0                    -  xor al,al
"RXC2.exe"+256218D: C3                       -  ret 
"RXC2.exe"+256218E: CC                       -  int 3 
"RXC2.exe"+256218F: CC                       -  int 3 
"RXC2.exe"+2562190: 51                       -  push ecx
"RXC2.exe"+2562191: F6 81 58 09 00 00 20     -  test byte ptr [ecx+00000958],20
"RXC2.exe"+2562198: 74 65                    -  je RXC2.exe+25621FF
"RXC2.exe"+256219A: 83 B9 5C 09 00 00 0E     -  cmp dword ptr [ecx+0000095C],0E
"RXC2.exe"+25621A1: 75 5C                    -  jne RXC2.exe+25621FF
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>751</ID>
          <Description>"Axl Inf. A Trans"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-25
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AxlInfATransX8_AOB,RXC2.exe,48 66 89 84 51 82 09 00 00) // should be unique
registersymbol(AxlInfATransX8_AOB)

AxlInfATransX8_AOB:
  db 90

[DISABLE]

AxlInfATransX8_AOB:
  db 48

unregistersymbol(AxlInfATransX8_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2546684

"RXC2.exe"+2546662: 0F BF C9                       -  movsx ecx,cx
"RXC2.exe"+2546665: F7 F1                          -  div ecx
"RXC2.exe"+2546667: 8B 4D 08                       -  mov ecx,[ebp+08]
"RXC2.exe"+254666A: 85 D2                          -  test edx,edx
"RXC2.exe"+254666C: 75 4E                          -  jne RXC2.exe+25466BC
"RXC2.exe"+254666E: 8B 97 80 00 00 00              -  mov edx,[edi+00000080]
"RXC2.exe"+2546674: 8B 52 10                       -  mov edx,[edx+10]
"RXC2.exe"+2546677: 0F B7 84 51 82 09 00 00        -  movzx eax,word ptr [ecx+edx*2+00000982]
"RXC2.exe"+254667F: 66 85 C0                       -  test ax,ax
"RXC2.exe"+2546682: 7E 38                          -  jle RXC2.exe+25466BC
// ---------- INJECTING HERE ----------
"RXC2.exe"+2546684: 48                             -  dec eax
"RXC2.exe"+2546685: 66 89 84 51 82 09 00 00        -  mov [ecx+edx*2+00000982],ax
// ---------- DONE INJECTING  ----------
"RXC2.exe"+254668D: 80 BF 8C 00 00 00 01           -  cmp byte ptr [edi+0000008C],01
"RXC2.exe"+2546694: 75 26                          -  jne RXC2.exe+25466BC
"RXC2.exe"+2546696: 8B 87 80 00 00 00              -  mov eax,[edi+00000080]
"RXC2.exe"+254669C: 8B 40 10                       -  mov eax,[eax+10]
"RXC2.exe"+254669F: 66 83 BC 41 82 09 00 00 02     -  cmp word ptr [ecx+eax*2+00000982],02
"RXC2.exe"+25466A8: 7D 12                          -  jnl RXC2.exe+25466BC
"RXC2.exe"+25466AA: BA 02 00 00 00                 -  mov edx,00000002
"RXC2.exe"+25466AF: 66 89 94 41 82 09 00 00        -  mov [ecx+eax*2+00000982],dx
"RXC2.exe"+25466B7: EB 03                          -  jmp RXC2.exe+25466BC
"RXC2.exe"+25466B9: 8B 4D 08                       -  mov ecx,[ebp+08]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>608</ID>
          <Description>"Axl Hover Again"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AxlHoverAgainX8_AOB,RXC2.exe,C6 81 C0 08 00 00 01 B0) // should be unique
aobscanmodule(AxlHoverAgainX8_AOB2,RXC2.exe,C6 86 C0 08 00 00 01 66) // should be unique
registersymbol(AxlHoverAgainX8_AOB)
registersymbol(AxlHoverAgainX8_AOB2)

AxlHoverAgainX8_AOB:
  db C6 81 C0 08 00 00 00

AxlHoverAgainX8_AOB2:
  db C6 86 C0 08 00 00 00

[DISABLE]

AxlHoverAgainX8_AOB:
  db C6 81 C0 08 00 00 01

AxlHoverAgainX8_AOB2:
  db C6 86 C0 08 00 00 01

unregistersymbol(AxlHoverAgainX8_AOB)
unregistersymbol(AxlHoverAgainX8_AOB2)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+256A9F5

"RXC2.exe"+256A9D0: 80 B9 C0 08 00 00 01           -  cmp byte ptr [ecx+000008C0],01
"RXC2.exe"+256A9D7: 74 26                          -  je RXC2.exe+256A9FF
"RXC2.exe"+256A9D9: 66 8B 15 12 13 6E 04           -  mov dx,[RXC2.exe+42E1312]
"RXC2.exe"+256A9E0: 66 85 51 28                    -  test [ecx+28],dx
"RXC2.exe"+256A9E4: 74 19                          -  je RXC2.exe+256A9FF
"RXC2.exe"+256A9E6: 66 8B 41 0C                    -  mov ax,[ecx+0C]
"RXC2.exe"+256A9EA: 66 23 C2                       -  and ax,dx
"RXC2.exe"+256A9ED: 0F B7 C0                       -  movzx eax,ax
"RXC2.exe"+256A9F0: 66 85 C0                       -  test ax,ax
"RXC2.exe"+256A9F3: 74 0A                          -  je RXC2.exe+256A9FF
// ---------- INJECTING HERE ----------
"RXC2.exe"+256A9F5: C6 81 C0 08 00 00 01           -  mov byte ptr [ecx+000008C0],01
// ---------- DONE INJECTING  ----------
"RXC2.exe"+256A9FC: B0 01                          -  mov al,01
"RXC2.exe"+256A9FE: C3                             -  ret 
"RXC2.exe"+256A9FF: 32 C0                          -  xor al,al
"RXC2.exe"+256AA01: C3                             -  ret 
"RXC2.exe"+256AA02: CC                             -  int 3 
"RXC2.exe"+256AA03: CC                             -  int 3 
"RXC2.exe"+256AA04: CC                             -  int 3 
"RXC2.exe"+256AA05: CC                             -  int 3 
"RXC2.exe"+256AA06: CC                             -  int 3 
"RXC2.exe"+256AA07: CC                             -  int 3 
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>597</ID>
          <Description>"Axl Inf. Hover Time"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(InfAxlHoverTimeX8_AOB,RXC2.exe,66 FF 87 84 00 00 00 66 8B 8F 84 00 00 00 66 3B) // should be unique
aobscanmodule(InfAxlHoverTimeX8_AOB2,RXC2.exe,66 FF 87 A8 00 00 00) // should be unique
registersymbol(InfAxlHoverTimeX8_AOB)
registersymbol(InfAxlHoverTimeX8_AOB2)

InfAxlHoverTimeX8_AOB:
  db 90 90 90 90 90 90 90

InfAxlHoverTimeX8_AOB2:
  db 90 90 90 90 90 90 90

[DISABLE]

InfAxlHoverTimeX8_AOB:
  db 66 FF 87 84 00 00 00

InfAxlHoverTimeX8_AOB2:
  db 66 FF 87 A8 00 00 00

unregistersymbol(InfAxlHoverTimeX8_AOB)
unregistersymbol(InfAxlHoverTimeX8_AOB2)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+254438C

"RXC2.exe"+2544368: B9 F0 2E 62 04                 -  mov ecx,RXC2.exe+4222EF0
"RXC2.exe"+254436D: 6A 00                          -  push 00
"RXC2.exe"+254436F: 05 90 18 6E 04                 -  add eax,RXC2.exe+42E1890
"RXC2.exe"+2544374: 50                             -  push eax
"RXC2.exe"+2544375: 52                             -  push edx
"RXC2.exe"+2544376: E8 B5 5E E9 FF                 -  call RXC2.exe+23DA230
"RXC2.exe"+254437B: 8A 47 05                       -  mov al,[edi+05]
"RXC2.exe"+254437E: 3C 02                          -  cmp al,02
"RXC2.exe"+2544380: 0F 85 B5 00 00 00              -  jne RXC2.exe+254443B
"RXC2.exe"+2544386: 8B 87 80 00 00 00              -  mov eax,[edi+00000080]
// ---------- INJECTING HERE ----------
"RXC2.exe"+254438C: 66 FF 87 84 00 00 00           -  inc word ptr [edi+00000084]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+2544393: 66 8B 8F 84 00 00 00           -  mov cx,[edi+00000084]
"RXC2.exe"+254439A: 66 3B 48 08                    -  cmp cx,[eax+08]
"RXC2.exe"+254439E: 7E 06                          -  jle RXC2.exe+25443A6
"RXC2.exe"+25443A0: C6 47 05 03                    -  mov byte ptr [edi+05],03
"RXC2.exe"+25443A4: EB 28                          -  jmp RXC2.exe+25443CE
"RXC2.exe"+25443A6: F3 0F 10 86 90 06 00 00        -  movss xmm0,[esi+00000690]
"RXC2.exe"+25443AE: 83 EC 08                       -  sub esp,08
"RXC2.exe"+25443B1: B9 20 78 62 03                 -  mov ecx,RXC2.exe+3227820
"RXC2.exe"+25443B6: F3 0F 11 44 24 04              -  movss [esp+04],xmm0
"RXC2.exe"+25443BC: C7 04 24 00 00 00 00           -  mov [esp],00000000
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>696</ID>
          <Description>"Axl Rapid Fire"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-25
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(AxlRapidFireX8_AOB,RXC2.exe,0F 83 BA 17 00 00) // should be unique
registersymbol(AxlRapidFireX8_AOB)

AxlRapidFireX8_AOB:
  db 90 90 90 90 90 90

[DISABLE]

AxlRapidFireX8_AOB:
  db 0F 83 BA 17 00 00

unregistersymbol(AxlRapidFireX8_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+256CEB9

"RXC2.exe"+256CE93: 50                       -  push eax
"RXC2.exe"+256CE94: 6A FF                    -  push -01
"RXC2.exe"+256CE96: 6A 02                    -  push 02
"RXC2.exe"+256CE98: 6A 03                    -  push 03
"RXC2.exe"+256CE9A: 89 B4 24 A4 01 00 00     -  mov [esp+000001A4],esi
"RXC2.exe"+256CEA1: 6A 04                    -  push 04
"RXC2.exe"+256CEA3: E9 44 17 00 00           -  jmp RXC2.exe+256E5EC
"RXC2.exe"+256CEA8: 8B 4D 08                 -  mov ecx,[ebp+08]
"RXC2.exe"+256CEAB: 8A 84 39 1D 09 00 00     -  mov al,[ecx+edi+0000091D]
"RXC2.exe"+256CEB2: 3A 84 39 2E 09 00 00     -  cmp al,[ecx+edi+0000092E]
// ---------- INJECTING HERE ----------
"RXC2.exe"+256CEB9: 0F 83 BA 17 00 00        -  jae RXC2.exe+256E679
// ---------- DONE INJECTING  ----------
"RXC2.exe"+256CEBF: 85 C9                    -  test ecx,ecx
"RXC2.exe"+256CEC1: 0F 85 7C 03 00 00        -  jne RXC2.exe+256D243
"RXC2.exe"+256CEC7: 8B CF                    -  mov ecx,edi
"RXC2.exe"+256CEC9: E8 02 23 00 00           -  call RXC2.exe+256F1D0
"RXC2.exe"+256CECE: 68 E4 5B 21 03           -  push RXC2.exe+2E15BE4
"RXC2.exe"+256CED3: B9 38 78 62 03           -  mov ecx,RXC2.exe+3227838
"RXC2.exe"+256CED8: E8 E3 5E E7 FF           -  call RXC2.exe+23E2DC0
"RXC2.exe"+256CEDD: 8B 8F C4 21 00 00        -  mov ecx,[edi+000021C4]
"RXC2.exe"+256CEE3: 6A 01                    -  push 01
"RXC2.exe"+256CEE5: 89 44 24 40              -  mov [esp+40],eax
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>575</ID>
          <Description>"Freeze Stage Time"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(FreezeStageTimeX8_AOB,RXC2.exe,FF 05 84 A4 60 04) // should be unique
registersymbol(FreezeStageTimeX8_AOB)

FreezeStageTimeX8_AOB:
  db 90 90 90 90 90 90

[DISABLE]

FreezeStageTimeX8_AOB:
  db FF 05 84 A4 60 04

unregistersymbol(FreezeStageTimeX8_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+23EB88A

"RXC2.exe"+23EB869: 83 F8 09              -  cmp eax,09
"RXC2.exe"+23EB86C: 74 22                 -  je RXC2.exe+23EB890
"RXC2.exe"+23EB86E: 83 F8 0A              -  cmp eax,0A
"RXC2.exe"+23EB871: 74 1D                 -  je RXC2.exe+23EB890
"RXC2.exe"+23EB873: 83 F8 0B              -  cmp eax,0B
"RXC2.exe"+23EB876: 74 18                 -  je RXC2.exe+23EB890
"RXC2.exe"+23EB878: 80 BE A0 00 00 00 00  -  cmp byte ptr [esi+000000A0],00
"RXC2.exe"+23EB87F: 75 0F                 -  jne RXC2.exe+23EB890
"RXC2.exe"+23EB881: 80 3D A8 A4 60 04 00  -  cmp byte ptr [RXC2.exe+420A4A8],00
"RXC2.exe"+23EB888: 75 06                 -  jne RXC2.exe+23EB890
// ---------- INJECTING HERE ----------
"RXC2.exe"+23EB88A: FF 05 84 A4 60 04     -  inc [RXC2.exe+420A484]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+23EB890: A1 A0 9B 62 03        -  mov eax,[RXC2.exe+3229BA0]
"RXC2.exe"+23EB895: 83 F8 06              -  cmp eax,06
"RXC2.exe"+23EB898: 75 1D                 -  jne RXC2.exe+23EB8B7
"RXC2.exe"+23EB89A: F6 05 70 A4 60 04 20  -  test byte ptr [RXC2.exe+420A470],20
"RXC2.exe"+23EB8A1: 74 39                 -  je RXC2.exe+23EB8DC
"RXC2.exe"+23EB8A3: B9 30 9A 62 03        -  mov ecx,RXC2.exe+3229A30
"RXC2.exe"+23EB8A8: E8 63 28 00 00        -  call RXC2.exe+23EE110
"RXC2.exe"+23EB8AD: A3 84 A4 60 04        -  mov [RXC2.exe+420A484],eax
"RXC2.exe"+23EB8B2: A1 A0 9B 62 03        -  mov eax,[RXC2.exe+3229BA0]
"RXC2.exe"+23EB8B7: 83 F8 0A              -  cmp eax,0A
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>595</ID>
          <Description>"Max Foes Defeated"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MaxFoesDefeatedX8_AOB,RXC2.exe,66 FF 05 88 A4 60 04 8B 35) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov word ptr [RXC2.exe+420A488],#999
  jmp return

MaxFoesDefeatedX8_AOB:
  jmp newmem
  nop
  nop
return:
registersymbol(MaxFoesDefeatedX8_AOB)

[DISABLE]

MaxFoesDefeatedX8_AOB:
  db 66 FF 05 88 A4 60 04

unregistersymbol(MaxFoesDefeatedX8_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+2431A8B

"RXC2.exe"+2431A6C: 84 C9                 -  test cl,cl
"RXC2.exe"+2431A6E: 75 E4                 -  jne RXC2.exe+2431A54
"RXC2.exe"+2431A70: 33 C0                 -  xor eax,eax
"RXC2.exe"+2431A72: EB 05                 -  jmp RXC2.exe+2431A79
"RXC2.exe"+2431A74: 1B C0                 -  sbb eax,eax
"RXC2.exe"+2431A76: 83 C8 01              -  or eax,01
"RXC2.exe"+2431A79: 85 C0                 -  test eax,eax
"RXC2.exe"+2431A7B: 0F 85 D3 00 00 00     -  jne RXC2.exe+2431B54
"RXC2.exe"+2431A81: F6 47 18 07           -  test byte ptr [edi+18],07
"RXC2.exe"+2431A85: 0F 84 C9 00 00 00     -  je RXC2.exe+2431B54
// ---------- INJECTING HERE ----------
"RXC2.exe"+2431A8B: 66 FF 05 88 A4 60 04  -  inc word ptr [RXC2.exe+420A488]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+2431A92: 8B 35 08 18 73 04     -  mov esi,[RXC2.exe+4331808]
"RXC2.exe"+2431A98: 85 F6                 -  test esi,esi
"RXC2.exe"+2431A9A: 0F 84 B4 00 00 00     -  je RXC2.exe+2431B54
"RXC2.exe"+2431AA0: 39 86 B8 05 00 00     -  cmp [esi+000005B8],eax
"RXC2.exe"+2431AA6: 75 3C                 -  jne RXC2.exe+2431AE4
"RXC2.exe"+2431AA8: A1 28 18 73 04        -  mov eax,[RXC2.exe+4331828]
"RXC2.exe"+2431AAD: 80 B8 C0 21 00 00 00  -  cmp byte ptr [eax+000021C0],00
"RXC2.exe"+2431AB4: 74 19                 -  je RXC2.exe+2431ACF
"RXC2.exe"+2431AB6: 8B 0D 84 D9 68 04     -  mov ecx,[RXC2.exe+428D984]
"RXC2.exe"+2431ABC: 6A 29                 -  push 29
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>580</ID>
          <Description>"Max Highest Hit Combo"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(MaxHitComboX8_AOB,RXC2.exe,0F BF 05 8C A4 60 04) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:
  mov word ptr [RXC2.exe+420A48C],#999
code:
  movsx eax,word ptr [RXC2.exe+420A48C]
  jmp return

MaxHitComboX8_AOB:
  jmp newmem
  nop
  nop
return:
registersymbol(MaxHitComboX8_AOB)

[DISABLE]

MaxHitComboX8_AOB:
  db 0F BF 05 8C A4 60 04

unregistersymbol(MaxHitComboX8_AOB)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+250FA22

"RXC2.exe"+250FA00: 8B 91 34 02 00 00              -  mov edx,[ecx+00000234]
"RXC2.exe"+250FA06: 56                             -  push esi
"RXC2.exe"+250FA07: 8B B1 38 02 00 00              -  mov esi,[ecx+00000238]
"RXC2.exe"+250FA0D: 57                             -  push edi
"RXC2.exe"+250FA0E: 3B F2                          -  cmp esi,edx
"RXC2.exe"+250FA10: 7D 50                          -  jnl RXC2.exe+250FA62
"RXC2.exe"+250FA12: 46                             -  inc esi
"RXC2.exe"+250FA13: 89 B1 38 02 00 00              -  mov [ecx+00000238],esi
"RXC2.exe"+250FA19: 80 3D A8 A4 60 04 00           -  cmp byte ptr [RXC2.exe+420A4A8],00
"RXC2.exe"+250FA20: 75 30                          -  jne RXC2.exe+250FA52
// ---------- INJECTING HERE ----------
"RXC2.exe"+250FA22: 0F BF 05 8C A4 60 04           -  movsx eax,word ptr [RXC2.exe+420A48C]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+250FA29: 3B C6                          -  cmp eax,esi
"RXC2.exe"+250FA2B: 7D 09                          -  jnl RXC2.exe+250FA36
"RXC2.exe"+250FA2D: 66 8B C6                       -  mov ax,si
"RXC2.exe"+250FA30: 66 A3 8C A4 60 04              -  mov [RXC2.exe+420A48C],ax
"RXC2.exe"+250FA36: 0F BF 05 90 A4 60 04           -  movsx eax,word ptr [RXC2.exe+420A490]
"RXC2.exe"+250FA3D: 3B 81 38 02 00 00              -  cmp eax,[ecx+00000238]
"RXC2.exe"+250FA43: 7D 0D                          -  jnl RXC2.exe+250FA52
"RXC2.exe"+250FA45: 66 8B 81 38 02 00 00           -  mov ax,[ecx+00000238]
"RXC2.exe"+250FA4C: 66 A3 90 A4 60 04              -  mov [RXC2.exe+420A490],ax
"RXC2.exe"+250FA52: 8B B1 38 02 00 00              -  mov esi,[ecx+00000238]
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>649</ID>
          <Description>"No Damage"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoDamageX8_AOB,RXC2.exe,80 21 EF C3 CC) // should be unique
registersymbol(NoDamageX8_AOB)

NoDamageX8_AOB:
  db 90 90 90

[DISABLE]

NoDamageX8_AOB:
  db 80 21 EF

unregistersymbol(NoDamageX8_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+23B6A26

"RXC2.exe"+23B6A18: CC                          -  int 3 
"RXC2.exe"+23B6A19: CC                          -  int 3 
"RXC2.exe"+23B6A1A: CC                          -  int 3 
"RXC2.exe"+23B6A1B: CC                          -  int 3 
"RXC2.exe"+23B6A1C: CC                          -  int 3 
"RXC2.exe"+23B6A1D: CC                          -  int 3 
"RXC2.exe"+23B6A1E: CC                          -  int 3 
"RXC2.exe"+23B6A1F: CC                          -  int 3 
"RXC2.exe"+23B6A20: 80 79 38 00                 -  cmp byte ptr [ecx+38],00
"RXC2.exe"+23B6A24: 75 03                       -  jne RXC2.exe+23B6A29
// ---------- INJECTING HERE ----------
"RXC2.exe"+23B6A26: 80 21 EF                    -  and byte ptr [ecx],-11
"RXC2.exe"+23B6A29: C3                          -  ret 
"RXC2.exe"+23B6A2A: CC                          -  int 3 
// ---------- DONE INJECTING  ----------
"RXC2.exe"+23B6A2B: CC                          -  int 3 
"RXC2.exe"+23B6A2C: CC                          -  int 3 
"RXC2.exe"+23B6A2D: CC                          -  int 3 
"RXC2.exe"+23B6A2E: CC                          -  int 3 
"RXC2.exe"+23B6A2F: CC                          -  int 3 
"RXC2.exe"+23B6A30: 53                          -  push ebx
"RXC2.exe"+23B6A31: 56                          -  push esi
"RXC2.exe"+23B6A32: 8B 74 24 0C                 -  mov esi,[esp+0C]
"RXC2.exe"+23B6A36: 57                          -  push edi
"RXC2.exe"+23B6A37: 8B F9                       -  mov edi,ecx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>643</ID>
          <Description>"No Death"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-24
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(NoDeathCharX8_AOB,RXC2.exe,66 FF 05 90 A3 60 04) // should be unique
aobscanmodule(NoDeathSubCharX8_AOB,RXC2.exe,66 FF 05 9C A4 60 04) // should be unique
registersymbol(NoDeathCharX8_AOB)
registersymbol(NoDeathSubCharX8_AOB)

NoDeathCharX8_AOB:
  db 90 90 90 90 90 90 90

NoDeathSubCharX8_AOB:
  db 90 90 90 90 90 90 90

[DISABLE]

NoDeathCharX8_AOB:
  db 66 FF 05 90 A3 60 04

NoDeathSubCharX8_AOB:
  db 66 FF 05 9C A4 60 04

unregistersymbol(NoDeathCharX8_AOB)
unregistersymbol(NoDeathSubCharX8_AOB)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+245BFF5

"RXC2.exe"+245BFB5: B9 88 DB 78 04                 -  mov ecx,RXC2.exe+438DB88
"RXC2.exe"+245BFBA: C6 05 C9 2A 88 04 01           -  mov byte ptr [RXC2.exe+4482AC9],01
"RXC2.exe"+245BFC1: E8 EA FB FB FF                 -  call RXC2.exe+241BBB0
"RXC2.exe"+245BFC6: E8 E5 EB FF FF                 -  call RXC2.exe+245ABB0
"RXC2.exe"+245BFCB: F6 05 0C A0 60 04 80           -  test byte ptr [RXC2.exe+420A00C],-80
"RXC2.exe"+245BFD2: C7 05 D0 2A 88 04 00 00 00 00  -  mov [RXC2.exe+4482AD0],00000000
"RXC2.exe"+245BFDC: C7 05 D4 2A 88 04 D8 F6 21 03  -  mov [RXC2.exe+4482AD4],RXC2.exe+2E1F6D8
"RXC2.exe"+245BFE6: 74 07                          -  je RXC2.exe+245BFEF
"RXC2.exe"+245BFE8: 80 25 14 9C 62 03 FD           -  and byte ptr [RXC2.exe+3229C14],-03
"RXC2.exe"+245BFEF: FF 35 A0 9B 62 03              -  push [RXC2.exe+3229BA0]
// ---------- INJECTING HERE ----------
"RXC2.exe"+245BFF5: 66 FF 05 90 A3 60 04           -  inc word ptr [RXC2.exe+420A390]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+245BFFC: B9 70 A4 60 04                 -  mov ecx,RXC2.exe+420A470
"RXC2.exe"+245C001: 66 FF 05 9C A4 60 04           -  inc word ptr [RXC2.exe+420A49C]
"RXC2.exe"+245C008: E8 F3 AF F5 FF                 -  call RXC2.exe+23B7000
"RXC2.exe"+245C00D: C7 43 14 00 00 00 00           -  mov [ebx+14],00000000
"RXC2.exe"+245C014: E8 57 F2 0A 00                 -  call RXC2.exe+250B270
"RXC2.exe"+245C019: 5F                             -  pop edi
"RXC2.exe"+245C01A: 5E                             -  pop esi
"RXC2.exe"+245C01B: C6 05 F5 17 73 04 00           -  mov byte ptr [RXC2.exe+43317F5],00
"RXC2.exe"+245C022: C6 05 F7 17 73 04 00           -  mov byte ptr [RXC2.exe+43317F7],00
"RXC2.exe"+245C029: 5B                             -  pop ebx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>670</ID>
          <Description>"Freeze Training Rooms Timer"</Description>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : RXC2.exe
  Version: 
  Date   : 2018-08-25
  Author : Gavin

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(FreezeTrainingRoomsTimerX8_AOB,RXC2.exe,FF 4E 08 8B 46 1C) // should be unique
aobscanmodule(FreezeTrainingRoomsTimerX8_AOB2,RXC2.exe,FF 46 08 8B 46 1C) // should be unique
registersymbol(FreezeTrainingRoomsTimerX8_AOB)
registersymbol(FreezeTrainingRoomsTimerX8_AOB2)

FreezeTrainingRoomsTimerX8_AOB:
  db 90 90 90

FreezeTrainingRoomsTimerX8_AOB2:
  db 90 90 90

[DISABLE]

FreezeTrainingRoomsTimerX8_AOB:
  db FF 4E 08

FreezeTrainingRoomsTimerX8_AOB2:
  db FF 46 08

unregistersymbol(FreezeTrainingRoomsTimerX8_AOB)
unregistersymbol(FreezeTrainingRoomsTimerX8_AOB2)

{
// ORIGINAL CODE - INJECTION POINT: "RXC2.exe"+250E023

"RXC2.exe"+250E018: CC                       -  int 3 
"RXC2.exe"+250E019: CC                       -  int 3 
"RXC2.exe"+250E01A: CC                       -  int 3 
"RXC2.exe"+250E01B: CC                       -  int 3 
"RXC2.exe"+250E01C: CC                       -  int 3 
"RXC2.exe"+250E01D: CC                       -  int 3 
"RXC2.exe"+250E01E: CC                       -  int 3 
"RXC2.exe"+250E01F: CC                       -  int 3 
"RXC2.exe"+250E020: 56                       -  push esi
"RXC2.exe"+250E021: 8B F1                    -  mov esi,ecx
// ---------- INJECTING HERE ----------
"RXC2.exe"+250E023: FF 4E 08                 -  dec [esi+08]
"RXC2.exe"+250E026: 8B 46 1C                 -  mov eax,[esi+1C]
// ---------- DONE INJECTING  ----------
"RXC2.exe"+250E029: 3B 46 08                 -  cmp eax,[esi+08]
"RXC2.exe"+250E02C: 7E 03                    -  jle RXC2.exe+250E031
"RXC2.exe"+250E02E: 89 46 08                 -  mov [esi+08],eax
"RXC2.exe"+250E031: B8 C5 B3 A2 91           -  mov eax,91A2B3C5
"RXC2.exe"+250E036: B9 10 0E 00 00           -  mov ecx,00000E10
"RXC2.exe"+250E03B: F7 6E 08                 -  imul [esi+08]
"RXC2.exe"+250E03E: 03 56 08                 -  add edx,[esi+08]
"RXC2.exe"+250E041: C1 FA 0B                 -  sar edx,0B
"RXC2.exe"+250E044: 8B C2                    -  mov eax,edx
"RXC2.exe"+250E046: C1 E8 1F                 -  shr eax,1F
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
    <CheatEntry>
      <ID>786</ID>
      <Description>"Inf Hp X Challange Vol 2"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>RXC2.exe+3391474</Address>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>216000= 1Hour
</Comments>
</CheatTable>
